<<<<<<< HEAD
{"version":3,"sources":["../../../../../lib/xlsx/xform/table/auto-filter-xform.js"],"names":["BaseXform","require","FilterColumnXform","AutoFilterXform","map","filterColumn","model","columns","forEach","column","index","prepare","xmlStream","openNode","tag","ref","autoFilterRef","render","closeNode","node","parser","parseOpen","name","attributes","Error","JSON","stringify","text","parseText","parseClose","push","undefined","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,uBAAD,CAAjC;;IAEME,e;;;;;AACJ,6BAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,GAAL,GAAW;AACTC,MAAAA,YAAY,EAAE,IAAIH,iBAAJ;AADL,KAAX;AAHY;AAMb;;;;4BAMOI,K,EAAO;AAAA;;AACbA,MAAAA,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACvC,QAAA,MAAI,CAACN,GAAL,CAASC,YAAT,CAAsBM,OAAtB,CAA8BF,MAA9B,EAAsC;AAACC,UAAAA,KAAK,EAALA;AAAD,SAAtC;AACD,OAFD;AAGD;;;2BAEME,S,EAAWN,K,EAAO;AAAA;;AACvBM,MAAAA,SAAS,CAACC,QAAV,CAAmB,KAAKC,GAAxB,EAA6B;AAACC,QAAAA,GAAG,EAAET,KAAK,CAACU;AAAZ,OAA7B;AAEAV,MAAAA,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsB,UAAAC,MAAM,EAAI;AAC9B,QAAA,MAAI,CAACL,GAAL,CAASC,YAAT,CAAsBY,MAAtB,CAA6BL,SAA7B,EAAwCH,MAAxC;AACD,OAFD;AAIAG,MAAAA,SAAS,CAACM,SAAV;AACA,aAAO,IAAP;AACD;;;8BAESC,I,EAAM;AACd,UAAI,KAAKC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACA,eAAO,IAAP;AACD;;AACD,cAAQA,IAAI,CAACG,IAAb;AACE,aAAK,KAAKR,GAAV;AACE,eAAKR,KAAL,GAAa;AACXU,YAAAA,aAAa,EAAEG,IAAI,CAACI,UAAL,CAAgBR,GADpB;AAEXR,YAAAA,OAAO,EAAE;AAFE,WAAb;AAIA,iBAAO,IAAP;;AAEF;AACE,eAAKa,MAAL,GAAc,KAAKhB,GAAL,CAASe,IAAI,CAACG,IAAd,CAAd;;AACA,cAAI,KAAKF,MAAT,EAAiB;AACf,iBAAKC,SAAL,CAAeF,IAAf;AACA,mBAAO,IAAP;AACD;;AACD,gBAAM,IAAIK,KAAJ,6CAA+CC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAA/C,EAAN;AAdJ;AAgBD;;;8BAESQ,I,EAAM;AACd,UAAI,KAAKP,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYQ,SAAZ,CAAsBD,IAAtB;AACD;AACF;;;+BAEUL,I,EAAM;AACf,UAAI,KAAKF,MAAT,EAAiB;AACf,YAAI,CAAC,KAAKA,MAAL,CAAYS,UAAZ,CAAuBP,IAAvB,CAAL,EAAmC;AACjC,eAAKhB,KAAL,CAAWC,OAAX,CAAmBuB,IAAnB,CAAwB,KAAKV,MAAL,CAAYd,KAApC;AACA,eAAKc,MAAL,GAAcW,SAAd;AACD;;AACD,eAAO,IAAP;AACD;;AACD,cAAQT,IAAR;AACE,aAAK,KAAKR,GAAV;AACE,iBAAO,KAAP;;AACF;AACE,gBAAM,IAAIU,KAAJ,8CAAgDF,IAAhD,EAAN;AAJJ;AAMD;;;wBAhES;AACR,aAAO,YAAP;AACD;;;;EAX2BtB,S;;AA4E9BgC,MAAM,CAACC,OAAP,GAAiB9B,eAAjB","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nconst FilterColumnXform = require('./filter-column-xform');\r\n\r\nclass AutoFilterXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      filterColumn: new FilterColumnXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'autoFilter';\r\n  }\r\n\r\n  prepare(model) {\r\n    model.columns.forEach((column, index) => {\r\n      this.map.filterColumn.prepare(column, {index});\r\n    });\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag, {ref: model.autoFilterRef});\r\n\r\n    model.columns.forEach(column => {\r\n      this.map.filterColumn.render(xmlStream, column);\r\n    });\r\n\r\n    xmlStream.closeNode();\r\n    return true;\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.model = {\r\n          autoFilterRef: node.attributes.ref,\r\n          columns: [],\r\n        };\r\n        return true;\r\n\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parseOpen(node);\r\n          return true;\r\n        }\r\n        throw new Error(`Unexpected xml node in parseOpen: ${JSON.stringify(node)}`);\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.model.columns.push(this.parser.model);\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        return false;\r\n      default:\r\n        throw new Error(`Unexpected xml node in parseClose: ${name}`);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = AutoFilterXform;\r\n"],"file":"auto-filter-xform.js"}
=======
{"version":3,"file":"auto-filter-xform.js","names":["BaseXform","require","FilterColumnXform","AutoFilterXform","constructor","map","filterColumn","tag","prepare","model","columns","forEach","column","index","render","xmlStream","openNode","ref","autoFilterRef","closeNode","parseOpen","node","parser","name","attributes","Error","JSON","stringify","parseText","text","parseClose","push","undefined","module","exports"],"sources":["../../../../../lib/xlsx/xform/table/auto-filter-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\n\nconst FilterColumnXform = require('./filter-column-xform');\n\nclass AutoFilterXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      filterColumn: new FilterColumnXform(),\n    };\n  }\n\n  get tag() {\n    return 'autoFilter';\n  }\n\n  prepare(model) {\n    model.columns.forEach((column, index) => {\n      this.map.filterColumn.prepare(column, {index});\n    });\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag, {ref: model.autoFilterRef});\n\n    model.columns.forEach(column => {\n      this.map.filterColumn.render(xmlStream, column);\n    });\n\n    xmlStream.closeNode();\n    return true;\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.tag:\n        this.model = {\n          autoFilterRef: node.attributes.ref,\n          columns: [],\n        };\n        return true;\n\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parseOpen(node);\n          return true;\n        }\n        throw new Error(`Unexpected xml node in parseOpen: ${JSON.stringify(node)}`);\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.columns.push(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        return false;\n      default:\n        throw new Error(`Unexpected xml node in parseClose: ${name}`);\n    }\n  }\n}\n\nmodule.exports = AutoFilterXform;\n"],"mappings":";;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE1C,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAE1D,MAAME,eAAe,SAASH,SAAS,CAAC;EACtCI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,GAAG,GAAG;MACTC,YAAY,EAAE,IAAIJ,iBAAiB,CAAC;IACtC,CAAC;EACH;EAEA,IAAIK,GAAGA,CAAA,EAAG;IACR,OAAO,YAAY;EACrB;EAEAC,OAAOA,CAACC,KAAK,EAAE;IACbA,KAAK,CAACC,OAAO,CAACC,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MACvC,IAAI,CAACR,GAAG,CAACC,YAAY,CAACE,OAAO,CAACI,MAAM,EAAE;QAACC;MAAK,CAAC,CAAC;IAChD,CAAC,CAAC;EACJ;EAEAC,MAAMA,CAACC,SAAS,EAAEN,KAAK,EAAE;IACvBM,SAAS,CAACC,QAAQ,CAAC,IAAI,CAACT,GAAG,EAAE;MAACU,GAAG,EAAER,KAAK,CAACS;IAAa,CAAC,CAAC;IAExDT,KAAK,CAACC,OAAO,CAACC,OAAO,CAACC,MAAM,IAAI;MAC9B,IAAI,CAACP,GAAG,CAACC,YAAY,CAACQ,MAAM,CAACC,SAAS,EAAEH,MAAM,CAAC;IACjD,CAAC,CAAC;IAEFG,SAAS,CAACI,SAAS,CAAC,CAAC;IACrB,OAAO,IAAI;EACb;EAEAC,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;MAC3B,OAAO,IAAI;IACb;IACA,QAAQA,IAAI,CAACE,IAAI;MACf,KAAK,IAAI,CAAChB,GAAG;QACX,IAAI,CAACE,KAAK,GAAG;UACXS,aAAa,EAAEG,IAAI,CAACG,UAAU,CAACP,GAAG;UAClCP,OAAO,EAAE;QACX,CAAC;QACD,OAAO,IAAI;MAEb;QACE,IAAI,CAACY,MAAM,GAAG,IAAI,CAACjB,GAAG,CAACgB,IAAI,CAACE,IAAI,CAAC;QACjC,IAAI,IAAI,CAACD,MAAM,EAAE;UACf,IAAI,CAACF,SAAS,CAACC,IAAI,CAAC;UACpB,OAAO,IAAI;QACb;QACA,MAAM,IAAII,KAAK,CAAE,qCAAoCC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAE,EAAC,CAAC;IAChF;EACF;EAEAO,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACP,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACM,SAAS,CAACC,IAAI,CAAC;IAC7B;EACF;EAEAC,UAAUA,CAACP,IAAI,EAAE;IACf,IAAI,IAAI,CAACD,MAAM,EAAE;MACf,IAAI,CAAC,IAAI,CAACA,MAAM,CAACQ,UAAU,CAACP,IAAI,CAAC,EAAE;QACjC,IAAI,CAACd,KAAK,CAACC,OAAO,CAACqB,IAAI,CAAC,IAAI,CAACT,MAAM,CAACb,KAAK,CAAC;QAC1C,IAAI,CAACa,MAAM,GAAGU,SAAS;MACzB;MACA,OAAO,IAAI;IACb;IACA,QAAQT,IAAI;MACV,KAAK,IAAI,CAAChB,GAAG;QACX,OAAO,KAAK;MACd;QACE,MAAM,IAAIkB,KAAK,CAAE,sCAAqCF,IAAK,EAAC,CAAC;IACjE;EACF;AACF;AAEAU,MAAM,CAACC,OAAO,GAAG/B,eAAe"}
>>>>>>> 95bdce0e2476f31a1a1d26b5d1f458cd5295e48d
