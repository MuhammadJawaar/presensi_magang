<<<<<<< HEAD
{"version":3,"sources":["../../../../../lib/xlsx/xform/style/numfmt-xform.js"],"names":["_","require","defaultNumFormats","BaseXform","hashDefaultFormats","hash","each","dnf","id","f","parseInt","defaultFmtHash","NumFmtXform","formatCode","xmlStream","model","leafNode","numFmtId","node","name","attributes","replace","getDefaultFmtId","getDefaultFmtCode","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,CAAC,GAAGC,OAAO,CAAC,2BAAD,CAAjB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,yBAAD,CAAjC;;AAEA,IAAME,SAAS,GAAGF,OAAO,CAAC,eAAD,CAAzB;;AAEA,SAASG,kBAAT,GAA8B;AAC5B,MAAMC,IAAI,GAAG,EAAb;;AACAL,EAAAA,CAAC,CAACM,IAAF,CAAOJ,iBAAP,EAA0B,UAACK,GAAD,EAAMC,EAAN,EAAa;AACrC,QAAID,GAAG,CAACE,CAAR,EAAW;AACTJ,MAAAA,IAAI,CAACE,GAAG,CAACE,CAAL,CAAJ,GAAcC,QAAQ,CAACF,EAAD,EAAK,EAAL,CAAtB;AACD,KAHoC,CAIrC;;AACD,GALD;;AAMA,SAAOH,IAAP;AACD;;AACD,IAAMM,cAAc,GAAGP,kBAAkB,EAAzC,C,CAEA;;IACMQ,W;;;;;AACJ,uBAAYJ,EAAZ,EAAgBK,UAAhB,EAA4B;AAAA;;AAAA;;AAC1B;AAEA,UAAKL,EAAL,GAAUA,EAAV;AACA,UAAKK,UAAL,GAAkBA,UAAlB;AAJ0B;AAK3B;;;;2BAMMC,S,EAAWC,K,EAAO;AACvBD,MAAAA,SAAS,CAACE,QAAV,CAAmB,QAAnB,EAA6B;AAACC,QAAAA,QAAQ,EAAEF,KAAK,CAACP,EAAjB;AAAqBK,QAAAA,UAAU,EAAEE,KAAK,CAACF;AAAvC,OAA7B;AACD;;;8BAESK,I,EAAM;AACd,cAAQA,IAAI,CAACC,IAAb;AACE,aAAK,QAAL;AACE,eAAKJ,KAAL,GAAa;AACXP,YAAAA,EAAE,EAAEE,QAAQ,CAACQ,IAAI,CAACE,UAAL,CAAgBH,QAAjB,EAA2B,EAA3B,CADD;AAEXJ,YAAAA,UAAU,EAAEK,IAAI,CAACE,UAAL,CAAgBP,UAAhB,CAA2BQ,OAA3B,CAAmC,UAAnC,EAA+C,IAA/C;AAFD,WAAb;AAIA,iBAAO,IAAP;;AACF;AACE,iBAAO,KAAP;AARJ;AAUD;;;gCAEW,CAAE;;;iCAED;AACX,aAAO,KAAP;AACD;;;wBAzBS;AACR,aAAO,QAAP;AACD;;;;EAVuBlB,S;;AAoC1BS,WAAW,CAACU,eAAZ,GAA8B,SAASA,eAAT,CAAyBT,UAAzB,EAAqC;AACjE,SAAOF,cAAc,CAACE,UAAD,CAArB;AACD,CAFD;;AAIAD,WAAW,CAACW,iBAAZ,GAAgC,SAASA,iBAAT,CAA2BN,QAA3B,EAAqC;AACnE,SAAOf,iBAAiB,CAACe,QAAD,CAAjB,IAA+Bf,iBAAiB,CAACe,QAAD,CAAjB,CAA4BR,CAAlE;AACD,CAFD;;AAIAe,MAAM,CAACC,OAAP,GAAiBb,WAAjB","sourcesContent":["const _ = require('../../../utils/under-dash');\r\nconst defaultNumFormats = require('../../defaultnumformats');\r\n\r\nconst BaseXform = require('../base-xform');\r\n\r\nfunction hashDefaultFormats() {\r\n  const hash = {};\r\n  _.each(defaultNumFormats, (dnf, id) => {\r\n    if (dnf.f) {\r\n      hash[dnf.f] = parseInt(id, 10);\r\n    }\r\n    // at some point, add the other cultures here...\r\n  });\r\n  return hash;\r\n}\r\nconst defaultFmtHash = hashDefaultFormats();\r\n\r\n// NumFmt encapsulates translation between number format and xlsx\r\nclass NumFmtXform extends BaseXform {\r\n  constructor(id, formatCode) {\r\n    super();\r\n\r\n    this.id = id;\r\n    this.formatCode = formatCode;\r\n  }\r\n\r\n  get tag() {\r\n    return 'numFmt';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.leafNode('numFmt', {numFmtId: model.id, formatCode: model.formatCode});\r\n  }\r\n\r\n  parseOpen(node) {\r\n    switch (node.name) {\r\n      case 'numFmt':\r\n        this.model = {\r\n          id: parseInt(node.attributes.numFmtId, 10),\r\n          formatCode: node.attributes.formatCode.replace(/[\\\\](.)/g, '$1'),\r\n        };\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose() {\r\n    return false;\r\n  }\r\n}\r\n\r\nNumFmtXform.getDefaultFmtId = function getDefaultFmtId(formatCode) {\r\n  return defaultFmtHash[formatCode];\r\n};\r\n\r\nNumFmtXform.getDefaultFmtCode = function getDefaultFmtCode(numFmtId) {\r\n  return defaultNumFormats[numFmtId] && defaultNumFormats[numFmtId].f;\r\n};\r\n\r\nmodule.exports = NumFmtXform;\r\n"],"file":"numfmt-xform.js"}
=======
{"version":3,"file":"numfmt-xform.js","names":["_","require","defaultNumFormats","BaseXform","hashDefaultFormats","hash","each","dnf","id","f","parseInt","defaultFmtHash","NumFmtXform","constructor","formatCode","tag","render","xmlStream","model","leafNode","numFmtId","parseOpen","node","name","attributes","replace","parseText","parseClose","getDefaultFmtId","getDefaultFmtCode","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/numfmt-xform.js"],"sourcesContent":["const _ = require('../../../utils/under-dash');\nconst defaultNumFormats = require('../../defaultnumformats');\n\nconst BaseXform = require('../base-xform');\n\nfunction hashDefaultFormats() {\n  const hash = {};\n  _.each(defaultNumFormats, (dnf, id) => {\n    if (dnf.f) {\n      hash[dnf.f] = parseInt(id, 10);\n    }\n    // at some point, add the other cultures here...\n  });\n  return hash;\n}\nconst defaultFmtHash = hashDefaultFormats();\n\n// NumFmt encapsulates translation between number format and xlsx\nclass NumFmtXform extends BaseXform {\n  constructor(id, formatCode) {\n    super();\n\n    this.id = id;\n    this.formatCode = formatCode;\n  }\n\n  get tag() {\n    return 'numFmt';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.leafNode('numFmt', {numFmtId: model.id, formatCode: model.formatCode});\n  }\n\n  parseOpen(node) {\n    switch (node.name) {\n      case 'numFmt':\n        this.model = {\n          id: parseInt(node.attributes.numFmtId, 10),\n          formatCode: node.attributes.formatCode.replace(/[\\\\](.)/g, '$1'),\n        };\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  parseText() {}\n\n  parseClose() {\n    return false;\n  }\n}\n\nNumFmtXform.getDefaultFmtId = function getDefaultFmtId(formatCode) {\n  return defaultFmtHash[formatCode];\n};\n\nNumFmtXform.getDefaultFmtCode = function getDefaultFmtCode(numFmtId) {\n  return defaultNumFormats[numFmtId] && defaultNumFormats[numFmtId].f;\n};\n\nmodule.exports = NumFmtXform;\n"],"mappings":";;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AAC9C,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAE5D,MAAME,SAAS,GAAGF,OAAO,CAAC,eAAe,CAAC;AAE1C,SAASG,kBAAkBA,CAAA,EAAG;EAC5B,MAAMC,IAAI,GAAG,CAAC,CAAC;EACfL,CAAC,CAACM,IAAI,CAACJ,iBAAiB,EAAE,CAACK,GAAG,EAAEC,EAAE,KAAK;IACrC,IAAID,GAAG,CAACE,CAAC,EAAE;MACTJ,IAAI,CAACE,GAAG,CAACE,CAAC,CAAC,GAAGC,QAAQ,CAACF,EAAE,EAAE,EAAE,CAAC;IAChC;IACA;EACF,CAAC,CAAC;;EACF,OAAOH,IAAI;AACb;AACA,MAAMM,cAAc,GAAGP,kBAAkB,CAAC,CAAC;;AAE3C;AACA,MAAMQ,WAAW,SAAST,SAAS,CAAC;EAClCU,WAAWA,CAACL,EAAE,EAAEM,UAAU,EAAE;IAC1B,KAAK,CAAC,CAAC;IAEP,IAAI,CAACN,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACM,UAAU,GAAGA,UAAU;EAC9B;EAEA,IAAIC,GAAGA,CAAA,EAAG;IACR,OAAO,QAAQ;EACjB;EAEAC,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;IACvBD,SAAS,CAACE,QAAQ,CAAC,QAAQ,EAAE;MAACC,QAAQ,EAAEF,KAAK,CAACV,EAAE;MAAEM,UAAU,EAAEI,KAAK,CAACJ;IAAU,CAAC,CAAC;EAClF;EAEAO,SAASA,CAACC,IAAI,EAAE;IACd,QAAQA,IAAI,CAACC,IAAI;MACf,KAAK,QAAQ;QACX,IAAI,CAACL,KAAK,GAAG;UACXV,EAAE,EAAEE,QAAQ,CAACY,IAAI,CAACE,UAAU,CAACJ,QAAQ,EAAE,EAAE,CAAC;UAC1CN,UAAU,EAAEQ,IAAI,CAACE,UAAU,CAACV,UAAU,CAACW,OAAO,CAAC,UAAU,EAAE,IAAI;QACjE,CAAC;QACD,OAAO,IAAI;MACb;QACE,OAAO,KAAK;IAChB;EACF;EAEAC,SAASA,CAAA,EAAG,CAAC;EAEbC,UAAUA,CAAA,EAAG;IACX,OAAO,KAAK;EACd;AACF;AAEAf,WAAW,CAACgB,eAAe,GAAG,SAASA,eAAeA,CAACd,UAAU,EAAE;EACjE,OAAOH,cAAc,CAACG,UAAU,CAAC;AACnC,CAAC;AAEDF,WAAW,CAACiB,iBAAiB,GAAG,SAASA,iBAAiBA,CAACT,QAAQ,EAAE;EACnE,OAAOlB,iBAAiB,CAACkB,QAAQ,CAAC,IAAIlB,iBAAiB,CAACkB,QAAQ,CAAC,CAACX,CAAC;AACrE,CAAC;AAEDqB,MAAM,CAACC,OAAO,GAAGnB,WAAW"}
>>>>>>> 95bdce0e2476f31a1a1d26b5d1f458cd5295e48d
