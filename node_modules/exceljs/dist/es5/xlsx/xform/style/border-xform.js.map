<<<<<<< HEAD
{"version":3,"sources":["../../../../../lib/xlsx/xform/style/border-xform.js"],"names":["BaseXform","require","ColorXform","EdgeXform","name","map","color","xmlStream","model","defaultColor","openNode","style","addAttribute","render","closeNode","node","parser","parseOpen","attributes","undefined","text","parseText","parseClose","value","validStyleValues","reduce","p","v","BorderXform","top","left","bottom","right","diagonal","up","down","add","edgeModel","edgeXform","reset","diagonalUp","diagonalDown","key","extensions","Object","assign","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable max-classes-per-file */\r\nconst BaseXform = require('../base-xform');\r\n\r\nconst ColorXform = require('./color-xform');\r\n\r\nclass EdgeXform extends BaseXform {\r\n  constructor(name) {\r\n    super();\r\n\r\n    this.name = name;\r\n    this.map = {\r\n      color: new ColorXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return this.name;\r\n  }\r\n\r\n  render(xmlStream, model, defaultColor) {\r\n    const color = (model && model.color) || defaultColor || this.defaultColor;\r\n    xmlStream.openNode(this.name);\r\n    if (model && model.style) {\r\n      xmlStream.addAttribute('style', model.style);\r\n      if (color) {\r\n        this.map.color.render(xmlStream, color);\r\n      }\r\n    }\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.name: {\r\n        const {style} = node.attributes;\r\n        if (style) {\r\n          this.model = {\r\n            style,\r\n          };\r\n        } else {\r\n          this.model = undefined;\r\n        }\r\n        return true;\r\n      }\r\n      case 'color':\r\n        this.parser = this.map.color;\r\n        this.parser.parseOpen(node);\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    if (name === this.name) {\r\n      if (this.map.color.model) {\r\n        if (!this.model) {\r\n          this.model = {};\r\n        }\r\n        this.model.color = this.map.color.model;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  validStyle(value) {\r\n    return EdgeXform.validStyleValues[value];\r\n  }\r\n}\r\n\r\nEdgeXform.validStyleValues = [\r\n  'thin',\r\n  'dotted',\r\n  'dashDot',\r\n  'hair',\r\n  'dashDotDot',\r\n  'slantDashDot',\r\n  'mediumDashed',\r\n  'mediumDashDotDot',\r\n  'mediumDashDot',\r\n  'medium',\r\n  'double',\r\n  'thick',\r\n].reduce((p, v) => {\r\n  p[v] = true;\r\n  return p;\r\n}, {});\r\n\r\n// Border encapsulates translation from border model to/from xlsx\r\nclass BorderXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      top: new EdgeXform('top'),\r\n      left: new EdgeXform('left'),\r\n      bottom: new EdgeXform('bottom'),\r\n      right: new EdgeXform('right'),\r\n      diagonal: new EdgeXform('diagonal'),\r\n    };\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    const {color} = model;\r\n    xmlStream.openNode('border');\r\n    if (model.diagonal && model.diagonal.style) {\r\n      if (model.diagonal.up) {\r\n        xmlStream.addAttribute('diagonalUp', '1');\r\n      }\r\n      if (model.diagonal.down) {\r\n        xmlStream.addAttribute('diagonalDown', '1');\r\n      }\r\n    }\r\n    function add(edgeModel, edgeXform) {\r\n      if (edgeModel && !edgeModel.color && model.color) {\r\n        // don't mess with incoming models\r\n        edgeModel = {\r\n          ...edgeModel,\r\n          color: model.color,\r\n        };\r\n      }\r\n      edgeXform.render(xmlStream, edgeModel, color);\r\n    }\r\n    add(model.left, this.map.left);\r\n    add(model.right, this.map.right);\r\n    add(model.top, this.map.top);\r\n    add(model.bottom, this.map.bottom);\r\n    add(model.diagonal, this.map.diagonal);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'border':\r\n        this.reset();\r\n        this.diagonalUp = !!node.attributes.diagonalUp;\r\n        this.diagonalDown = !!node.attributes.diagonalDown;\r\n        return true;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    if (name === 'border') {\r\n      const model = (this.model = {});\r\n      const add = function(key, edgeModel, extensions) {\r\n        if (edgeModel) {\r\n          if (extensions) {\r\n            Object.assign(edgeModel, extensions);\r\n          }\r\n          model[key] = edgeModel;\r\n        }\r\n      };\r\n      add('left', this.map.left.model);\r\n      add('right', this.map.right.model);\r\n      add('top', this.map.top.model);\r\n      add('bottom', this.map.bottom.model);\r\n      add('diagonal', this.map.diagonal.model, {up: this.diagonalUp, down: this.diagonalDown});\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = BorderXform;\r\n"],"file":"border-xform.js"}
=======
{"version":3,"file":"border-xform.js","names":["BaseXform","require","utils","ColorXform","EdgeXform","constructor","name","map","color","tag","render","xmlStream","model","defaultColor","openNode","style","addAttribute","closeNode","parseOpen","node","parser","attributes","undefined","parseText","text","parseClose","validStyle","value","validStyleValues","reduce","p","v","BorderXform","top","left","bottom","right","diagonal","up","down","add","edgeModel","edgeXform","reset","diagonalUp","parseBoolean","diagonalDown","key","extensions","Object","assign","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/border-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst BaseXform = require('../base-xform');\nconst utils = require('../../../utils/utils');\n\nconst ColorXform = require('./color-xform');\n\nclass EdgeXform extends BaseXform {\n  constructor(name) {\n    super();\n\n    this.name = name;\n    this.map = {\n      color: new ColorXform(),\n    };\n  }\n\n  get tag() {\n    return this.name;\n  }\n\n  render(xmlStream, model, defaultColor) {\n    const color = (model && model.color) || defaultColor || this.defaultColor;\n    xmlStream.openNode(this.name);\n    if (model && model.style) {\n      xmlStream.addAttribute('style', model.style);\n      if (color) {\n        this.map.color.render(xmlStream, color);\n      }\n    }\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.name: {\n        const {style} = node.attributes;\n        if (style) {\n          this.model = {\n            style,\n          };\n        } else {\n          this.model = undefined;\n        }\n        return true;\n      }\n      case 'color':\n        this.parser = this.map.color;\n        this.parser.parseOpen(node);\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n\n    if (name === this.name) {\n      if (this.map.color.model) {\n        if (!this.model) {\n          this.model = {};\n        }\n        this.model.color = this.map.color.model;\n      }\n    }\n\n    return false;\n  }\n\n  validStyle(value) {\n    return EdgeXform.validStyleValues[value];\n  }\n}\n\nEdgeXform.validStyleValues = [\n  'thin',\n  'dashed',\n  'dotted',\n  'dashDot',\n  'hair',\n  'dashDotDot',\n  'slantDashDot',\n  'mediumDashed',\n  'mediumDashDotDot',\n  'mediumDashDot',\n  'medium',\n  'double',\n  'thick',\n].reduce((p, v) => {\n  p[v] = true;\n  return p;\n}, {});\n\n// Border encapsulates translation from border model to/from xlsx\nclass BorderXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      top: new EdgeXform('top'),\n      left: new EdgeXform('left'),\n      bottom: new EdgeXform('bottom'),\n      right: new EdgeXform('right'),\n      diagonal: new EdgeXform('diagonal'),\n    };\n  }\n\n  render(xmlStream, model) {\n    const {color} = model;\n    xmlStream.openNode('border');\n    if (model.diagonal && model.diagonal.style) {\n      if (model.diagonal.up) {\n        xmlStream.addAttribute('diagonalUp', '1');\n      }\n      if (model.diagonal.down) {\n        xmlStream.addAttribute('diagonalDown', '1');\n      }\n    }\n    function add(edgeModel, edgeXform) {\n      if (edgeModel && !edgeModel.color && model.color) {\n        // don't mess with incoming models\n        edgeModel = {\n          ...edgeModel,\n          color: model.color,\n        };\n      }\n      edgeXform.render(xmlStream, edgeModel, color);\n    }\n    add(model.left, this.map.left);\n    add(model.right, this.map.right);\n    add(model.top, this.map.top);\n    add(model.bottom, this.map.bottom);\n    add(model.diagonal, this.map.diagonal);\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'border':\n        this.reset();\n        this.diagonalUp = utils.parseBoolean(node.attributes.diagonalUp);\n        this.diagonalDown = utils.parseBoolean(node.attributes.diagonalDown);\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    if (name === 'border') {\n      const model = (this.model = {});\n      const add = function(key, edgeModel, extensions) {\n        if (edgeModel) {\n          if (extensions) {\n            Object.assign(edgeModel, extensions);\n          }\n          model[key] = edgeModel;\n        }\n      };\n      add('left', this.map.left.model);\n      add('right', this.map.right.model);\n      add('top', this.map.top.model);\n      add('bottom', this.map.bottom.model);\n      add('diagonal', this.map.diagonal.model, {up: this.diagonalUp, down: this.diagonalDown});\n    }\n    return false;\n  }\n}\n\nmodule.exports = BorderXform;\n"],"mappings":"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"}
>>>>>>> 95bdce0e2476f31a1a1d26b5d1f458cd5295e48d
