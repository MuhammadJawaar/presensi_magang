<<<<<<< HEAD
{"version":3,"sources":["../../../../../lib/xlsx/xform/style/dxf-xform.js"],"names":["BaseXform","require","AlignmentXform","BorderXform","FillXform","FontXform","NumFmtXform","ProtectionXform","DxfXform","map","alignment","border","fill","font","numFmt","protection","xmlStream","model","openNode","tag","render","closeNode","node","parser","parseOpen","name","reset","text","parseText","parseClose","undefined","module","exports"],"mappings":"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","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nconst AlignmentXform = require('./alignment-xform');\r\nconst BorderXform = require('./border-xform');\r\nconst FillXform = require('./fill-xform');\r\nconst FontXform = require('./font-xform');\r\nconst NumFmtXform = require('./numfmt-xform');\r\nconst ProtectionXform = require('./protection-xform');\r\n\r\n// <xf numFmtId=\"[numFmtId]\" fontId=\"[fontId]\" fillId=\"[fillId]\" borderId=\"[xf.borderId]\" xfId=\"[xfId]\">\r\n//   Optional <alignment>\r\n//   Optional <protection>\r\n// </xf>\r\n\r\n// Style assists translation from style model to/from xlsx\r\nclass DxfXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      alignment: new AlignmentXform(),\r\n      border: new BorderXform(),\r\n      fill: new FillXform(),\r\n      font: new FontXform(),\r\n      numFmt: new NumFmtXform(),\r\n      protection: new ProtectionXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'dxf';\r\n  }\r\n\r\n  // how do we generate dxfid?\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n\r\n    if (model.font) {\r\n      this.map.font.render(xmlStream, model.font);\r\n    }\r\n    if (model.numFmt) {\r\n      this.map.numFmt.render(xmlStream, model.numFmt);\r\n    }\r\n    if (model.fill) {\r\n      this.map.fill.render(xmlStream, model.fill);\r\n    }\r\n    if (model.alignment) {\r\n      this.map.alignment.render(xmlStream, model.alignment);\r\n    }\r\n    if (model.border) {\r\n      this.map.border.render(xmlStream, model.border);\r\n    }\r\n    if (model.protection) {\r\n      this.map.protection.render(xmlStream, model.protection);\r\n    }\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n\r\n    switch (node.name) {\r\n      case this.tag:\r\n        // this node is often repeated. Need to reset children\r\n        this.reset();\r\n        return true;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        return true;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    if (name === this.tag) {\r\n      this.model = {\r\n        alignment: this.map.alignment.model,\r\n        border: this.map.border.model,\r\n        fill: this.map.fill.model,\r\n        font: this.map.font.model,\r\n        numFmt: this.map.numFmt.model,\r\n        protection: this.map.protection.model,\r\n      };\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nmodule.exports = DxfXform;\r\n"],"file":"dxf-xform.js"}
=======
{"version":3,"file":"dxf-xform.js","names":["BaseXform","require","AlignmentXform","BorderXform","FillXform","FontXform","NumFmtXform","ProtectionXform","DxfXform","constructor","map","alignment","border","fill","font","numFmt","protection","tag","render","xmlStream","model","openNode","numFmtId","numFmtModel","id","formatCode","closeNode","parseOpen","node","parser","name","reset","parseText","text","parseClose","undefined","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/dxf-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\n\nconst AlignmentXform = require('./alignment-xform');\nconst BorderXform = require('./border-xform');\nconst FillXform = require('./fill-xform');\nconst FontXform = require('./font-xform');\nconst NumFmtXform = require('./numfmt-xform');\nconst ProtectionXform = require('./protection-xform');\n\n// <xf numFmtId=\"[numFmtId]\" fontId=\"[fontId]\" fillId=\"[fillId]\" borderId=\"[xf.borderId]\" xfId=\"[xfId]\">\n//   Optional <alignment>\n//   Optional <protection>\n// </xf>\n\n// Style assists translation from style model to/from xlsx\nclass DxfXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      alignment: new AlignmentXform(),\n      border: new BorderXform(),\n      fill: new FillXform(),\n      font: new FontXform(),\n      numFmt: new NumFmtXform(),\n      protection: new ProtectionXform(),\n    };\n  }\n\n  get tag() {\n    return 'dxf';\n  }\n\n  // how do we generate dxfid?\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag);\n\n    if (model.font) {\n      this.map.font.render(xmlStream, model.font);\n    }\n    if (model.numFmt && model.numFmtId) {\n      const numFmtModel = {id: model.numFmtId, formatCode: model.numFmt};\n      this.map.numFmt.render(xmlStream, numFmtModel);\n    }\n    if (model.fill) {\n      this.map.fill.render(xmlStream, model.fill);\n    }\n    if (model.alignment) {\n      this.map.alignment.render(xmlStream, model.alignment);\n    }\n    if (model.border) {\n      this.map.border.render(xmlStream, model.border);\n    }\n    if (model.protection) {\n      this.map.protection.render(xmlStream, model.protection);\n    }\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case this.tag:\n        // this node is often repeated. Need to reset children\n        this.reset();\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        return true;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    if (name === this.tag) {\n      this.model = {\n        alignment: this.map.alignment.model,\n        border: this.map.border.model,\n        fill: this.map.fill.model,\n        font: this.map.font.model,\n        numFmt: this.map.numFmt.model,\n        protection: this.map.protection.model,\n      };\n      return false;\n    }\n\n    return true;\n  }\n}\n\nmodule.exports = DxfXform;\n"],"mappings":"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"}
>>>>>>> 95bdce0e2476f31a1a1d26b5d1f458cd5295e48d
