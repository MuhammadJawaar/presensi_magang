<<<<<<< HEAD
{"version":3,"sources":["../../../../../lib/xlsx/xform/style/styles-xform.js"],"names":["Enums","require","XmlStream","BaseXform","StaticXform","ListXform","FontXform","FillXform","BorderXform","NumFmtXform","StyleXform","DxfXform","NUMFMT_BASE","StylesXform","initialise","map","numFmts","tag","count","childXform","fonts","$","fills","borders","cellStyleXfs","cellXfs","xfId","dxfs","always","numFmt","font","fill","border","style","cellStyles","STATIC_XFORMS","tableStyles","extLst","init","index","numFmtNextId","model","styles","initIndex","_addBorder","_addStyle","numFmtId","fontId","fillId","borderId","_addFill","type","pattern","weakMap","WeakMap","xmlStream","openXml","StdDocAttributes","openNode","STYLESHEET_ATTRIBUTES","length","forEach","numFmtXml","writeXml","closeNode","_addFont","size","color","theme","name","family","scheme","fontXml","fillXml","borderXml","render","styleXml","node","parser","parseOpen","text","parseText","parseClose","undefined","add","propName","xform","numFmtIndex","id","formatCode","cellType","has","get","ValueType","Number","_addNumFmtStr","Date","alignment","protection","styleId","set","getDefaultFmtCode","addStyle","group","part","push","xml","toXml","getDefaultFmtId","xmlns","c","builtinId","defaultTableStyle","defaultPivotStyle","uri","defaultSlicerStyle","defaultTimelineStyle","StylesXformMock","stream","autodrain","Promise","resolve","dateStyleId","_dateStyleId","dateStyle","Mock","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable max-classes-per-file */\r\nconst Enums = require('../../../doc/enums');\r\nconst XmlStream = require('../../../utils/xml-stream');\r\n\r\nconst BaseXform = require('../base-xform');\r\nconst StaticXform = require('../static-xform');\r\nconst ListXform = require('../list-xform');\r\nconst FontXform = require('./font-xform');\r\nconst FillXform = require('./fill-xform');\r\nconst BorderXform = require('./border-xform');\r\nconst NumFmtXform = require('./numfmt-xform');\r\nconst StyleXform = require('./style-xform');\r\nconst DxfXform = require('./dxf-xform');\r\n\r\n// custom numfmt ids start here\r\nconst NUMFMT_BASE = 164;\r\n\r\n// =============================================================================\r\n// StylesXform is used to generate and parse the styles.xml file\r\n// it manages the collections of fonts, number formats, alignments, etc\r\nclass StylesXform extends BaseXform {\r\n  constructor(initialise) {\r\n    super();\r\n\r\n    this.map = {\r\n      numFmts: new ListXform({tag: 'numFmts', count: true, childXform: new NumFmtXform()}),\r\n      fonts: new ListXform({\r\n        tag: 'fonts',\r\n        count: true,\r\n        childXform: new FontXform(),\r\n        $: {'x14ac:knownFonts': 1},\r\n      }),\r\n      fills: new ListXform({tag: 'fills', count: true, childXform: new FillXform()}),\r\n      borders: new ListXform({tag: 'borders', count: true, childXform: new BorderXform()}),\r\n      cellStyleXfs: new ListXform({tag: 'cellStyleXfs', count: true, childXform: new StyleXform()}),\r\n      cellXfs: new ListXform({\r\n        tag: 'cellXfs',\r\n        count: true,\r\n        childXform: new StyleXform({xfId: true}),\r\n      }),\r\n      dxfs: new ListXform({tag: 'dxfs', always: true, count: true, childXform: new DxfXform()}),\r\n\r\n      // for style manager\r\n      numFmt: new NumFmtXform(),\r\n      font: new FontXform(),\r\n      fill: new FillXform(),\r\n      border: new BorderXform(),\r\n      style: new StyleXform({xfId: true}),\r\n\r\n      cellStyles: StylesXform.STATIC_XFORMS.cellStyles,\r\n      tableStyles: StylesXform.STATIC_XFORMS.tableStyles,\r\n      extLst: StylesXform.STATIC_XFORMS.extLst,\r\n    };\r\n\r\n    if (initialise) {\r\n      // StylesXform also acts as style manager and is used to build up styles-model during worksheet processing\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  initIndex() {\r\n    this.index = {\r\n      style: {},\r\n      numFmt: {},\r\n      numFmtNextId: 164, // start custom format ids here\r\n      font: {},\r\n      border: {},\r\n      fill: {},\r\n    };\r\n  }\r\n\r\n  init() {\r\n    // Prepare for Style Manager role\r\n    this.model = {\r\n      styles: [],\r\n      numFmts: [],\r\n      fonts: [],\r\n      borders: [],\r\n      fills: [],\r\n      dxfs: [],\r\n    };\r\n\r\n    this.initIndex();\r\n\r\n    // default (zero) border\r\n    this._addBorder({});\r\n\r\n    // add default (all zero) style\r\n    this._addStyle({numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0});\r\n\r\n    // add default fills\r\n    this._addFill({type: 'pattern', pattern: 'none'});\r\n    this._addFill({type: 'pattern', pattern: 'gray125'});\r\n\r\n    this.weakMap = new WeakMap();\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    model = model || this.model;\r\n    //\r\n    //   <fonts count=\"2\" x14ac:knownFonts=\"1\">\r\n    xmlStream.openXml(XmlStream.StdDocAttributes);\r\n\r\n    xmlStream.openNode('styleSheet', StylesXform.STYLESHEET_ATTRIBUTES);\r\n\r\n    if (this.index) {\r\n      // model has been built by style manager role (contains xml)\r\n      if (model.numFmts && model.numFmts.length) {\r\n        xmlStream.openNode('numFmts', {count: model.numFmts.length});\r\n        model.numFmts.forEach(numFmtXml => {\r\n          xmlStream.writeXml(numFmtXml);\r\n        });\r\n        xmlStream.closeNode();\r\n      }\r\n\r\n      if (!model.fonts.length) {\r\n        // default (zero) font\r\n        this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\r\n      }\r\n      xmlStream.openNode('fonts', {count: model.fonts.length, 'x14ac:knownFonts': 1});\r\n      model.fonts.forEach(fontXml => {\r\n        xmlStream.writeXml(fontXml);\r\n      });\r\n      xmlStream.closeNode();\r\n\r\n      xmlStream.openNode('fills', {count: model.fills.length});\r\n      model.fills.forEach(fillXml => {\r\n        xmlStream.writeXml(fillXml);\r\n      });\r\n      xmlStream.closeNode();\r\n\r\n      xmlStream.openNode('borders', {count: model.borders.length});\r\n      model.borders.forEach(borderXml => {\r\n        xmlStream.writeXml(borderXml);\r\n      });\r\n      xmlStream.closeNode();\r\n\r\n      this.map.cellStyleXfs.render(xmlStream, [\r\n        {numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0},\r\n      ]);\r\n\r\n      xmlStream.openNode('cellXfs', {count: model.styles.length});\r\n      model.styles.forEach(styleXml => {\r\n        xmlStream.writeXml(styleXml);\r\n      });\r\n      xmlStream.closeNode();\r\n    } else {\r\n      // model is plain JSON and needs to be xformed\r\n      this.map.numFmts.render(xmlStream, model.numFmts);\r\n      this.map.fonts.render(xmlStream, model.fonts);\r\n      this.map.fills.render(xmlStream, model.fills);\r\n      this.map.borders.render(xmlStream, model.borders);\r\n      this.map.cellStyleXfs.render(xmlStream, [\r\n        {numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0},\r\n      ]);\r\n      this.map.cellXfs.render(xmlStream, model.styles);\r\n    }\r\n\r\n    StylesXform.STATIC_XFORMS.cellStyles.render(xmlStream);\r\n\r\n    this.map.dxfs.render(xmlStream, model.dxfs);\r\n\r\n    StylesXform.STATIC_XFORMS.tableStyles.render(xmlStream);\r\n    StylesXform.STATIC_XFORMS.extLst.render(xmlStream);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'styleSheet':\r\n        this.initIndex();\r\n        return true;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        return true;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case 'styleSheet': {\r\n        this.model = {};\r\n        const add = (propName, xform) => {\r\n          if (xform.model && xform.model.length) {\r\n            this.model[propName] = xform.model;\r\n          }\r\n        };\r\n        add('numFmts', this.map.numFmts);\r\n        add('fonts', this.map.fonts);\r\n        add('fills', this.map.fills);\r\n        add('borders', this.map.borders);\r\n        add('styles', this.map.cellXfs);\r\n        add('dxfs', this.map.dxfs);\r\n\r\n        // index numFmts\r\n        this.index = {\r\n          model: [],\r\n          numFmt: [],\r\n        };\r\n        if (this.model.numFmts) {\r\n          const numFmtIndex = this.index.numFmt;\r\n          this.model.numFmts.forEach(numFmt => {\r\n            numFmtIndex[numFmt.id] = numFmt.formatCode;\r\n          });\r\n        }\r\n\r\n        return false;\r\n      }\r\n      default:\r\n        // not quite sure how we get here!\r\n        return true;\r\n    }\r\n  }\r\n\r\n  // add a cell's style model to the collection\r\n  // each style property is processed and cross-referenced, etc.\r\n  // the styleId is returned. Note: cellType is used when numFmt not defined\r\n  addStyleModel(model, cellType) {\r\n    if (!model) {\r\n      return 0;\r\n    }\r\n\r\n    // if we have no default font, add it here now\r\n    if (!this.model.fonts.length) {\r\n      // default (zero) font\r\n      this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\r\n    }\r\n\r\n    // if we have seen this style object before, assume it has the same styleId\r\n    if (this.weakMap && this.weakMap.has(model)) {\r\n      return this.weakMap.get(model);\r\n    }\r\n\r\n    const style = {};\r\n    cellType = cellType || Enums.ValueType.Number;\r\n\r\n    if (model.numFmt) {\r\n      style.numFmtId = this._addNumFmtStr(model.numFmt);\r\n    } else {\r\n      switch (cellType) {\r\n        case Enums.ValueType.Number:\r\n          style.numFmtId = this._addNumFmtStr('General');\r\n          break;\r\n        case Enums.ValueType.Date:\r\n          style.numFmtId = this._addNumFmtStr('mm-dd-yy');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (model.font) {\r\n      style.fontId = this._addFont(model.font);\r\n    }\r\n\r\n    if (model.border) {\r\n      style.borderId = this._addBorder(model.border);\r\n    }\r\n\r\n    if (model.fill) {\r\n      style.fillId = this._addFill(model.fill);\r\n    }\r\n\r\n    if (model.alignment) {\r\n      style.alignment = model.alignment;\r\n    }\r\n\r\n    if (model.protection) {\r\n      style.protection = model.protection;\r\n    }\r\n\r\n    const styleId = this._addStyle(style);\r\n    if (this.weakMap) {\r\n      this.weakMap.set(model, styleId);\r\n    }\r\n    return styleId;\r\n  }\r\n\r\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\r\n  // objects are shared where possible.\r\n  getStyleModel(id) {\r\n    // if the style doesn't exist return null\r\n    const style = this.model.styles[id];\r\n    if (!style) return null;\r\n\r\n    // have we built this model before?\r\n    let model = this.index.model[id];\r\n    if (model) return model;\r\n\r\n    // build a new model\r\n    model = this.index.model[id] = {};\r\n\r\n    // -------------------------------------------------------\r\n    // number format\r\n    if (style.numFmtId) {\r\n      const numFmt =\r\n        this.index.numFmt[style.numFmtId] || NumFmtXform.getDefaultFmtCode(style.numFmtId);\r\n      if (numFmt) {\r\n        model.numFmt = numFmt;\r\n      }\r\n    }\r\n\r\n    function addStyle(name, group, styleId) {\r\n      if (styleId || styleId === 0) {\r\n        const part = group[styleId];\r\n        if (part) {\r\n          model[name] = part;\r\n        }\r\n      }\r\n    }\r\n\r\n    addStyle('font', this.model.fonts, style.fontId);\r\n    addStyle('border', this.model.borders, style.borderId);\r\n    addStyle('fill', this.model.fills, style.fillId);\r\n\r\n    // -------------------------------------------------------\r\n    // alignment\r\n    if (style.alignment) {\r\n      model.alignment = style.alignment;\r\n    }\r\n\r\n    // -------------------------------------------------------\r\n    // protection\r\n    if (style.protection) {\r\n      model.protection = style.protection;\r\n    }\r\n\r\n    return model;\r\n  }\r\n\r\n  addDxfStyle(style) {\r\n    this.model.dxfs.push(style);\r\n    return this.model.dxfs.length - 1;\r\n  }\r\n\r\n  getDxfStyle(id) {\r\n    return this.model.dxfs[id];\r\n  }\r\n\r\n  // =========================================================================\r\n  // Private Interface\r\n  _addStyle(style) {\r\n    const xml = this.map.style.toXml(style);\r\n    let index = this.index.style[xml];\r\n    if (index === undefined) {\r\n      index = this.index.style[xml] = this.model.styles.length;\r\n      this.model.styles.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Number Formats\r\n  _addNumFmtStr(formatCode) {\r\n    // check if default format\r\n    let index = NumFmtXform.getDefaultFmtId(formatCode);\r\n    if (index !== undefined) return index;\r\n\r\n    // check if already in\r\n    index = this.index.numFmt[formatCode];\r\n    if (index !== undefined) return index;\r\n\r\n    index = this.index.numFmt[formatCode] = NUMFMT_BASE + this.model.numFmts.length;\r\n    const xml = this.map.numFmt.toXml({id: index, formatCode});\r\n    this.model.numFmts.push(xml);\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Fonts\r\n  _addFont(font) {\r\n    const xml = this.map.font.toXml(font);\r\n    let index = this.index.font[xml];\r\n    if (index === undefined) {\r\n      index = this.index.font[xml] = this.model.fonts.length;\r\n      this.model.fonts.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Borders\r\n  _addBorder(border) {\r\n    const xml = this.map.border.toXml(border);\r\n    let index = this.index.border[xml];\r\n    if (index === undefined) {\r\n      index = this.index.border[xml] = this.model.borders.length;\r\n      this.model.borders.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Fills\r\n  _addFill(fill) {\r\n    const xml = this.map.fill.toXml(fill);\r\n    let index = this.index.fill[xml];\r\n    if (index === undefined) {\r\n      index = this.index.fill[xml] = this.model.fills.length;\r\n      this.model.fills.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n}\r\n\r\nStylesXform.STYLESHEET_ATTRIBUTES = {\r\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\r\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\r\n  'mc:Ignorable': 'x14ac x16r2',\r\n  'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\r\n  'xmlns:x16r2': 'http://schemas.microsoft.com/office/spreadsheetml/2015/02/main',\r\n};\r\nStylesXform.STATIC_XFORMS = {\r\n  cellStyles: new StaticXform({\r\n    tag: 'cellStyles',\r\n    $: {count: 1},\r\n    c: [{tag: 'cellStyle', $: {name: 'Normal', xfId: 0, builtinId: 0}}],\r\n  }),\r\n  dxfs: new StaticXform({tag: 'dxfs', $: {count: 0}}),\r\n  tableStyles: new StaticXform({\r\n    tag: 'tableStyles',\r\n    $: {count: 0, defaultTableStyle: 'TableStyleMedium2', defaultPivotStyle: 'PivotStyleLight16'},\r\n  }),\r\n  extLst: new StaticXform({\r\n    tag: 'extLst',\r\n    c: [\r\n      {\r\n        tag: 'ext',\r\n        $: {\r\n          uri: '{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}',\r\n          'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main',\r\n        },\r\n        c: [{tag: 'x14:slicerStyles', $: {defaultSlicerStyle: 'SlicerStyleLight1'}}],\r\n      },\r\n      {\r\n        tag: 'ext',\r\n        $: {\r\n          uri: '{9260A510-F301-46a8-8635-F512D64BE5F5}',\r\n          'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main',\r\n        },\r\n        c: [{tag: 'x15:timelineStyles', $: {defaultTimelineStyle: 'TimeSlicerStyleLight1'}}],\r\n      },\r\n    ],\r\n  }),\r\n};\r\n\r\n// the stylemanager mock acts like StyleManager except that it always returns 0 or {}\r\nclass StylesXformMock extends StylesXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.model = {\r\n      styles: [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}],\r\n      numFmts: [],\r\n      fonts: [{size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'}],\r\n      borders: [{}],\r\n      fills: [\r\n        {type: 'pattern', pattern: 'none'},\r\n        {type: 'pattern', pattern: 'gray125'},\r\n      ],\r\n    };\r\n  }\r\n\r\n  // =========================================================================\r\n  // Style Manager Interface\r\n\r\n  // override normal behaviour - consume and dispose\r\n  parseStream(stream) {\r\n    stream.autodrain();\r\n    return Promise.resolve();\r\n  }\r\n\r\n  // add a cell's style model to the collection\r\n  // each style property is processed and cross-referenced, etc.\r\n  // the styleId is returned. Note: cellType is used when numFmt not defined\r\n  addStyleModel(model, cellType) {\r\n    switch (cellType) {\r\n      case Enums.ValueType.Date:\r\n        return this.dateStyleId;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  get dateStyleId() {\r\n    if (!this._dateStyleId) {\r\n      const dateStyle = {\r\n        numFmtId: NumFmtXform.getDefaultFmtId('mm-dd-yy'),\r\n      };\r\n      this._dateStyleId = this.model.styles.length;\r\n      this.model.styles.push(dateStyle);\r\n    }\r\n    return this._dateStyleId;\r\n  }\r\n\r\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\r\n  // objects are shared where possible.\r\n  getStyleModel(/* id */) {\r\n    return {};\r\n  }\r\n}\r\n\r\nStylesXform.Mock = StylesXformMock;\r\n\r\nmodule.exports = StylesXform;\r\n"],"file":"styles-xform.js"}
=======
{"version":3,"file":"styles-xform.js","names":["Enums","require","XmlStream","BaseXform","StaticXform","ListXform","FontXform","FillXform","BorderXform","NumFmtXform","StyleXform","DxfXform","NUMFMT_BASE","StylesXform","constructor","initialise","map","numFmts","tag","count","childXform","fonts","$","fills","borders","cellStyleXfs","cellXfs","xfId","dxfs","always","numFmt","font","fill","border","style","cellStyles","STATIC_XFORMS","tableStyles","extLst","init","initIndex","index","numFmtNextId","model","styles","_addBorder","_addStyle","numFmtId","fontId","fillId","borderId","_addFill","type","pattern","weakMap","WeakMap","render","xmlStream","openXml","StdDocAttributes","openNode","STYLESHEET_ATTRIBUTES","length","forEach","numFmtXml","writeXml","closeNode","_addFont","size","color","theme","name","family","scheme","fontXml","fillXml","borderXml","styleXml","parseOpen","node","parser","parseText","text","parseClose","undefined","add","propName","xform","numFmtIndex","id","formatCode","addStyleModel","cellType","has","get","ValueType","Number","_addNumFmtStr","Date","alignment","protection","styleId","set","getStyleModel","getDefaultFmtCode","addStyle","group","part","addDxfStyle","push","getDxfStyle","xml","toXml","getDefaultFmtId","xmlns","c","builtinId","defaultTableStyle","defaultPivotStyle","uri","defaultSlicerStyle","defaultTimelineStyle","StylesXformMock","parseStream","stream","autodrain","Promise","resolve","dateStyleId","_dateStyleId","dateStyle","Mock","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/styles-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst Enums = require('../../../doc/enums');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\nconst StaticXform = require('../static-xform');\nconst ListXform = require('../list-xform');\nconst FontXform = require('./font-xform');\nconst FillXform = require('./fill-xform');\nconst BorderXform = require('./border-xform');\nconst NumFmtXform = require('./numfmt-xform');\nconst StyleXform = require('./style-xform');\nconst DxfXform = require('./dxf-xform');\n\n// custom numfmt ids start here\nconst NUMFMT_BASE = 164;\n\n// =============================================================================\n// StylesXform is used to generate and parse the styles.xml file\n// it manages the collections of fonts, number formats, alignments, etc\nclass StylesXform extends BaseXform {\n  constructor(initialise) {\n    super();\n\n    this.map = {\n      numFmts: new ListXform({tag: 'numFmts', count: true, childXform: new NumFmtXform()}),\n      fonts: new ListXform({\n        tag: 'fonts',\n        count: true,\n        childXform: new FontXform(),\n        $: {'x14ac:knownFonts': 1},\n      }),\n      fills: new ListXform({tag: 'fills', count: true, childXform: new FillXform()}),\n      borders: new ListXform({tag: 'borders', count: true, childXform: new BorderXform()}),\n      cellStyleXfs: new ListXform({tag: 'cellStyleXfs', count: true, childXform: new StyleXform()}),\n      cellXfs: new ListXform({\n        tag: 'cellXfs',\n        count: true,\n        childXform: new StyleXform({xfId: true}),\n      }),\n      dxfs: new ListXform({tag: 'dxfs', always: true, count: true, childXform: new DxfXform()}),\n\n      // for style manager\n      numFmt: new NumFmtXform(),\n      font: new FontXform(),\n      fill: new FillXform(),\n      border: new BorderXform(),\n      style: new StyleXform({xfId: true}),\n\n      cellStyles: StylesXform.STATIC_XFORMS.cellStyles,\n      tableStyles: StylesXform.STATIC_XFORMS.tableStyles,\n      extLst: StylesXform.STATIC_XFORMS.extLst,\n    };\n\n    if (initialise) {\n      // StylesXform also acts as style manager and is used to build up styles-model during worksheet processing\n      this.init();\n    }\n  }\n\n  initIndex() {\n    this.index = {\n      style: {},\n      numFmt: {},\n      numFmtNextId: 164, // start custom format ids here\n      font: {},\n      border: {},\n      fill: {},\n    };\n  }\n\n  init() {\n    // Prepare for Style Manager role\n    this.model = {\n      styles: [],\n      numFmts: [],\n      fonts: [],\n      borders: [],\n      fills: [],\n      dxfs: [],\n    };\n\n    this.initIndex();\n\n    // default (zero) border\n    this._addBorder({});\n\n    // add default (all zero) style\n    this._addStyle({numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0});\n\n    // add default fills\n    this._addFill({type: 'pattern', pattern: 'none'});\n    this._addFill({type: 'pattern', pattern: 'gray125'});\n\n    this.weakMap = new WeakMap();\n  }\n\n  render(xmlStream, model) {\n    model = model || this.model;\n    //\n    //   <fonts count=\"2\" x14ac:knownFonts=\"1\">\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n\n    xmlStream.openNode('styleSheet', StylesXform.STYLESHEET_ATTRIBUTES);\n\n    if (this.index) {\n      // model has been built by style manager role (contains xml)\n      if (model.numFmts && model.numFmts.length) {\n        xmlStream.openNode('numFmts', {count: model.numFmts.length});\n        model.numFmts.forEach(numFmtXml => {\n          xmlStream.writeXml(numFmtXml);\n        });\n        xmlStream.closeNode();\n      }\n\n      if (!model.fonts.length) {\n        // default (zero) font\n        this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\n      }\n      xmlStream.openNode('fonts', {count: model.fonts.length, 'x14ac:knownFonts': 1});\n      model.fonts.forEach(fontXml => {\n        xmlStream.writeXml(fontXml);\n      });\n      xmlStream.closeNode();\n\n      xmlStream.openNode('fills', {count: model.fills.length});\n      model.fills.forEach(fillXml => {\n        xmlStream.writeXml(fillXml);\n      });\n      xmlStream.closeNode();\n\n      xmlStream.openNode('borders', {count: model.borders.length});\n      model.borders.forEach(borderXml => {\n        xmlStream.writeXml(borderXml);\n      });\n      xmlStream.closeNode();\n\n      this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\n\n      xmlStream.openNode('cellXfs', {count: model.styles.length});\n      model.styles.forEach(styleXml => {\n        xmlStream.writeXml(styleXml);\n      });\n      xmlStream.closeNode();\n    } else {\n      // model is plain JSON and needs to be xformed\n      this.map.numFmts.render(xmlStream, model.numFmts);\n      this.map.fonts.render(xmlStream, model.fonts);\n      this.map.fills.render(xmlStream, model.fills);\n      this.map.borders.render(xmlStream, model.borders);\n      this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\n      this.map.cellXfs.render(xmlStream, model.styles);\n    }\n\n    StylesXform.STATIC_XFORMS.cellStyles.render(xmlStream);\n\n    this.map.dxfs.render(xmlStream, model.dxfs);\n\n    StylesXform.STATIC_XFORMS.tableStyles.render(xmlStream);\n    StylesXform.STATIC_XFORMS.extLst.render(xmlStream);\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'styleSheet':\n        this.initIndex();\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        return true;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case 'styleSheet': {\n        this.model = {};\n        const add = (propName, xform) => {\n          if (xform.model && xform.model.length) {\n            this.model[propName] = xform.model;\n          }\n        };\n        add('numFmts', this.map.numFmts);\n        add('fonts', this.map.fonts);\n        add('fills', this.map.fills);\n        add('borders', this.map.borders);\n        add('styles', this.map.cellXfs);\n        add('dxfs', this.map.dxfs);\n\n        // index numFmts\n        this.index = {\n          model: [],\n          numFmt: [],\n        };\n        if (this.model.numFmts) {\n          const numFmtIndex = this.index.numFmt;\n          this.model.numFmts.forEach(numFmt => {\n            numFmtIndex[numFmt.id] = numFmt.formatCode;\n          });\n        }\n\n        return false;\n      }\n      default:\n        // not quite sure how we get here!\n        return true;\n    }\n  }\n\n  // add a cell's style model to the collection\n  // each style property is processed and cross-referenced, etc.\n  // the styleId is returned. Note: cellType is used when numFmt not defined\n  addStyleModel(model, cellType) {\n    if (!model) {\n      return 0;\n    }\n\n    // if we have no default font, add it here now\n    if (!this.model.fonts.length) {\n      // default (zero) font\n      this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\n    }\n\n    // if we have seen this style object before, assume it has the same styleId\n    if (this.weakMap && this.weakMap.has(model)) {\n      return this.weakMap.get(model);\n    }\n\n    const style = {};\n    cellType = cellType || Enums.ValueType.Number;\n\n    if (model.numFmt) {\n      style.numFmtId = this._addNumFmtStr(model.numFmt);\n    } else {\n      switch (cellType) {\n        case Enums.ValueType.Number:\n          style.numFmtId = this._addNumFmtStr('General');\n          break;\n        case Enums.ValueType.Date:\n          style.numFmtId = this._addNumFmtStr('mm-dd-yy');\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (model.font) {\n      style.fontId = this._addFont(model.font);\n    }\n\n    if (model.border) {\n      style.borderId = this._addBorder(model.border);\n    }\n\n    if (model.fill) {\n      style.fillId = this._addFill(model.fill);\n    }\n\n    if (model.alignment) {\n      style.alignment = model.alignment;\n    }\n\n    if (model.protection) {\n      style.protection = model.protection;\n    }\n\n    const styleId = this._addStyle(style);\n    if (this.weakMap) {\n      this.weakMap.set(model, styleId);\n    }\n    return styleId;\n  }\n\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\n  // objects are shared where possible.\n  getStyleModel(id) {\n    // if the style doesn't exist return null\n    const style = this.model.styles[id];\n    if (!style) return null;\n\n    // have we built this model before?\n    let model = this.index.model[id];\n    if (model) return model;\n\n    // build a new model\n    model = this.index.model[id] = {};\n\n    // -------------------------------------------------------\n    // number format\n    if (style.numFmtId) {\n      const numFmt = this.index.numFmt[style.numFmtId] || NumFmtXform.getDefaultFmtCode(style.numFmtId);\n      if (numFmt) {\n        model.numFmt = numFmt;\n      }\n    }\n\n    function addStyle(name, group, styleId) {\n      if (styleId || styleId === 0) {\n        const part = group[styleId];\n        if (part) {\n          model[name] = part;\n        }\n      }\n    }\n\n    addStyle('font', this.model.fonts, style.fontId);\n    addStyle('border', this.model.borders, style.borderId);\n    addStyle('fill', this.model.fills, style.fillId);\n\n    // -------------------------------------------------------\n    // alignment\n    if (style.alignment) {\n      model.alignment = style.alignment;\n    }\n\n    // -------------------------------------------------------\n    // protection\n    if (style.protection) {\n      model.protection = style.protection;\n    }\n\n    return model;\n  }\n\n  addDxfStyle(style) {\n    if (style.numFmt) {\n      // register numFmtId to use it during dxf-xform rendering\n      style.numFmtId = this._addNumFmtStr(style.numFmt);\n    }\n\n    this.model.dxfs.push(style);\n    return this.model.dxfs.length - 1;\n  }\n\n  getDxfStyle(id) {\n    return this.model.dxfs[id];\n  }\n\n  // =========================================================================\n  // Private Interface\n  _addStyle(style) {\n    const xml = this.map.style.toXml(style);\n    let index = this.index.style[xml];\n    if (index === undefined) {\n      index = this.index.style[xml] = this.model.styles.length;\n      this.model.styles.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Number Formats\n  _addNumFmtStr(formatCode) {\n    // check if default format\n    let index = NumFmtXform.getDefaultFmtId(formatCode);\n    if (index !== undefined) return index;\n\n    // check if already in\n    index = this.index.numFmt[formatCode];\n    if (index !== undefined) return index;\n\n    index = this.index.numFmt[formatCode] = NUMFMT_BASE + this.model.numFmts.length;\n    const xml = this.map.numFmt.toXml({id: index, formatCode});\n    this.model.numFmts.push(xml);\n    return index;\n  }\n\n  // =========================================================================\n  // Fonts\n  _addFont(font) {\n    const xml = this.map.font.toXml(font);\n    let index = this.index.font[xml];\n    if (index === undefined) {\n      index = this.index.font[xml] = this.model.fonts.length;\n      this.model.fonts.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Borders\n  _addBorder(border) {\n    const xml = this.map.border.toXml(border);\n    let index = this.index.border[xml];\n    if (index === undefined) {\n      index = this.index.border[xml] = this.model.borders.length;\n      this.model.borders.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Fills\n  _addFill(fill) {\n    const xml = this.map.fill.toXml(fill);\n    let index = this.index.fill[xml];\n    if (index === undefined) {\n      index = this.index.fill[xml] = this.model.fills.length;\n      this.model.fills.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n}\n\nStylesXform.STYLESHEET_ATTRIBUTES = {\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n  'mc:Ignorable': 'x14ac x16r2',\n  'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n  'xmlns:x16r2': 'http://schemas.microsoft.com/office/spreadsheetml/2015/02/main',\n};\nStylesXform.STATIC_XFORMS = {\n  cellStyles: new StaticXform({\n    tag: 'cellStyles',\n    $: {count: 1},\n    c: [{tag: 'cellStyle', $: {name: 'Normal', xfId: 0, builtinId: 0}}],\n  }),\n  dxfs: new StaticXform({tag: 'dxfs', $: {count: 0}}),\n  tableStyles: new StaticXform({\n    tag: 'tableStyles',\n    $: {count: 0, defaultTableStyle: 'TableStyleMedium2', defaultPivotStyle: 'PivotStyleLight16'},\n  }),\n  extLst: new StaticXform({\n    tag: 'extLst',\n    c: [\n      {\n        tag: 'ext',\n        $: {\n          uri: '{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}',\n          'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main',\n        },\n        c: [{tag: 'x14:slicerStyles', $: {defaultSlicerStyle: 'SlicerStyleLight1'}}],\n      },\n      {\n        tag: 'ext',\n        $: {\n          uri: '{9260A510-F301-46a8-8635-F512D64BE5F5}',\n          'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main',\n        },\n        c: [{tag: 'x15:timelineStyles', $: {defaultTimelineStyle: 'TimeSlicerStyleLight1'}}],\n      },\n    ],\n  }),\n};\n\n// the stylemanager mock acts like StyleManager except that it always returns 0 or {}\nclass StylesXformMock extends StylesXform {\n  constructor() {\n    super();\n\n    this.model = {\n      styles: [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}],\n      numFmts: [],\n      fonts: [{size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'}],\n      borders: [{}],\n      fills: [\n        {type: 'pattern', pattern: 'none'},\n        {type: 'pattern', pattern: 'gray125'},\n      ],\n    };\n  }\n\n  // =========================================================================\n  // Style Manager Interface\n\n  // override normal behaviour - consume and dispose\n  parseStream(stream) {\n    stream.autodrain();\n    return Promise.resolve();\n  }\n\n  // add a cell's style model to the collection\n  // each style property is processed and cross-referenced, etc.\n  // the styleId is returned. Note: cellType is used when numFmt not defined\n  addStyleModel(model, cellType) {\n    switch (cellType) {\n      case Enums.ValueType.Date:\n        return this.dateStyleId;\n      default:\n        return 0;\n    }\n  }\n\n  get dateStyleId() {\n    if (!this._dateStyleId) {\n      const dateStyle = {\n        numFmtId: NumFmtXform.getDefaultFmtId('mm-dd-yy'),\n      };\n      this._dateStyleId = this.model.styles.length;\n      this.model.styles.push(dateStyle);\n    }\n    return this._dateStyleId;\n  }\n\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\n  // objects are shared where possible.\n  getStyleModel(/* id */) {\n    return {};\n  }\n}\n\nStylesXform.Mock = StylesXformMock;\n\nmodule.exports = StylesXform;\n"],"mappings":"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"}
>>>>>>> 95bdce0e2476f31a1a1d26b5d1f458cd5295e48d
