<<<<<<< HEAD
{"version":3,"sources":["../../../../../lib/xlsx/xform/style/fill-xform.js"],"names":["BaseXform","require","ColorXform","StopXform","map","color","xmlStream","model","openNode","addAttribute","position","render","closeNode","node","parser","parseOpen","name","parseFloat","attributes","parseClose","undefined","PatternFillXform","fgColor","bgColor","pattern","type","patternType","text","parseText","GradientFillXform","stop","gradient","degree","center","left","right","top","bottom","stopXform","stops","forEach","stopModel","parseInt","push","FillXform","patternFill","gradientFill","addRollback","rollback","commit","value","validPatternValues","reduce","p","v","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable max-classes-per-file */\r\nconst BaseXform = require('../base-xform');\r\n\r\nconst ColorXform = require('./color-xform');\r\n\r\nclass StopXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      color: new ColorXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'stop';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode('stop');\r\n    xmlStream.addAttribute('position', model.position);\r\n    this.map.color.render(xmlStream, model.color);\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'stop':\r\n        this.model = {\r\n          position: parseFloat(node.attributes.position),\r\n        };\r\n        return true;\r\n      case 'color':\r\n        this.parser = this.map.color;\r\n        this.parser.parseOpen(node);\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.model.color = this.parser.model;\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nclass PatternFillXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      fgColor: new ColorXform('fgColor'),\r\n      bgColor: new ColorXform('bgColor'),\r\n    };\r\n  }\r\n\r\n  get name() {\r\n    return 'pattern';\r\n  }\r\n\r\n  get tag() {\r\n    return 'patternFill';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode('patternFill');\r\n    xmlStream.addAttribute('patternType', model.pattern);\r\n    if (model.fgColor) {\r\n      this.map.fgColor.render(xmlStream, model.fgColor);\r\n    }\r\n    if (model.bgColor) {\r\n      this.map.bgColor.render(xmlStream, model.bgColor);\r\n    }\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'patternFill':\r\n        this.model = {\r\n          type: 'pattern',\r\n          pattern: node.attributes.patternType,\r\n        };\r\n        return true;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        if (this.parser.model) {\r\n          this.model[name] = this.parser.model;\r\n        }\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nclass GradientFillXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      stop: new StopXform(),\r\n    };\r\n    // if (model) {\r\n    //   this.gradient = model.gradient;\r\n    //   if (model.center) {\r\n    //     this.center = model.center;\r\n    //   }\r\n    //   if (model.degree !== undefined) {\r\n    //     this.degree = model.degree;\r\n    //   }\r\n    //   this.stops = model.stops.map(function(stop) { return new StopXform(stop); });\r\n    // } else {\r\n    //   this.stops = [];\r\n    // }\r\n  }\r\n\r\n  get name() {\r\n    return 'gradient';\r\n  }\r\n\r\n  get tag() {\r\n    return 'gradientFill';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode('gradientFill');\r\n    switch (model.gradient) {\r\n      case 'angle':\r\n        xmlStream.addAttribute('degree', model.degree);\r\n        break;\r\n      case 'path':\r\n        xmlStream.addAttribute('type', 'path');\r\n        if (model.center.left) {\r\n          xmlStream.addAttribute('left', model.center.left);\r\n          if (model.center.right === undefined) {\r\n            xmlStream.addAttribute('right', model.center.left);\r\n          }\r\n        }\r\n        if (model.center.right) {\r\n          xmlStream.addAttribute('right', model.center.right);\r\n        }\r\n        if (model.center.top) {\r\n          xmlStream.addAttribute('top', model.center.top);\r\n          if (model.center.bottom === undefined) {\r\n            xmlStream.addAttribute('bottom', model.center.top);\r\n          }\r\n        }\r\n        if (model.center.bottom) {\r\n          xmlStream.addAttribute('bottom', model.center.bottom);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const stopXform = this.map.stop;\r\n    model.stops.forEach(stopModel => {\r\n      stopXform.render(xmlStream, stopModel);\r\n    });\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'gradientFill': {\r\n        const model = (this.model = {\r\n          stops: [],\r\n        });\r\n        if (node.attributes.degree) {\r\n          model.gradient = 'angle';\r\n          model.degree = parseInt(node.attributes.degree, 10);\r\n        } else if (node.attributes.type === 'path') {\r\n          model.gradient = 'path';\r\n          model.center = {\r\n            left: node.attributes.left ? parseFloat(node.attributes.left) : 0,\r\n            top: node.attributes.top ? parseFloat(node.attributes.top) : 0,\r\n          };\r\n          if (node.attributes.right !== node.attributes.left) {\r\n            model.center.right = node.attributes.right ? parseFloat(node.attributes.right) : 0;\r\n          }\r\n          if (node.attributes.bottom !== node.attributes.top) {\r\n            model.center.bottom = node.attributes.bottom ? parseFloat(node.attributes.bottom) : 0;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n\r\n      case 'stop':\r\n        this.parser = this.map.stop;\r\n        this.parser.parseOpen(node);\r\n        return true;\r\n\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.model.stops.push(this.parser.model);\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\n// Fill encapsulates translation from fill model to/from xlsx\r\nclass FillXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      patternFill: new PatternFillXform(),\r\n      gradientFill: new GradientFillXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'fill';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.addRollback();\r\n    xmlStream.openNode('fill');\r\n    switch (model.type) {\r\n      case 'pattern':\r\n        this.map.patternFill.render(xmlStream, model);\r\n        break;\r\n      case 'gradient':\r\n        this.map.gradientFill.render(xmlStream, model);\r\n        break;\r\n      default:\r\n        xmlStream.rollback();\r\n        return;\r\n    }\r\n    xmlStream.closeNode();\r\n    xmlStream.commit();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'fill':\r\n        this.model = {};\r\n        return true;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.model = this.parser.model;\r\n        this.model.type = this.parser.name;\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  validStyle(value) {\r\n    return FillXform.validPatternValues[value];\r\n  }\r\n}\r\n\r\nFillXform.validPatternValues = [\r\n  'none',\r\n  'solid',\r\n  'darkVertical',\r\n  'darkGray',\r\n  'mediumGray',\r\n  'lightGray',\r\n  'gray125',\r\n  'gray0625',\r\n  'darkHorizontal',\r\n  'darkVertical',\r\n  'darkDown',\r\n  'darkUp',\r\n  'darkGrid',\r\n  'darkTrellis',\r\n  'lightHorizontal',\r\n  'lightVertical',\r\n  'lightDown',\r\n  'lightUp',\r\n  'lightGrid',\r\n  'lightTrellis',\r\n  'lightGrid',\r\n].reduce((p, v) => {\r\n  p[v] = true;\r\n  return p;\r\n}, {});\r\n\r\nFillXform.StopXform = StopXform;\r\nFillXform.PatternFillXform = PatternFillXform;\r\nFillXform.GradientFillXform = GradientFillXform;\r\n\r\nmodule.exports = FillXform;\r\n"],"file":"fill-xform.js"}
=======
{"version":3,"file":"fill-xform.js","names":["BaseXform","require","ColorXform","StopXform","constructor","map","color","tag","render","xmlStream","model","openNode","addAttribute","position","closeNode","parseOpen","node","parser","name","parseFloat","attributes","parseText","parseClose","undefined","PatternFillXform","fgColor","bgColor","pattern","type","patternType","text","GradientFillXform","stop","gradient","degree","center","left","right","top","bottom","stopXform","stops","forEach","stopModel","parseInt","push","FillXform","patternFill","gradientFill","addRollback","rollback","commit","validStyle","value","validPatternValues","reduce","p","v","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/fill-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst BaseXform = require('../base-xform');\n\nconst ColorXform = require('./color-xform');\n\nclass StopXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      color: new ColorXform(),\n    };\n  }\n\n  get tag() {\n    return 'stop';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode('stop');\n    xmlStream.addAttribute('position', model.position);\n    this.map.color.render(xmlStream, model.color);\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'stop':\n        this.model = {\n          position: parseFloat(node.attributes.position),\n        };\n        return true;\n      case 'color':\n        this.parser = this.map.color;\n        this.parser.parseOpen(node);\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  parseText() {}\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.color = this.parser.model;\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nclass PatternFillXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      fgColor: new ColorXform('fgColor'),\n      bgColor: new ColorXform('bgColor'),\n    };\n  }\n\n  get name() {\n    return 'pattern';\n  }\n\n  get tag() {\n    return 'patternFill';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode('patternFill');\n    xmlStream.addAttribute('patternType', model.pattern);\n    if (model.fgColor) {\n      this.map.fgColor.render(xmlStream, model.fgColor);\n    }\n    if (model.bgColor) {\n      this.map.bgColor.render(xmlStream, model.bgColor);\n    }\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'patternFill':\n        this.model = {\n          type: 'pattern',\n          pattern: node.attributes.patternType,\n        };\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        if (this.parser.model) {\n          this.model[name] = this.parser.model;\n        }\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nclass GradientFillXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      stop: new StopXform(),\n    };\n    // if (model) {\n    //   this.gradient = model.gradient;\n    //   if (model.center) {\n    //     this.center = model.center;\n    //   }\n    //   if (model.degree !== undefined) {\n    //     this.degree = model.degree;\n    //   }\n    //   this.stops = model.stops.map(function(stop) { return new StopXform(stop); });\n    // } else {\n    //   this.stops = [];\n    // }\n  }\n\n  get name() {\n    return 'gradient';\n  }\n\n  get tag() {\n    return 'gradientFill';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode('gradientFill');\n    switch (model.gradient) {\n      case 'angle':\n        xmlStream.addAttribute('degree', model.degree);\n        break;\n      case 'path':\n        xmlStream.addAttribute('type', 'path');\n        if (model.center.left) {\n          xmlStream.addAttribute('left', model.center.left);\n          if (model.center.right === undefined) {\n            xmlStream.addAttribute('right', model.center.left);\n          }\n        }\n        if (model.center.right) {\n          xmlStream.addAttribute('right', model.center.right);\n        }\n        if (model.center.top) {\n          xmlStream.addAttribute('top', model.center.top);\n          if (model.center.bottom === undefined) {\n            xmlStream.addAttribute('bottom', model.center.top);\n          }\n        }\n        if (model.center.bottom) {\n          xmlStream.addAttribute('bottom', model.center.bottom);\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    const stopXform = this.map.stop;\n    model.stops.forEach(stopModel => {\n      stopXform.render(xmlStream, stopModel);\n    });\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'gradientFill': {\n        const model = (this.model = {\n          stops: [],\n        });\n        if (node.attributes.degree) {\n          model.gradient = 'angle';\n          model.degree = parseInt(node.attributes.degree, 10);\n        } else if (node.attributes.type === 'path') {\n          model.gradient = 'path';\n          model.center = {\n            left: node.attributes.left ? parseFloat(node.attributes.left) : 0,\n            top: node.attributes.top ? parseFloat(node.attributes.top) : 0,\n          };\n          if (node.attributes.right !== node.attributes.left) {\n            model.center.right = node.attributes.right ? parseFloat(node.attributes.right) : 0;\n          }\n          if (node.attributes.bottom !== node.attributes.top) {\n            model.center.bottom = node.attributes.bottom ? parseFloat(node.attributes.bottom) : 0;\n          }\n        }\n        return true;\n      }\n\n      case 'stop':\n        this.parser = this.map.stop;\n        this.parser.parseOpen(node);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.stops.push(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\n// Fill encapsulates translation from fill model to/from xlsx\nclass FillXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      patternFill: new PatternFillXform(),\n      gradientFill: new GradientFillXform(),\n    };\n  }\n\n  get tag() {\n    return 'fill';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.addRollback();\n    xmlStream.openNode('fill');\n    switch (model.type) {\n      case 'pattern':\n        this.map.patternFill.render(xmlStream, model);\n        break;\n      case 'gradient':\n        this.map.gradientFill.render(xmlStream, model);\n        break;\n      default:\n        xmlStream.rollback();\n        return;\n    }\n    xmlStream.closeNode();\n    xmlStream.commit();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'fill':\n        this.model = {};\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model = this.parser.model;\n        this.model.type = this.parser.name;\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  validStyle(value) {\n    return FillXform.validPatternValues[value];\n  }\n}\n\nFillXform.validPatternValues = [\n  'none',\n  'solid',\n  'darkVertical',\n  'darkGray',\n  'mediumGray',\n  'lightGray',\n  'gray125',\n  'gray0625',\n  'darkHorizontal',\n  'darkVertical',\n  'darkDown',\n  'darkUp',\n  'darkGrid',\n  'darkTrellis',\n  'lightHorizontal',\n  'lightVertical',\n  'lightDown',\n  'lightUp',\n  'lightGrid',\n  'lightTrellis',\n  'lightGrid',\n].reduce((p, v) => {\n  p[v] = true;\n  return p;\n}, {});\n\nFillXform.StopXform = StopXform;\nFillXform.PatternFillXform = PatternFillXform;\nFillXform.GradientFillXform = GradientFillXform;\n\nmodule.exports = FillXform;\n"],"mappings":"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"}
>>>>>>> 95bdce0e2476f31a1a1d26b5d1f458cd5295e48d
