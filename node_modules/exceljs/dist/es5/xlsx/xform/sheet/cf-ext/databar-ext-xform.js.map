<<<<<<< HEAD
{"version":3,"sources":["../../../../../../lib/xlsx/xform/sheet/cf-ext/databar-ext-xform.js"],"names":["BaseXform","require","CompositeXform","ColorXform","CfvoExtXform","DatabarExtXform","map","cfvoXform","borderColorXform","negativeBorderColorXform","negativeFillColorXform","axisColorXform","xmlStream","model","openNode","tag","minLength","toIntAttribute","maxLength","border","toBoolAttribute","gradient","negativeBarColorSameAsPositive","negativeBarBorderColorSameAsPositive","axisPosition","toAttribute","direction","cfvo","forEach","render","borderColor","negativeBorderColor","negativeFillColor","axisColor","closeNode","attributes","toIntValue","toBoolValue","toStringValue","name","parser","split","prop","push","rule","module","exports"],"mappings":"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","sourcesContent":["const BaseXform = require('../../base-xform');\r\nconst CompositeXform = require('../../composite-xform');\r\n\r\nconst ColorXform = require('../../style/color-xform');\r\nconst CfvoExtXform = require('./cfvo-ext-xform');\r\n\r\nclass DatabarExtXform extends CompositeXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      'x14:cfvo': (this.cfvoXform = new CfvoExtXform()),\r\n      'x14:borderColor': (this.borderColorXform = new ColorXform('x14:borderColor')),\r\n      'x14:negativeBorderColor': (this.negativeBorderColorXform = new ColorXform(\r\n        'x14:negativeBorderColor'\r\n      )),\r\n      'x14:negativeFillColor': (this.negativeFillColorXform = new ColorXform(\r\n        'x14:negativeFillColor'\r\n      )),\r\n      'x14:axisColor': (this.axisColorXform = new ColorXform('x14:axisColor')),\r\n    };\r\n  }\r\n\r\n  static isExt(rule) {\r\n    // not all databars need ext\r\n    // TODO: refine this\r\n    return !rule.gradient;\r\n  }\r\n\r\n  get tag() {\r\n    return 'x14:dataBar';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag, {\r\n      minLength: BaseXform.toIntAttribute(model.minLength, 0, true),\r\n      maxLength: BaseXform.toIntAttribute(model.maxLength, 100, true),\r\n      border: BaseXform.toBoolAttribute(model.border, false),\r\n      gradient: BaseXform.toBoolAttribute(model.gradient, true),\r\n      negativeBarColorSameAsPositive: BaseXform.toBoolAttribute(\r\n        model.negativeBarColorSameAsPositive,\r\n        true\r\n      ),\r\n      negativeBarBorderColorSameAsPositive: BaseXform.toBoolAttribute(\r\n        model.negativeBarBorderColorSameAsPositive,\r\n        true\r\n      ),\r\n      axisPosition: BaseXform.toAttribute(model.axisPosition, 'auto'),\r\n      direction: BaseXform.toAttribute(model.direction, 'leftToRight'),\r\n    });\r\n\r\n    model.cfvo.forEach(cfvo => {\r\n      this.cfvoXform.render(xmlStream, cfvo);\r\n    });\r\n\r\n    this.borderColorXform.render(xmlStream, model.borderColor);\r\n    this.negativeBorderColorXform.render(xmlStream, model.negativeBorderColor);\r\n    this.negativeFillColorXform.render(xmlStream, model.negativeFillColor);\r\n    this.axisColorXform.render(xmlStream, model.axisColor);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  createNewModel({attributes}) {\r\n    return {\r\n      cfvo: [],\r\n      minLength: BaseXform.toIntValue(attributes.minLength, 0),\r\n      maxLength: BaseXform.toIntValue(attributes.maxLength, 100),\r\n      border: BaseXform.toBoolValue(attributes.border, false),\r\n      gradient: BaseXform.toBoolValue(attributes.gradient, true),\r\n      negativeBarColorSameAsPositive: BaseXform.toBoolValue(\r\n        attributes.negativeBarColorSameAsPositive,\r\n        true\r\n      ),\r\n      negativeBarBorderColorSameAsPositive: BaseXform.toBoolValue(\r\n        attributes.negativeBarBorderColorSameAsPositive,\r\n        true\r\n      ),\r\n      axisPosition: BaseXform.toStringValue(attributes.axisPosition, 'auto'),\r\n      direction: BaseXform.toStringValue(attributes.direction, 'leftToRight'),\r\n    };\r\n  }\r\n\r\n  onParserClose(name, parser) {\r\n    const [, prop] = name.split(':');\r\n    switch (prop) {\r\n      case 'cfvo':\r\n        this.model.cfvo.push(parser.model);\r\n        break;\r\n\r\n      default:\r\n        this.model[prop] = parser.model;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = DatabarExtXform;\r\n"],"file":"databar-ext-xform.js"}
=======
{"version":3,"file":"databar-ext-xform.js","names":["BaseXform","require","CompositeXform","ColorXform","CfvoExtXform","DatabarExtXform","constructor","map","cfvoXform","borderColorXform","negativeBorderColorXform","negativeFillColorXform","axisColorXform","isExt","rule","gradient","tag","render","xmlStream","model","openNode","minLength","toIntAttribute","maxLength","border","toBoolAttribute","negativeBarColorSameAsPositive","negativeBarBorderColorSameAsPositive","axisPosition","toAttribute","direction","cfvo","forEach","borderColor","negativeBorderColor","negativeFillColor","axisColor","closeNode","createNewModel","_ref","attributes","toIntValue","toBoolValue","toStringValue","onParserClose","name","parser","prop","split","push","module","exports"],"sources":["../../../../../../lib/xlsx/xform/sheet/cf-ext/databar-ext-xform.js"],"sourcesContent":["const BaseXform = require('../../base-xform');\nconst CompositeXform = require('../../composite-xform');\n\nconst ColorXform = require('../../style/color-xform');\nconst CfvoExtXform = require('./cfvo-ext-xform');\n\nclass DatabarExtXform extends CompositeXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'x14:cfvo': (this.cfvoXform = new CfvoExtXform()),\n      'x14:borderColor': (this.borderColorXform = new ColorXform('x14:borderColor')),\n      'x14:negativeBorderColor': (this.negativeBorderColorXform = new ColorXform(\n        'x14:negativeBorderColor'\n      )),\n      'x14:negativeFillColor': (this.negativeFillColorXform = new ColorXform(\n        'x14:negativeFillColor'\n      )),\n      'x14:axisColor': (this.axisColorXform = new ColorXform('x14:axisColor')),\n    };\n  }\n\n  static isExt(rule) {\n    // not all databars need ext\n    // TODO: refine this\n    return !rule.gradient;\n  }\n\n  get tag() {\n    return 'x14:dataBar';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      minLength: BaseXform.toIntAttribute(model.minLength, 0, true),\n      maxLength: BaseXform.toIntAttribute(model.maxLength, 100, true),\n      border: BaseXform.toBoolAttribute(model.border, false),\n      gradient: BaseXform.toBoolAttribute(model.gradient, true),\n      negativeBarColorSameAsPositive: BaseXform.toBoolAttribute(\n        model.negativeBarColorSameAsPositive,\n        true\n      ),\n      negativeBarBorderColorSameAsPositive: BaseXform.toBoolAttribute(\n        model.negativeBarBorderColorSameAsPositive,\n        true\n      ),\n      axisPosition: BaseXform.toAttribute(model.axisPosition, 'auto'),\n      direction: BaseXform.toAttribute(model.direction, 'leftToRight'),\n    });\n\n    model.cfvo.forEach(cfvo => {\n      this.cfvoXform.render(xmlStream, cfvo);\n    });\n\n    this.borderColorXform.render(xmlStream, model.borderColor);\n    this.negativeBorderColorXform.render(xmlStream, model.negativeBorderColor);\n    this.negativeFillColorXform.render(xmlStream, model.negativeFillColor);\n    this.axisColorXform.render(xmlStream, model.axisColor);\n\n    xmlStream.closeNode();\n  }\n\n  createNewModel({attributes}) {\n    return {\n      cfvo: [],\n      minLength: BaseXform.toIntValue(attributes.minLength, 0),\n      maxLength: BaseXform.toIntValue(attributes.maxLength, 100),\n      border: BaseXform.toBoolValue(attributes.border, false),\n      gradient: BaseXform.toBoolValue(attributes.gradient, true),\n      negativeBarColorSameAsPositive: BaseXform.toBoolValue(\n        attributes.negativeBarColorSameAsPositive,\n        true\n      ),\n      negativeBarBorderColorSameAsPositive: BaseXform.toBoolValue(\n        attributes.negativeBarBorderColorSameAsPositive,\n        true\n      ),\n      axisPosition: BaseXform.toStringValue(attributes.axisPosition, 'auto'),\n      direction: BaseXform.toStringValue(attributes.direction, 'leftToRight'),\n    };\n  }\n\n  onParserClose(name, parser) {\n    const [, prop] = name.split(':');\n    switch (prop) {\n      case 'cfvo':\n        this.model.cfvo.push(parser.model);\n        break;\n\n      default:\n        this.model[prop] = parser.model;\n        break;\n    }\n  }\n}\n\nmodule.exports = DatabarExtXform;\n"],"mappings":"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"}
>>>>>>> 95bdce0e2476f31a1a1d26b5d1f458cd5295e48d
