<<<<<<< HEAD
{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/base-cell-anchor-xform.js"],"names":["BaseXform","require","BaseCellAnchorXform","node","parser","parseOpen","name","tag","reset","model","range","editAs","attributes","map","text","parseText","options","rId","rel","rels","match","Target","mediaId","mediaIndex","media","undefined","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;IAEMC,mB;;;;;;;;;;;;;8BACMC,I,EAAM;AACd,UAAI,KAAKC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACA,eAAO,IAAP;AACD;;AACD,cAAQA,IAAI,CAACG,IAAb;AACE,aAAK,KAAKC,GAAV;AACE,eAAKC,KAAL;AACA,eAAKC,KAAL,GAAa;AACXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,MAAM,EAAER,IAAI,CAACS,UAAL,CAAgBD,MAAhB,IAA0B;AAD7B;AADI,WAAb;AAKA;;AACF;AACE,eAAKP,MAAL,GAAc,KAAKS,GAAL,CAASV,IAAI,CAACG,IAAd,CAAd;;AACA,cAAI,KAAKF,MAAT,EAAiB;AACf,iBAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACD;;AACD;AAdJ;;AAgBA,aAAO,IAAP;AACD;;;8BAESW,I,EAAM;AACd,UAAI,KAAKV,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYW,SAAZ,CAAsBD,IAAtB;AACD;AACF;;;qCAEgBL,K,EAAOO,O,EAAS;AAC/B,UAAIP,KAAK,IAAIA,KAAK,CAACQ,GAAnB,EAAwB;AACtB,YAAMC,GAAG,GAAGF,OAAO,CAACG,IAAR,CAAaV,KAAK,CAACQ,GAAnB,CAAZ;AACA,YAAMG,KAAK,GAAGF,GAAG,CAACG,MAAJ,CAAWD,KAAX,CAAiB,iCAAjB,CAAd;;AACA,YAAIA,KAAJ,EAAW;AACT,cAAMd,IAAI,GAAGc,KAAK,CAAC,CAAD,CAAlB;AACA,cAAME,OAAO,GAAGN,OAAO,CAACO,UAAR,CAAmBjB,IAAnB,CAAhB;AACA,iBAAOU,OAAO,CAACQ,KAAR,CAAcF,OAAd,CAAP;AACD;AACF;;AACD,aAAOG,SAAP;AACD;;;;EA1C+BzB,S;;AA6ClC0B,MAAM,CAACC,OAAP,GAAiBzB,mBAAjB","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nclass BaseCellAnchorXform extends BaseXform {\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        this.model = {\r\n          range: {\r\n            editAs: node.attributes.editAs || 'oneCell',\r\n          },\r\n        };\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  reconcilePicture(model, options) {\r\n    if (model && model.rId) {\r\n      const rel = options.rels[model.rId];\r\n      const match = rel.Target.match(/.*\\/media\\/(.+[.][a-zA-Z]{3,4})/);\r\n      if (match) {\r\n        const name = match[1];\r\n        const mediaId = options.mediaIndex[name];\r\n        return options.media[mediaId];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n\r\nmodule.exports = BaseCellAnchorXform;\r\n"],"file":"base-cell-anchor-xform.js"}
=======
{"version":3,"file":"base-cell-anchor-xform.js","names":["BaseXform","require","BaseCellAnchorXform","parseOpen","node","parser","name","tag","reset","model","range","editAs","attributes","map","parseText","text","reconcilePicture","options","rId","rel","rels","match","Target","mediaId","mediaIndex","media","undefined","module","exports"],"sources":["../../../../../lib/xlsx/xform/drawing/base-cell-anchor-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\n\nclass BaseCellAnchorXform extends BaseXform {\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.tag:\n        this.reset();\n        this.model = {\n          range: {\n            editAs: node.attributes.editAs || 'oneCell',\n          },\n        };\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  reconcilePicture(model, options) {\n    if (model && model.rId) {\n      const rel = options.rels[model.rId];\n      const match = rel.Target.match(/.*\\/media\\/(.+[.][a-zA-Z]{3,4})/);\n      if (match) {\n        const name = match[1];\n        const mediaId = options.mediaIndex[name];\n        return options.media[mediaId];\n      }\n    }\n    return undefined;\n  }\n}\n\nmodule.exports = BaseCellAnchorXform;\n"],"mappings":";;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE1C,MAAMC,mBAAmB,SAASF,SAAS,CAAC;EAC1CG,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;MAC3B,OAAO,IAAI;IACb;IACA,QAAQA,IAAI,CAACE,IAAI;MACf,KAAK,IAAI,CAACC,GAAG;QACX,IAAI,CAACC,KAAK,CAAC,CAAC;QACZ,IAAI,CAACC,KAAK,GAAG;UACXC,KAAK,EAAE;YACLC,MAAM,EAAEP,IAAI,CAACQ,UAAU,CAACD,MAAM,IAAI;UACpC;QACF,CAAC;QACD;MACF;QACE,IAAI,CAACN,MAAM,GAAG,IAAI,CAACQ,GAAG,CAACT,IAAI,CAACE,IAAI,CAAC;QACjC,IAAI,IAAI,CAACD,MAAM,EAAE;UACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;QAC7B;QACA;IACJ;IACA,OAAO,IAAI;EACb;EAEAU,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACV,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACS,SAAS,CAACC,IAAI,CAAC;IAC7B;EACF;EAEAC,gBAAgBA,CAACP,KAAK,EAAEQ,OAAO,EAAE;IAC/B,IAAIR,KAAK,IAAIA,KAAK,CAACS,GAAG,EAAE;MACtB,MAAMC,GAAG,GAAGF,OAAO,CAACG,IAAI,CAACX,KAAK,CAACS,GAAG,CAAC;MACnC,MAAMG,KAAK,GAAGF,GAAG,CAACG,MAAM,CAACD,KAAK,CAAC,iCAAiC,CAAC;MACjE,IAAIA,KAAK,EAAE;QACT,MAAMf,IAAI,GAAGe,KAAK,CAAC,CAAC,CAAC;QACrB,MAAME,OAAO,GAAGN,OAAO,CAACO,UAAU,CAAClB,IAAI,CAAC;QACxC,OAAOW,OAAO,CAACQ,KAAK,CAACF,OAAO,CAAC;MAC/B;IACF;IACA,OAAOG,SAAS;EAClB;AACF;AAEAC,MAAM,CAACC,OAAO,GAAG1B,mBAAmB"}
>>>>>>> 95bdce0e2476f31a1a1d26b5d1f458cd5295e48d
