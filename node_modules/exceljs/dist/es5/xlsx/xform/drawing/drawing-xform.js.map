<<<<<<< HEAD
{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/drawing-xform.js"],"names":["colCache","require","XmlStream","BaseXform","TwoCellAnchorXform","OneCellAnchorXform","getAnchorType","model","range","decode","br","DrawingXform","map","anchors","forEach","item","index","anchorType","anchor","prepare","xmlStream","openXml","StdDocAttributes","openNode","tag","DRAWING_ATTRIBUTES","render","closeNode","node","parser","parseOpen","name","reset","text","parseText","parseClose","push","undefined","options","reconcile","module","exports"],"mappings":"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","sourcesContent":["const colCache = require('../../../utils/col-cache');\r\nconst XmlStream = require('../../../utils/xml-stream');\r\n\r\nconst BaseXform = require('../base-xform');\r\nconst TwoCellAnchorXform = require('./two-cell-anchor-xform');\r\nconst OneCellAnchorXform = require('./one-cell-anchor-xform');\r\n\r\nfunction getAnchorType(model) {\r\n  const range = typeof model.range === 'string' ? colCache.decode(model.range) : model.range;\r\n\r\n  return range.br ? 'xdr:twoCellAnchor' : 'xdr:oneCellAnchor';\r\n}\r\n\r\nclass DrawingXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      'xdr:twoCellAnchor': new TwoCellAnchorXform(),\r\n      'xdr:oneCellAnchor': new OneCellAnchorXform(),\r\n    };\r\n  }\r\n\r\n  prepare(model) {\r\n    model.anchors.forEach((item, index) => {\r\n      item.anchorType = getAnchorType(item);\r\n      const anchor = this.map[item.anchorType];\r\n      anchor.prepare(item, {index});\r\n    });\r\n  }\r\n\r\n  get tag() {\r\n    return 'xdr:wsDr';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openXml(XmlStream.StdDocAttributes);\r\n    xmlStream.openNode(this.tag, DrawingXform.DRAWING_ATTRIBUTES);\r\n\r\n    model.anchors.forEach(item => {\r\n      const anchor = this.map[item.anchorType];\r\n      anchor.render(xmlStream, item);\r\n    });\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        this.model = {\r\n          anchors: [],\r\n        };\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.model.anchors.push(this.parser.model);\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        return false;\r\n      default:\r\n        // could be some unrecognised tags\r\n        return true;\r\n    }\r\n  }\r\n\r\n  reconcile(model, options) {\r\n    model.anchors.forEach(anchor => {\r\n      if (anchor.br) {\r\n        this.map['xdr:twoCellAnchor'].reconcile(anchor, options);\r\n      } else {\r\n        this.map['xdr:oneCellAnchor'].reconcile(anchor, options);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nDrawingXform.DRAWING_ATTRIBUTES = {\r\n  'xmlns:xdr': 'http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing',\r\n  'xmlns:a': 'http://schemas.openxmlformats.org/drawingml/2006/main',\r\n};\r\n\r\nmodule.exports = DrawingXform;\r\n"],"file":"drawing-xform.js"}
=======
{"version":3,"file":"drawing-xform.js","names":["colCache","require","XmlStream","BaseXform","TwoCellAnchorXform","OneCellAnchorXform","getAnchorType","model","range","decode","br","DrawingXform","constructor","map","prepare","anchors","forEach","item","index","anchorType","anchor","tag","render","xmlStream","openXml","StdDocAttributes","openNode","DRAWING_ATTRIBUTES","closeNode","parseOpen","node","parser","name","reset","parseText","text","parseClose","push","undefined","reconcile","options","module","exports"],"sources":["../../../../../lib/xlsx/xform/drawing/drawing-xform.js"],"sourcesContent":["const colCache = require('../../../utils/col-cache');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\nconst TwoCellAnchorXform = require('./two-cell-anchor-xform');\nconst OneCellAnchorXform = require('./one-cell-anchor-xform');\n\nfunction getAnchorType(model) {\n  const range = typeof model.range === 'string' ? colCache.decode(model.range) : model.range;\n\n  return range.br ? 'xdr:twoCellAnchor' : 'xdr:oneCellAnchor';\n}\n\nclass DrawingXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'xdr:twoCellAnchor': new TwoCellAnchorXform(),\n      'xdr:oneCellAnchor': new OneCellAnchorXform(),\n    };\n  }\n\n  prepare(model) {\n    model.anchors.forEach((item, index) => {\n      item.anchorType = getAnchorType(item);\n      const anchor = this.map[item.anchorType];\n      anchor.prepare(item, {index});\n    });\n  }\n\n  get tag() {\n    return 'xdr:wsDr';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n    xmlStream.openNode(this.tag, DrawingXform.DRAWING_ATTRIBUTES);\n\n    model.anchors.forEach(item => {\n      const anchor = this.map[item.anchorType];\n      anchor.render(xmlStream, item);\n    });\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.tag:\n        this.reset();\n        this.model = {\n          anchors: [],\n        };\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.anchors.push(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        return false;\n      default:\n        // could be some unrecognised tags\n        return true;\n    }\n  }\n\n  reconcile(model, options) {\n    model.anchors.forEach(anchor => {\n      if (anchor.br) {\n        this.map['xdr:twoCellAnchor'].reconcile(anchor, options);\n      } else {\n        this.map['xdr:oneCellAnchor'].reconcile(anchor, options);\n      }\n    });\n  }\n}\n\nDrawingXform.DRAWING_ATTRIBUTES = {\n  'xmlns:xdr': 'http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing',\n  'xmlns:a': 'http://schemas.openxmlformats.org/drawingml/2006/main',\n};\n\nmodule.exports = DrawingXform;\n"],"mappings":";;AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AACpD,MAAMC,SAAS,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AAEtD,MAAME,SAAS,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMG,kBAAkB,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAC7D,MAAMI,kBAAkB,GAAGJ,OAAO,CAAC,yBAAyB,CAAC;AAE7D,SAASK,aAAaA,CAACC,KAAK,EAAE;EAC5B,MAAMC,KAAK,GAAG,OAAOD,KAAK,CAACC,KAAK,KAAK,QAAQ,GAAGR,QAAQ,CAACS,MAAM,CAACF,KAAK,CAACC,KAAK,CAAC,GAAGD,KAAK,CAACC,KAAK;EAE1F,OAAOA,KAAK,CAACE,EAAE,GAAG,mBAAmB,GAAG,mBAAmB;AAC7D;AAEA,MAAMC,YAAY,SAASR,SAAS,CAAC;EACnCS,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,GAAG,GAAG;MACT,mBAAmB,EAAE,IAAIT,kBAAkB,CAAC,CAAC;MAC7C,mBAAmB,EAAE,IAAIC,kBAAkB,CAAC;IAC9C,CAAC;EACH;EAEAS,OAAOA,CAACP,KAAK,EAAE;IACbA,KAAK,CAACQ,OAAO,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACrCD,IAAI,CAACE,UAAU,GAAGb,aAAa,CAACW,IAAI,CAAC;MACrC,MAAMG,MAAM,GAAG,IAAI,CAACP,GAAG,CAACI,IAAI,CAACE,UAAU,CAAC;MACxCC,MAAM,CAACN,OAAO,CAACG,IAAI,EAAE;QAACC;MAAK,CAAC,CAAC;IAC/B,CAAC,CAAC;EACJ;EAEA,IAAIG,GAAGA,CAAA,EAAG;IACR,OAAO,UAAU;EACnB;EAEAC,MAAMA,CAACC,SAAS,EAAEhB,KAAK,EAAE;IACvBgB,SAAS,CAACC,OAAO,CAACtB,SAAS,CAACuB,gBAAgB,CAAC;IAC7CF,SAAS,CAACG,QAAQ,CAAC,IAAI,CAACL,GAAG,EAAEV,YAAY,CAACgB,kBAAkB,CAAC;IAE7DpB,KAAK,CAACQ,OAAO,CAACC,OAAO,CAACC,IAAI,IAAI;MAC5B,MAAMG,MAAM,GAAG,IAAI,CAACP,GAAG,CAACI,IAAI,CAACE,UAAU,CAAC;MACxCC,MAAM,CAACE,MAAM,CAACC,SAAS,EAAEN,IAAI,CAAC;IAChC,CAAC,CAAC;IAEFM,SAAS,CAACK,SAAS,CAAC,CAAC;EACvB;EAEAC,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;MAC3B,OAAO,IAAI;IACb;IACA,QAAQA,IAAI,CAACE,IAAI;MACf,KAAK,IAAI,CAACX,GAAG;QACX,IAAI,CAACY,KAAK,CAAC,CAAC;QACZ,IAAI,CAAC1B,KAAK,GAAG;UACXQ,OAAO,EAAE;QACX,CAAC;QACD;MACF;QACE,IAAI,CAACgB,MAAM,GAAG,IAAI,CAAClB,GAAG,CAACiB,IAAI,CAACE,IAAI,CAAC;QACjC,IAAI,IAAI,CAACD,MAAM,EAAE;UACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;QAC7B;QACA;IACJ;IACA,OAAO,IAAI;EACb;EAEAI,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACJ,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACG,SAAS,CAACC,IAAI,CAAC;IAC7B;EACF;EAEAC,UAAUA,CAACJ,IAAI,EAAE;IACf,IAAI,IAAI,CAACD,MAAM,EAAE;MACf,IAAI,CAAC,IAAI,CAACA,MAAM,CAACK,UAAU,CAACJ,IAAI,CAAC,EAAE;QACjC,IAAI,CAACzB,KAAK,CAACQ,OAAO,CAACsB,IAAI,CAAC,IAAI,CAACN,MAAM,CAACxB,KAAK,CAAC;QAC1C,IAAI,CAACwB,MAAM,GAAGO,SAAS;MACzB;MACA,OAAO,IAAI;IACb;IACA,QAAQN,IAAI;MACV,KAAK,IAAI,CAACX,GAAG;QACX,OAAO,KAAK;MACd;QACE;QACA,OAAO,IAAI;IACf;EACF;EAEAkB,SAASA,CAAChC,KAAK,EAAEiC,OAAO,EAAE;IACxBjC,KAAK,CAACQ,OAAO,CAACC,OAAO,CAACI,MAAM,IAAI;MAC9B,IAAIA,MAAM,CAACV,EAAE,EAAE;QACb,IAAI,CAACG,GAAG,CAAC,mBAAmB,CAAC,CAAC0B,SAAS,CAACnB,MAAM,EAAEoB,OAAO,CAAC;MAC1D,CAAC,MAAM;QACL,IAAI,CAAC3B,GAAG,CAAC,mBAAmB,CAAC,CAAC0B,SAAS,CAACnB,MAAM,EAAEoB,OAAO,CAAC;MAC1D;IACF,CAAC,CAAC;EACJ;AACF;AAEA7B,YAAY,CAACgB,kBAAkB,GAAG;EAChC,WAAW,EAAE,qEAAqE;EAClF,SAAS,EAAE;AACb,CAAC;AAEDc,MAAM,CAACC,OAAO,GAAG/B,YAAY"}
>>>>>>> 95bdce0e2476f31a1a1d26b5d1f458cd5295e48d
