<<<<<<< HEAD
{"version":3,"sources":["../../../lib/xlsx/xlsx.js"],"names":["fs","require","JSZip","PassThrough","ZipStream","StreamBuf","utils","XmlStream","bufferToString","StylesXform","CoreXform","SharedStringsXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","WorksheetXform","DrawingXform","TableXform","CommentsXform","VmlNotesXform","theme1Xml","fsReadFileAsync","filename","options","Promise","resolve","reject","readFile","error","data","XLSX","workbook","exists","Error","stream","createReadStream","read","close","xform","parseStream","model","workbookXform","worksheetXform","drawingXform","tableXform","reconcile","drawingOptions","media","mediaIndex","Object","keys","drawings","forEach","name","drawing","drawingRel","drawingRels","rels","reduce","o","rel","Id","anchors","anchor","hyperlinks","picture","rId","hyperlink","Target","tableOptions","styles","values","tables","table","sheetOptions","sharedStrings","date1904","properties","comments","vmlDrawings","worksheets","worksheet","relationships","worksheetRels","sheetNo","worksheetHash","globalRels","workbookRels","sheetDefs","path","push","entry","lastDot","lastIndexOf","extension","substr","streamBuf","on","length","medium","type","buffer","toBuffer","pipe","vmlDrawing","themes","toString","Symbol","asyncIterator","chunks","chunk","load","Buffer","concat","base64","from","loadAsync","zip","files","dir","entryName","match","async","write","writableObjectMode","readableObjectMode","content","process","browser","chunkSize","i","substring","end","parseRels","parseWorkbook","sheets","definedNames","views","calcProperties","appXform","appProperties","company","manager","coreXform","coreProperties","assign","_processWorksheetEntry","_processWorksheetRelsEntry","_processThemeEntry","_processMediaEntry","_processDrawingEntry","_processCommentEntry","_processTableEntry","_processDrawingRelsEntry","_processVmlDrawingEntry","all","map","append","dataimg64","indexOf","relsXform","prepare","xml","toXml","tableXml","target","theme1","Type","RelType","OfficeDocument","CoreProperties","ExtenderProperties","count","Styles","Theme","SharedStrings","Worksheet","id","relationshipsXform","commentsXform","vmlNotesXform","xmlStream","render","finalize","creator","lastModifiedBy","created","Date","modified","useSharedStrings","undefined","useStyles","Mock","worksheetOptions","drawingsCount","commentRefs","tableCount","ZipWriter","prepareModel","addContentTypes","addOfficeRels","addWorkbookRels","addWorksheets","addSharedStrings","addDrawings","addTables","addThemes","addStyles","addMedia","addApp","addCore","addWorkbook","_finalize","createWriteStream","then","module","exports"],"mappings":"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","sourcesContent":["const fs = require('fs');\r\nconst JSZip = require('jszip');\r\nconst {PassThrough} = require('readable-stream');\r\nconst ZipStream = require('../utils/zip-stream');\r\nconst StreamBuf = require('../utils/stream-buf');\r\n\r\nconst utils = require('../utils/utils');\r\nconst XmlStream = require('../utils/xml-stream');\r\nconst {bufferToString} = require('../utils/browser-buffer-decode');\r\n\r\nconst StylesXform = require('./xform/style/styles-xform');\r\n\r\nconst CoreXform = require('./xform/core/core-xform');\r\nconst SharedStringsXform = require('./xform/strings/shared-strings-xform');\r\nconst RelationshipsXform = require('./xform/core/relationships-xform');\r\nconst ContentTypesXform = require('./xform/core/content-types-xform');\r\nconst AppXform = require('./xform/core/app-xform');\r\nconst WorkbookXform = require('./xform/book/workbook-xform');\r\nconst WorksheetXform = require('./xform/sheet/worksheet-xform');\r\nconst DrawingXform = require('./xform/drawing/drawing-xform');\r\nconst TableXform = require('./xform/table/table-xform');\r\nconst CommentsXform = require('./xform/comment/comments-xform');\r\nconst VmlNotesXform = require('./xform/comment/vml-notes-xform');\r\n\r\nconst theme1Xml = require('./xml/theme1.js');\r\n\r\nfunction fsReadFileAsync(filename, options) {\r\n  return new Promise((resolve, reject) => {\r\n    fs.readFile(filename, options, (error, data) => {\r\n      if (error) {\r\n        reject(error);\r\n      } else {\r\n        resolve(data);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nclass XLSX {\r\n  constructor(workbook) {\r\n    this.workbook = workbook;\r\n  }\r\n\r\n  // ===============================================================================\r\n  // Workbook\r\n  // =========================================================================\r\n  // Read\r\n\r\n  async readFile(filename, options) {\r\n    if (!(await utils.fs.exists(filename))) {\r\n      throw new Error(`File not found: ${filename}`);\r\n    }\r\n    const stream = fs.createReadStream(filename);\r\n    try {\r\n      const workbook = await this.read(stream, options);\r\n      stream.close();\r\n      return workbook;\r\n    } catch (error) {\r\n      stream.close();\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  parseRels(stream) {\r\n    const xform = new RelationshipsXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  parseWorkbook(stream) {\r\n    const xform = new WorkbookXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  parseSharedStrings(stream) {\r\n    const xform = new SharedStringsXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  reconcile(model, options) {\r\n    const workbookXform = new WorkbookXform();\r\n    const worksheetXform = new WorksheetXform(options);\r\n    const drawingXform = new DrawingXform();\r\n    const tableXform = new TableXform();\r\n\r\n    workbookXform.reconcile(model);\r\n\r\n    // reconcile drawings with their rels\r\n    const drawingOptions = {\r\n      media: model.media,\r\n      mediaIndex: model.mediaIndex,\r\n    };\r\n    Object.keys(model.drawings).forEach(name => {\r\n      const drawing = model.drawings[name];\r\n      const drawingRel = model.drawingRels[name];\r\n      if (drawingRel) {\r\n        drawingOptions.rels = drawingRel.reduce((o, rel) => {\r\n          o[rel.Id] = rel;\r\n          return o;\r\n        }, {});\r\n        (drawing.anchors || []).forEach(anchor => {\r\n          const hyperlinks = anchor.picture && anchor.picture.hyperlinks;\r\n          if (hyperlinks && drawingOptions.rels[hyperlinks.rId]) {\r\n            hyperlinks.hyperlink = drawingOptions.rels[hyperlinks.rId].Target;\r\n            delete hyperlinks.rId;\r\n          }\r\n        });\r\n        drawingXform.reconcile(drawing, drawingOptions);\r\n      }\r\n    });\r\n\r\n    // reconcile tables with the default styles\r\n    const tableOptions = {\r\n      styles: model.styles,\r\n    };\r\n    Object.values(model.tables).forEach(table => {\r\n      tableXform.reconcile(table, tableOptions);\r\n    });\r\n\r\n    const sheetOptions = {\r\n      styles: model.styles,\r\n      sharedStrings: model.sharedStrings,\r\n      media: model.media,\r\n      mediaIndex: model.mediaIndex,\r\n      date1904: model.properties && model.properties.date1904,\r\n      drawings: model.drawings,\r\n      comments: model.comments,\r\n      tables: model.tables,\r\n      vmlDrawings: model.vmlDrawings,\r\n    };\r\n    model.worksheets.forEach(worksheet => {\r\n      worksheet.relationships = model.worksheetRels[worksheet.sheetNo];\r\n      worksheetXform.reconcile(worksheet, sheetOptions);\r\n    });\r\n\r\n    // delete unnecessary parts\r\n    delete model.worksheetHash;\r\n    delete model.worksheetRels;\r\n    delete model.globalRels;\r\n    delete model.sharedStrings;\r\n    delete model.workbookRels;\r\n    delete model.sheetDefs;\r\n    delete model.styles;\r\n    delete model.mediaIndex;\r\n    delete model.drawings;\r\n    delete model.drawingRels;\r\n    delete model.vmlDrawings;\r\n  }\r\n\r\n  async _processWorksheetEntry(stream, model, sheetNo, options, path) {\r\n    const xform = new WorksheetXform(options);\r\n    const worksheet = await xform.parseStream(stream);\r\n    worksheet.sheetNo = sheetNo;\r\n    model.worksheetHash[path] = worksheet;\r\n    model.worksheets.push(worksheet);\r\n  }\r\n\r\n  async _processCommentEntry(stream, model, name) {\r\n    const xform = new CommentsXform();\r\n    const comments = await xform.parseStream(stream);\r\n    model.comments[`../${name}.xml`] = comments;\r\n  }\r\n\r\n  async _processTableEntry(stream, model, name) {\r\n    const xform = new TableXform();\r\n    const table = await xform.parseStream(stream);\r\n    model.tables[`../tables/${name}.xml`] = table;\r\n  }\r\n\r\n  async _processWorksheetRelsEntry(stream, model, sheetNo) {\r\n    const xform = new RelationshipsXform();\r\n    const relationships = await xform.parseStream(stream);\r\n    model.worksheetRels[sheetNo] = relationships;\r\n  }\r\n\r\n  async _processMediaEntry(entry, model, filename) {\r\n    const lastDot = filename.lastIndexOf('.');\r\n    // if we can't determine extension, ignore it\r\n    if (lastDot >= 1) {\r\n      const extension = filename.substr(lastDot + 1);\r\n      const name = filename.substr(0, lastDot);\r\n      await new Promise((resolve, reject) => {\r\n        const streamBuf = new StreamBuf();\r\n        streamBuf.on('finish', () => {\r\n          model.mediaIndex[filename] = model.media.length;\r\n          model.mediaIndex[name] = model.media.length;\r\n          const medium = {\r\n            type: 'image',\r\n            name,\r\n            extension,\r\n            buffer: streamBuf.toBuffer(),\r\n          };\r\n          model.media.push(medium);\r\n          resolve();\r\n        });\r\n        entry.on('error', error => {\r\n          reject(error);\r\n        });\r\n        entry.pipe(streamBuf);\r\n      });\r\n    }\r\n  }\r\n\r\n  async _processDrawingEntry(entry, model, name) {\r\n    const xform = new DrawingXform();\r\n    const drawing = await xform.parseStream(entry);\r\n    model.drawings[name] = drawing;\r\n  }\r\n\r\n  async _processDrawingRelsEntry(entry, model, name) {\r\n    const xform = new RelationshipsXform();\r\n    const relationships = await xform.parseStream(entry);\r\n    model.drawingRels[name] = relationships;\r\n  }\r\n\r\n  async _processVmlDrawingEntry(entry, model, name) {\r\n    const xform = new VmlNotesXform();\r\n    const vmlDrawing = await xform.parseStream(entry);\r\n    model.vmlDrawings[`../drawings/${name}.vml`] = vmlDrawing;\r\n  }\r\n\r\n  async _processThemeEntry(entry, model, name) {\r\n    await new Promise((resolve, reject) => {\r\n      // TODO: stream entry into buffer and store the xml in the model.themes[]\r\n      const stream = new StreamBuf();\r\n      entry.on('error', reject);\r\n      stream.on('error', reject);\r\n      stream.on('finish', () => {\r\n        model.themes[name] = stream.read().toString();\r\n        resolve();\r\n      });\r\n      entry.pipe(stream);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @deprecated since version 4.0. You should use `#read` instead. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md\r\n   */\r\n  createInputStream() {\r\n    throw new Error(\r\n      '`XLSX#createInputStream` is deprecated. You should use `XLSX#read` instead. This method will be removed in version 5.0. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md'\r\n    );\r\n  }\r\n\r\n  async read(stream, options) {\r\n    // TODO: Remove once node v8 is deprecated\r\n    // Detect and upgrade old streams\r\n    if (!stream[Symbol.asyncIterator] && stream.pipe) {\r\n      stream = stream.pipe(new PassThrough());\r\n    }\r\n    const chunks = [];\r\n    for await (const chunk of stream) {\r\n      chunks.push(chunk);\r\n    }\r\n    return this.load(Buffer.concat(chunks), options);\r\n  }\r\n\r\n  async load(data, options) {\r\n    let buffer;\r\n    if (options && options.base64) {\r\n      buffer = Buffer.from(data.toString(), 'base64');\r\n    } else {\r\n      buffer = data;\r\n    }\r\n\r\n    const model = {\r\n      worksheets: [],\r\n      worksheetHash: {},\r\n      worksheetRels: [],\r\n      themes: {},\r\n      media: [],\r\n      mediaIndex: {},\r\n      drawings: {},\r\n      drawingRels: {},\r\n      comments: {},\r\n      tables: {},\r\n      vmlDrawings: {},\r\n    };\r\n\r\n    const zip = await JSZip.loadAsync(buffer);\r\n    for (const entry of Object.values(zip.files)) {\r\n      /* eslint-disable no-await-in-loop */\r\n      if (!entry.dir) {\r\n        let entryName = entry.name;\r\n        if (entryName[0] === '/') {\r\n          entryName = entryName.substr(1);\r\n        }\r\n        let stream;\r\n        if (entryName.match(/xl\\/media\\//) ||\r\n          // themes are not parsed as stream\r\n          entryName.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/)) {\r\n          stream = new PassThrough();\r\n          stream.write(await entry.async('nodebuffer'));\r\n        } else {\r\n          // use object mode to avoid buffer-string convention\r\n          stream = new PassThrough({\r\n            writableObjectMode: true,\r\n            readableObjectMode: true,\r\n          });\r\n          let content;\r\n          // https://www.npmjs.com/package/process\r\n          if (process.browser) {\r\n            // running in browser, use TextDecoder if possible\r\n            content = bufferToString(await entry.async('nodebuffer'));\r\n          } else {\r\n            // running in node.js\r\n            content = await entry.async('string');\r\n          }\r\n          const chunkSize = 16 * 1024;\r\n          for (let i = 0; i < content.length; i += chunkSize) {\r\n            stream.write(content.substring(i, i + chunkSize));\r\n          }\r\n        }\r\n        stream.end();\r\n        switch (entryName) {\r\n          case '_rels/.rels':\r\n            model.globalRels = await this.parseRels(stream);\r\n            break;\r\n\r\n          case 'xl/workbook.xml': {\r\n            const workbook = await this.parseWorkbook(stream);\r\n            model.sheets = workbook.sheets;\r\n            model.definedNames = workbook.definedNames;\r\n            model.views = workbook.views;\r\n            model.properties = workbook.properties;\r\n            model.calcProperties = workbook.calcProperties;\r\n            break;\r\n          }\r\n\r\n          case 'xl/_rels/workbook.xml.rels':\r\n            model.workbookRels = await this.parseRels(stream);\r\n            break;\r\n\r\n          case 'xl/sharedStrings.xml':\r\n            model.sharedStrings = new SharedStringsXform();\r\n            await model.sharedStrings.parseStream(stream);\r\n            break;\r\n\r\n          case 'xl/styles.xml':\r\n            model.styles = new StylesXform();\r\n            await model.styles.parseStream(stream);\r\n            break;\r\n\r\n          case 'docProps/app.xml': {\r\n            const appXform = new AppXform();\r\n            const appProperties = await appXform.parseStream(stream);\r\n            model.company = appProperties.company;\r\n            model.manager = appProperties.manager;\r\n            break;\r\n          }\r\n\r\n          case 'docProps/core.xml': {\r\n            const coreXform = new CoreXform();\r\n            const coreProperties = await coreXform.parseStream(stream);\r\n            Object.assign(model, coreProperties);\r\n            break;\r\n          }\r\n\r\n          default: {\r\n            let match = entryName.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\r\n            if (match) {\r\n              await this._processWorksheetEntry(stream, model, match[1], options, entryName);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\r\n            if (match) {\r\n              await this._processWorksheetRelsEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/);\r\n            if (match) {\r\n              await this._processThemeEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/media\\/([a-zA-Z0-9]+[.][a-zA-Z0-9]{3,4})$/);\r\n            if (match) {\r\n              await this._processMediaEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/drawings\\/([a-zA-Z0-9]+)[.]xml/);\r\n            if (match) {\r\n              await this._processDrawingEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/(comments\\d+)[.]xml/);\r\n            if (match) {\r\n              await this._processCommentEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/tables\\/(table\\d+)[.]xml/);\r\n            if (match) {\r\n              await this._processTableEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/drawings\\/_rels\\/([a-zA-Z0-9]+)[.]xml[.]rels/);\r\n            if (match) {\r\n              await this._processDrawingRelsEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/drawings\\/(vmlDrawing\\d+)[.]vml/);\r\n            if (match) {\r\n              await this._processVmlDrawingEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.reconcile(model, options);\r\n\r\n    // apply model\r\n    this.workbook.model = model;\r\n    return this.workbook;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Write\r\n\r\n  async addMedia(zip, model) {\r\n    await Promise.all(\r\n      model.media.map(async medium => {\r\n        if (medium.type === 'image') {\r\n          const filename = `xl/media/${medium.name}.${medium.extension}`;\r\n          if (medium.filename) {\r\n            const data = await fsReadFileAsync(medium.filename);\r\n            return zip.append(data, {name: filename});\r\n          }\r\n          if (medium.buffer) {\r\n            return zip.append(medium.buffer, {name: filename});\r\n          }\r\n          if (medium.base64) {\r\n            const dataimg64 = medium.base64;\r\n            const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\r\n            return zip.append(content, {name: filename, base64: true});\r\n          }\r\n        }\r\n        throw new Error('Unsupported media');\r\n      })\r\n    );\r\n  }\r\n\r\n  addDrawings(zip, model) {\r\n    const drawingXform = new DrawingXform();\r\n    const relsXform = new RelationshipsXform();\r\n\r\n    model.worksheets.forEach(worksheet => {\r\n      const {drawing} = worksheet;\r\n      if (drawing) {\r\n        drawingXform.prepare(drawing, {});\r\n        let xml = drawingXform.toXml(drawing);\r\n        zip.append(xml, {name: `xl/drawings/${drawing.name}.xml`});\r\n\r\n        xml = relsXform.toXml(drawing.rels);\r\n        zip.append(xml, {name: `xl/drawings/_rels/${drawing.name}.xml.rels`});\r\n      }\r\n    });\r\n  }\r\n\r\n  addTables(zip, model) {\r\n    const tableXform = new TableXform();\r\n\r\n    model.worksheets.forEach(worksheet => {\r\n      const {tables} = worksheet;\r\n      tables.forEach(table => {\r\n        tableXform.prepare(table, {});\r\n        const tableXml = tableXform.toXml(table);\r\n        zip.append(tableXml, {name: `xl/tables/${table.target}`});\r\n      });\r\n    });\r\n  }\r\n\r\n  async addContentTypes(zip, model) {\r\n    const xform = new ContentTypesXform();\r\n    const xml = xform.toXml(model);\r\n    zip.append(xml, {name: '[Content_Types].xml'});\r\n  }\r\n\r\n  async addApp(zip, model) {\r\n    const xform = new AppXform();\r\n    const xml = xform.toXml(model);\r\n    zip.append(xml, {name: 'docProps/app.xml'});\r\n  }\r\n\r\n  async addCore(zip, model) {\r\n    const coreXform = new CoreXform();\r\n    zip.append(coreXform.toXml(model), {name: 'docProps/core.xml'});\r\n  }\r\n\r\n  async addThemes(zip, model) {\r\n    const themes = model.themes || {theme1: theme1Xml};\r\n    Object.keys(themes).forEach(name => {\r\n      const xml = themes[name];\r\n      const path = `xl/theme/${name}.xml`;\r\n      zip.append(xml, {name: path});\r\n    });\r\n  }\r\n\r\n  async addOfficeRels(zip) {\r\n    const xform = new RelationshipsXform();\r\n    const xml = xform.toXml([\r\n      {Id: 'rId1', Type: XLSX.RelType.OfficeDocument, Target: 'xl/workbook.xml'},\r\n      {Id: 'rId2', Type: XLSX.RelType.CoreProperties, Target: 'docProps/core.xml'},\r\n      {Id: 'rId3', Type: XLSX.RelType.ExtenderProperties, Target: 'docProps/app.xml'},\r\n    ]);\r\n    zip.append(xml, {name: '_rels/.rels'});\r\n  }\r\n\r\n  async addWorkbookRels(zip, model) {\r\n    let count = 1;\r\n    const relationships = [\r\n      {Id: `rId${count++}`, Type: XLSX.RelType.Styles, Target: 'styles.xml'},\r\n      {Id: `rId${count++}`, Type: XLSX.RelType.Theme, Target: 'theme/theme1.xml'},\r\n    ];\r\n    if (model.sharedStrings.count) {\r\n      relationships.push({\r\n        Id: `rId${count++}`,\r\n        Type: XLSX.RelType.SharedStrings,\r\n        Target: 'sharedStrings.xml',\r\n      });\r\n    }\r\n    model.worksheets.forEach(worksheet => {\r\n      worksheet.rId = `rId${count++}`;\r\n      relationships.push({\r\n        Id: worksheet.rId,\r\n        Type: XLSX.RelType.Worksheet,\r\n        Target: `worksheets/sheet${worksheet.id}.xml`,\r\n      });\r\n    });\r\n    const xform = new RelationshipsXform();\r\n    const xml = xform.toXml(relationships);\r\n    zip.append(xml, {name: 'xl/_rels/workbook.xml.rels'});\r\n  }\r\n\r\n  async addSharedStrings(zip, model) {\r\n    if (model.sharedStrings && model.sharedStrings.count) {\r\n      zip.append(model.sharedStrings.xml, {name: 'xl/sharedStrings.xml'});\r\n    }\r\n  }\r\n\r\n  async addStyles(zip, model) {\r\n    const {xml} = model.styles;\r\n    if (xml) {\r\n      zip.append(xml, {name: 'xl/styles.xml'});\r\n    }\r\n  }\r\n\r\n  async addWorkbook(zip, model) {\r\n    const xform = new WorkbookXform();\r\n    zip.append(xform.toXml(model), {name: 'xl/workbook.xml'});\r\n  }\r\n\r\n  async addWorksheets(zip, model) {\r\n    // preparation phase\r\n    const worksheetXform = new WorksheetXform();\r\n    const relationshipsXform = new RelationshipsXform();\r\n    const commentsXform = new CommentsXform();\r\n    const vmlNotesXform = new VmlNotesXform();\r\n\r\n    // write sheets\r\n    model.worksheets.forEach(worksheet => {\r\n      let xmlStream = new XmlStream();\r\n      worksheetXform.render(xmlStream, worksheet);\r\n      zip.append(xmlStream.xml, {name: `xl/worksheets/sheet${worksheet.id}.xml`});\r\n\r\n      if (worksheet.rels && worksheet.rels.length) {\r\n        xmlStream = new XmlStream();\r\n        relationshipsXform.render(xmlStream, worksheet.rels);\r\n        zip.append(xmlStream.xml, {name: `xl/worksheets/_rels/sheet${worksheet.id}.xml.rels`});\r\n      }\r\n\r\n      if (worksheet.comments.length > 0) {\r\n        xmlStream = new XmlStream();\r\n        commentsXform.render(xmlStream, worksheet);\r\n        zip.append(xmlStream.xml, {name: `xl/comments${worksheet.id}.xml`});\r\n\r\n        xmlStream = new XmlStream();\r\n        vmlNotesXform.render(xmlStream, worksheet);\r\n        zip.append(xmlStream.xml, {name: `xl/drawings/vmlDrawing${worksheet.id}.vml`});\r\n      }\r\n    });\r\n  }\r\n\r\n  _finalize(zip) {\r\n    return new Promise((resolve, reject) => {\r\n      zip.on('finish', () => {\r\n        resolve(this);\r\n      });\r\n      zip.on('error', reject);\r\n      zip.finalize();\r\n    });\r\n  }\r\n\r\n  prepareModel(model, options) {\r\n    // ensure following properties have sane values\r\n    model.creator = model.creator || 'ExcelJS';\r\n    model.lastModifiedBy = model.lastModifiedBy || 'ExcelJS';\r\n    model.created = model.created || new Date();\r\n    model.modified = model.modified || new Date();\r\n\r\n    model.useSharedStrings =\r\n      options.useSharedStrings !== undefined ? options.useSharedStrings : true;\r\n    model.useStyles = options.useStyles !== undefined ? options.useStyles : true;\r\n\r\n    // Manage the shared strings\r\n    model.sharedStrings = new SharedStringsXform();\r\n\r\n    // add a style manager to handle cell formats, fonts, etc.\r\n    model.styles = model.useStyles ? new StylesXform(true) : new StylesXform.Mock();\r\n\r\n    // prepare all of the things before the render\r\n    const workbookXform = new WorkbookXform();\r\n    const worksheetXform = new WorksheetXform();\r\n\r\n    workbookXform.prepare(model);\r\n\r\n    const worksheetOptions = {\r\n      sharedStrings: model.sharedStrings,\r\n      styles: model.styles,\r\n      date1904: model.properties.date1904,\r\n      drawingsCount: 0,\r\n      media: model.media,\r\n    };\r\n    worksheetOptions.drawings = model.drawings = [];\r\n    worksheetOptions.commentRefs = model.commentRefs = [];\r\n    let tableCount = 0;\r\n    model.tables = [];\r\n    model.worksheets.forEach(worksheet => {\r\n      // assign unique filenames to tables\r\n      worksheet.tables.forEach(table => {\r\n        tableCount++;\r\n        table.target = `table${tableCount}.xml`;\r\n        table.id = tableCount;\r\n        model.tables.push(table);\r\n      });\r\n\r\n      worksheetXform.prepare(worksheet, worksheetOptions);\r\n    });\r\n\r\n    // TODO: workbook drawing list\r\n  }\r\n\r\n  async write(stream, options) {\r\n    options = options || {};\r\n    const {model} = this.workbook;\r\n    const zip = new ZipStream.ZipWriter(options.zip);\r\n    zip.pipe(stream);\r\n\r\n    this.prepareModel(model, options);\r\n\r\n    // render\r\n    await this.addContentTypes(zip, model);\r\n    await this.addOfficeRels(zip, model);\r\n    await this.addWorkbookRels(zip, model);\r\n    await this.addWorksheets(zip, model);\r\n    await this.addSharedStrings(zip, model); // always after worksheets\r\n    await this.addDrawings(zip, model);\r\n    await this.addTables(zip, model);\r\n    await Promise.all([this.addThemes(zip, model), this.addStyles(zip, model)]);\r\n    await this.addMedia(zip, model);\r\n    await Promise.all([this.addApp(zip, model), this.addCore(zip, model)]);\r\n    await this.addWorkbook(zip, model);\r\n    return this._finalize(zip);\r\n  }\r\n\r\n  writeFile(filename, options) {\r\n    const stream = fs.createWriteStream(filename);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      stream.on('finish', () => {\r\n        resolve();\r\n      });\r\n      stream.on('error', error => {\r\n        reject(error);\r\n      });\r\n\r\n      this.write(stream, options).then(() => {\r\n        stream.end();\r\n      });\r\n    });\r\n  }\r\n\r\n  async writeBuffer(options) {\r\n    const stream = new StreamBuf();\r\n    await this.write(stream, options);\r\n    return stream.read();\r\n  }\r\n}\r\n\r\nXLSX.RelType = require('./rel-type');\r\n\r\nmodule.exports = XLSX;\r\n"],"file":"xlsx.js"}
=======
{"version":3,"file":"xlsx.js","names":["fs","require","JSZip","PassThrough","ZipStream","StreamBuf","utils","XmlStream","bufferToString","StylesXform","CoreXform","SharedStringsXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","WorksheetXform","DrawingXform","TableXform","CommentsXform","VmlNotesXform","theme1Xml","fsReadFileAsync","filename","options","Promise","resolve","reject","readFile","error","data","XLSX","constructor","workbook","exists","Error","stream","createReadStream","read","close","parseRels","xform","parseStream","parseWorkbook","parseSharedStrings","reconcile","model","workbookXform","worksheetXform","drawingXform","tableXform","drawingOptions","media","mediaIndex","Object","keys","drawings","forEach","name","drawing","drawingRel","drawingRels","rels","reduce","o","rel","Id","anchors","anchor","hyperlinks","picture","rId","hyperlink","Target","tableOptions","styles","values","tables","table","sheetOptions","sharedStrings","date1904","properties","comments","vmlDrawings","worksheets","worksheet","relationships","worksheetRels","sheetNo","worksheetHash","globalRels","workbookRels","sheetDefs","_processWorksheetEntry","path","push","_processCommentEntry","_processTableEntry","_processWorksheetRelsEntry","_processMediaEntry","entry","lastDot","lastIndexOf","extension","substr","streamBuf","on","length","medium","type","buffer","toBuffer","pipe","_processDrawingEntry","_processDrawingRelsEntry","_processVmlDrawingEntry","vmlDrawing","_processThemeEntry","themes","toString","createInputStream","Symbol","asyncIterator","chunks","chunk","load","Buffer","concat","base64","from","zip","loadAsync","files","dir","entryName","match","write","async","writableObjectMode","readableObjectMode","content","process","browser","chunkSize","i","substring","end","sheets","definedNames","views","calcProperties","appXform","appProperties","company","manager","coreXform","coreProperties","assign","addMedia","all","map","append","dataimg64","indexOf","addDrawings","relsXform","prepare","xml","toXml","addTables","tableXml","target","addContentTypes","addApp","addCore","addThemes","theme1","addOfficeRels","Type","RelType","OfficeDocument","CoreProperties","ExtenderProperties","addWorkbookRels","count","Styles","Theme","SharedStrings","Worksheet","id","addSharedStrings","addStyles","addWorkbook","addWorksheets","relationshipsXform","commentsXform","vmlNotesXform","xmlStream","render","_finalize","finalize","prepareModel","creator","lastModifiedBy","created","Date","modified","useSharedStrings","undefined","useStyles","Mock","worksheetOptions","drawingsCount","commentRefs","tableCount","ZipWriter","writeFile","createWriteStream","then","catch","err","writeBuffer","module","exports"],"sources":["../../../lib/xlsx/xlsx.js"],"sourcesContent":["const fs = require('fs');\nconst JSZip = require('jszip');\nconst {PassThrough} = require('readable-stream');\nconst ZipStream = require('../utils/zip-stream');\nconst StreamBuf = require('../utils/stream-buf');\n\nconst utils = require('../utils/utils');\nconst XmlStream = require('../utils/xml-stream');\nconst {bufferToString} = require('../utils/browser-buffer-decode');\n\nconst StylesXform = require('./xform/style/styles-xform');\n\nconst CoreXform = require('./xform/core/core-xform');\nconst SharedStringsXform = require('./xform/strings/shared-strings-xform');\nconst RelationshipsXform = require('./xform/core/relationships-xform');\nconst ContentTypesXform = require('./xform/core/content-types-xform');\nconst AppXform = require('./xform/core/app-xform');\nconst WorkbookXform = require('./xform/book/workbook-xform');\nconst WorksheetXform = require('./xform/sheet/worksheet-xform');\nconst DrawingXform = require('./xform/drawing/drawing-xform');\nconst TableXform = require('./xform/table/table-xform');\nconst CommentsXform = require('./xform/comment/comments-xform');\nconst VmlNotesXform = require('./xform/comment/vml-notes-xform');\n\nconst theme1Xml = require('./xml/theme1');\n\nfunction fsReadFileAsync(filename, options) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(filename, options, (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nclass XLSX {\n  constructor(workbook) {\n    this.workbook = workbook;\n  }\n\n  // ===============================================================================\n  // Workbook\n  // =========================================================================\n  // Read\n\n  async readFile(filename, options) {\n    if (!(await utils.fs.exists(filename))) {\n      throw new Error(`File not found: ${filename}`);\n    }\n    const stream = fs.createReadStream(filename);\n    try {\n      const workbook = await this.read(stream, options);\n      stream.close();\n      return workbook;\n    } catch (error) {\n      stream.close();\n      throw error;\n    }\n  }\n\n  parseRels(stream) {\n    const xform = new RelationshipsXform();\n    return xform.parseStream(stream);\n  }\n\n  parseWorkbook(stream) {\n    const xform = new WorkbookXform();\n    return xform.parseStream(stream);\n  }\n\n  parseSharedStrings(stream) {\n    const xform = new SharedStringsXform();\n    return xform.parseStream(stream);\n  }\n\n  reconcile(model, options) {\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform(options);\n    const drawingXform = new DrawingXform();\n    const tableXform = new TableXform();\n\n    workbookXform.reconcile(model);\n\n    // reconcile drawings with their rels\n    const drawingOptions = {\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n    };\n    Object.keys(model.drawings).forEach(name => {\n      const drawing = model.drawings[name];\n      const drawingRel = model.drawingRels[name];\n      if (drawingRel) {\n        drawingOptions.rels = drawingRel.reduce((o, rel) => {\n          o[rel.Id] = rel;\n          return o;\n        }, {});\n        (drawing.anchors || []).forEach(anchor => {\n          const hyperlinks = anchor.picture && anchor.picture.hyperlinks;\n          if (hyperlinks && drawingOptions.rels[hyperlinks.rId]) {\n            hyperlinks.hyperlink = drawingOptions.rels[hyperlinks.rId].Target;\n            delete hyperlinks.rId;\n          }\n        });\n        drawingXform.reconcile(drawing, drawingOptions);\n      }\n    });\n\n    // reconcile tables with the default styles\n    const tableOptions = {\n      styles: model.styles,\n    };\n    Object.values(model.tables).forEach(table => {\n      tableXform.reconcile(table, tableOptions);\n    });\n\n    const sheetOptions = {\n      styles: model.styles,\n      sharedStrings: model.sharedStrings,\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n      date1904: model.properties && model.properties.date1904,\n      drawings: model.drawings,\n      comments: model.comments,\n      tables: model.tables,\n      vmlDrawings: model.vmlDrawings,\n    };\n    model.worksheets.forEach(worksheet => {\n      worksheet.relationships = model.worksheetRels[worksheet.sheetNo];\n      worksheetXform.reconcile(worksheet, sheetOptions);\n    });\n\n    // delete unnecessary parts\n    delete model.worksheetHash;\n    delete model.worksheetRels;\n    delete model.globalRels;\n    delete model.sharedStrings;\n    delete model.workbookRels;\n    delete model.sheetDefs;\n    delete model.styles;\n    delete model.mediaIndex;\n    delete model.drawings;\n    delete model.drawingRels;\n    delete model.vmlDrawings;\n  }\n\n  async _processWorksheetEntry(stream, model, sheetNo, options, path) {\n    const xform = new WorksheetXform(options);\n    const worksheet = await xform.parseStream(stream);\n    worksheet.sheetNo = sheetNo;\n    model.worksheetHash[path] = worksheet;\n    model.worksheets.push(worksheet);\n  }\n\n  async _processCommentEntry(stream, model, name) {\n    const xform = new CommentsXform();\n    const comments = await xform.parseStream(stream);\n    model.comments[`../${name}.xml`] = comments;\n  }\n\n  async _processTableEntry(stream, model, name) {\n    const xform = new TableXform();\n    const table = await xform.parseStream(stream);\n    model.tables[`../tables/${name}.xml`] = table;\n  }\n\n  async _processWorksheetRelsEntry(stream, model, sheetNo) {\n    const xform = new RelationshipsXform();\n    const relationships = await xform.parseStream(stream);\n    model.worksheetRels[sheetNo] = relationships;\n  }\n\n  async _processMediaEntry(entry, model, filename) {\n    const lastDot = filename.lastIndexOf('.');\n    // if we can't determine extension, ignore it\n    if (lastDot >= 1) {\n      const extension = filename.substr(lastDot + 1);\n      const name = filename.substr(0, lastDot);\n      await new Promise((resolve, reject) => {\n        const streamBuf = new StreamBuf();\n        streamBuf.on('finish', () => {\n          model.mediaIndex[filename] = model.media.length;\n          model.mediaIndex[name] = model.media.length;\n          const medium = {\n            type: 'image',\n            name,\n            extension,\n            buffer: streamBuf.toBuffer(),\n          };\n          model.media.push(medium);\n          resolve();\n        });\n        entry.on('error', error => {\n          reject(error);\n        });\n        entry.pipe(streamBuf);\n      });\n    }\n  }\n\n  async _processDrawingEntry(entry, model, name) {\n    const xform = new DrawingXform();\n    const drawing = await xform.parseStream(entry);\n    model.drawings[name] = drawing;\n  }\n\n  async _processDrawingRelsEntry(entry, model, name) {\n    const xform = new RelationshipsXform();\n    const relationships = await xform.parseStream(entry);\n    model.drawingRels[name] = relationships;\n  }\n\n  async _processVmlDrawingEntry(entry, model, name) {\n    const xform = new VmlNotesXform();\n    const vmlDrawing = await xform.parseStream(entry);\n    model.vmlDrawings[`../drawings/${name}.vml`] = vmlDrawing;\n  }\n\n  async _processThemeEntry(entry, model, name) {\n    await new Promise((resolve, reject) => {\n      // TODO: stream entry into buffer and store the xml in the model.themes[]\n      const stream = new StreamBuf();\n      entry.on('error', reject);\n      stream.on('error', reject);\n      stream.on('finish', () => {\n        model.themes[name] = stream.read().toString();\n        resolve();\n      });\n      entry.pipe(stream);\n    });\n  }\n\n  /**\n   * @deprecated since version 4.0. You should use `#read` instead. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md\n   */\n  createInputStream() {\n    throw new Error(\n      '`XLSX#createInputStream` is deprecated. You should use `XLSX#read` instead. This method will be removed in version 5.0. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md'\n    );\n  }\n\n  async read(stream, options) {\n    // TODO: Remove once node v8 is deprecated\n    // Detect and upgrade old streams\n    if (!stream[Symbol.asyncIterator] && stream.pipe) {\n      stream = stream.pipe(new PassThrough());\n    }\n    const chunks = [];\n    for await (const chunk of stream) {\n      chunks.push(chunk);\n    }\n    return this.load(Buffer.concat(chunks), options);\n  }\n\n  async load(data, options) {\n    let buffer;\n    if (options && options.base64) {\n      buffer = Buffer.from(data.toString(), 'base64');\n    } else {\n      buffer = data;\n    }\n\n    const model = {\n      worksheets: [],\n      worksheetHash: {},\n      worksheetRels: [],\n      themes: {},\n      media: [],\n      mediaIndex: {},\n      drawings: {},\n      drawingRels: {},\n      comments: {},\n      tables: {},\n      vmlDrawings: {},\n    };\n\n    const zip = await JSZip.loadAsync(buffer);\n    for (const entry of Object.values(zip.files)) {\n      /* eslint-disable no-await-in-loop */\n      if (!entry.dir) {\n        let entryName = entry.name;\n        if (entryName[0] === '/') {\n          entryName = entryName.substr(1);\n        }\n        let stream;\n        if (\n          entryName.match(/xl\\/media\\//) ||\n          // themes are not parsed as stream\n          entryName.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/)\n        ) {\n          stream = new PassThrough();\n          stream.write(await entry.async('nodebuffer'));\n        } else {\n          // use object mode to avoid buffer-string convention\n          stream = new PassThrough({\n            writableObjectMode: true,\n            readableObjectMode: true,\n          });\n          let content;\n          // https://www.npmjs.com/package/process\n          if (process.browser) {\n            // running in browser, use TextDecoder if possible\n            content = bufferToString(await entry.async('nodebuffer'));\n          } else {\n            // running in node.js\n            content = await entry.async('string');\n          }\n          const chunkSize = 16 * 1024;\n          for (let i = 0; i < content.length; i += chunkSize) {\n            stream.write(content.substring(i, i + chunkSize));\n          }\n        }\n        stream.end();\n        switch (entryName) {\n          case '_rels/.rels':\n            model.globalRels = await this.parseRels(stream);\n            break;\n\n          case 'xl/workbook.xml': {\n            const workbook = await this.parseWorkbook(stream);\n            model.sheets = workbook.sheets;\n            model.definedNames = workbook.definedNames;\n            model.views = workbook.views;\n            model.properties = workbook.properties;\n            model.calcProperties = workbook.calcProperties;\n            break;\n          }\n\n          case 'xl/_rels/workbook.xml.rels':\n            model.workbookRels = await this.parseRels(stream);\n            break;\n\n          case 'xl/sharedStrings.xml':\n            model.sharedStrings = new SharedStringsXform();\n            await model.sharedStrings.parseStream(stream);\n            break;\n\n          case 'xl/styles.xml':\n            model.styles = new StylesXform();\n            await model.styles.parseStream(stream);\n            break;\n\n          case 'docProps/app.xml': {\n            const appXform = new AppXform();\n            const appProperties = await appXform.parseStream(stream);\n            model.company = appProperties.company;\n            model.manager = appProperties.manager;\n            break;\n          }\n\n          case 'docProps/core.xml': {\n            const coreXform = new CoreXform();\n            const coreProperties = await coreXform.parseStream(stream);\n            Object.assign(model, coreProperties);\n            break;\n          }\n\n          default: {\n            let match = entryName.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\n            if (match) {\n              await this._processWorksheetEntry(stream, model, match[1], options, entryName);\n              break;\n            }\n            match = entryName.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\n            if (match) {\n              await this._processWorksheetRelsEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/);\n            if (match) {\n              await this._processThemeEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/media\\/([a-zA-Z0-9]+[.][a-zA-Z0-9]{3,4})$/);\n            if (match) {\n              await this._processMediaEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/drawings\\/([a-zA-Z0-9]+)[.]xml/);\n            if (match) {\n              await this._processDrawingEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/(comments\\d+)[.]xml/);\n            if (match) {\n              await this._processCommentEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/tables\\/(table\\d+)[.]xml/);\n            if (match) {\n              await this._processTableEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/drawings\\/_rels\\/([a-zA-Z0-9]+)[.]xml[.]rels/);\n            if (match) {\n              await this._processDrawingRelsEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/drawings\\/(vmlDrawing\\d+)[.]vml/);\n            if (match) {\n              await this._processVmlDrawingEntry(stream, model, match[1]);\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    this.reconcile(model, options);\n\n    // apply model\n    this.workbook.model = model;\n    return this.workbook;\n  }\n\n  // =========================================================================\n  // Write\n\n  async addMedia(zip, model) {\n    await Promise.all(\n      model.media.map(async medium => {\n        if (medium.type === 'image') {\n          const filename = `xl/media/${medium.name}.${medium.extension}`;\n          if (medium.filename) {\n            const data = await fsReadFileAsync(medium.filename);\n            return zip.append(data, {name: filename});\n          }\n          if (medium.buffer) {\n            return zip.append(medium.buffer, {name: filename});\n          }\n          if (medium.base64) {\n            const dataimg64 = medium.base64;\n            const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\n            return zip.append(content, {name: filename, base64: true});\n          }\n        }\n        throw new Error('Unsupported media');\n      })\n    );\n  }\n\n  addDrawings(zip, model) {\n    const drawingXform = new DrawingXform();\n    const relsXform = new RelationshipsXform();\n\n    model.worksheets.forEach(worksheet => {\n      const {drawing} = worksheet;\n      if (drawing) {\n        drawingXform.prepare(drawing, {});\n        let xml = drawingXform.toXml(drawing);\n        zip.append(xml, {name: `xl/drawings/${drawing.name}.xml`});\n\n        xml = relsXform.toXml(drawing.rels);\n        zip.append(xml, {name: `xl/drawings/_rels/${drawing.name}.xml.rels`});\n      }\n    });\n  }\n\n  addTables(zip, model) {\n    const tableXform = new TableXform();\n\n    model.worksheets.forEach(worksheet => {\n      const {tables} = worksheet;\n      tables.forEach(table => {\n        tableXform.prepare(table, {});\n        const tableXml = tableXform.toXml(table);\n        zip.append(tableXml, {name: `xl/tables/${table.target}`});\n      });\n    });\n  }\n\n  async addContentTypes(zip, model) {\n    const xform = new ContentTypesXform();\n    const xml = xform.toXml(model);\n    zip.append(xml, {name: '[Content_Types].xml'});\n  }\n\n  async addApp(zip, model) {\n    const xform = new AppXform();\n    const xml = xform.toXml(model);\n    zip.append(xml, {name: 'docProps/app.xml'});\n  }\n\n  async addCore(zip, model) {\n    const coreXform = new CoreXform();\n    zip.append(coreXform.toXml(model), {name: 'docProps/core.xml'});\n  }\n\n  async addThemes(zip, model) {\n    const themes = model.themes || {theme1: theme1Xml};\n    Object.keys(themes).forEach(name => {\n      const xml = themes[name];\n      const path = `xl/theme/${name}.xml`;\n      zip.append(xml, {name: path});\n    });\n  }\n\n  async addOfficeRels(zip) {\n    const xform = new RelationshipsXform();\n    const xml = xform.toXml([\n      {Id: 'rId1', Type: XLSX.RelType.OfficeDocument, Target: 'xl/workbook.xml'},\n      {Id: 'rId2', Type: XLSX.RelType.CoreProperties, Target: 'docProps/core.xml'},\n      {Id: 'rId3', Type: XLSX.RelType.ExtenderProperties, Target: 'docProps/app.xml'},\n    ]);\n    zip.append(xml, {name: '_rels/.rels'});\n  }\n\n  async addWorkbookRels(zip, model) {\n    let count = 1;\n    const relationships = [\n      {Id: `rId${count++}`, Type: XLSX.RelType.Styles, Target: 'styles.xml'},\n      {Id: `rId${count++}`, Type: XLSX.RelType.Theme, Target: 'theme/theme1.xml'},\n    ];\n    if (model.sharedStrings.count) {\n      relationships.push({\n        Id: `rId${count++}`,\n        Type: XLSX.RelType.SharedStrings,\n        Target: 'sharedStrings.xml',\n      });\n    }\n    model.worksheets.forEach(worksheet => {\n      worksheet.rId = `rId${count++}`;\n      relationships.push({\n        Id: worksheet.rId,\n        Type: XLSX.RelType.Worksheet,\n        Target: `worksheets/sheet${worksheet.id}.xml`,\n      });\n    });\n    const xform = new RelationshipsXform();\n    const xml = xform.toXml(relationships);\n    zip.append(xml, {name: 'xl/_rels/workbook.xml.rels'});\n  }\n\n  async addSharedStrings(zip, model) {\n    if (model.sharedStrings && model.sharedStrings.count) {\n      zip.append(model.sharedStrings.xml, {name: 'xl/sharedStrings.xml'});\n    }\n  }\n\n  async addStyles(zip, model) {\n    const {xml} = model.styles;\n    if (xml) {\n      zip.append(xml, {name: 'xl/styles.xml'});\n    }\n  }\n\n  async addWorkbook(zip, model) {\n    const xform = new WorkbookXform();\n    zip.append(xform.toXml(model), {name: 'xl/workbook.xml'});\n  }\n\n  async addWorksheets(zip, model) {\n    // preparation phase\n    const worksheetXform = new WorksheetXform();\n    const relationshipsXform = new RelationshipsXform();\n    const commentsXform = new CommentsXform();\n    const vmlNotesXform = new VmlNotesXform();\n\n    // write sheets\n    model.worksheets.forEach(worksheet => {\n      let xmlStream = new XmlStream();\n      worksheetXform.render(xmlStream, worksheet);\n      zip.append(xmlStream.xml, {name: `xl/worksheets/sheet${worksheet.id}.xml`});\n\n      if (worksheet.rels && worksheet.rels.length) {\n        xmlStream = new XmlStream();\n        relationshipsXform.render(xmlStream, worksheet.rels);\n        zip.append(xmlStream.xml, {name: `xl/worksheets/_rels/sheet${worksheet.id}.xml.rels`});\n      }\n\n      if (worksheet.comments.length > 0) {\n        xmlStream = new XmlStream();\n        commentsXform.render(xmlStream, worksheet);\n        zip.append(xmlStream.xml, {name: `xl/comments${worksheet.id}.xml`});\n\n        xmlStream = new XmlStream();\n        vmlNotesXform.render(xmlStream, worksheet);\n        zip.append(xmlStream.xml, {name: `xl/drawings/vmlDrawing${worksheet.id}.vml`});\n      }\n    });\n  }\n\n  _finalize(zip) {\n    return new Promise((resolve, reject) => {\n      zip.on('finish', () => {\n        resolve(this);\n      });\n      zip.on('error', reject);\n      zip.finalize();\n    });\n  }\n\n  prepareModel(model, options) {\n    // ensure following properties have sane values\n    model.creator = model.creator || 'ExcelJS';\n    model.lastModifiedBy = model.lastModifiedBy || 'ExcelJS';\n    model.created = model.created || new Date();\n    model.modified = model.modified || new Date();\n\n    model.useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : true;\n    model.useStyles = options.useStyles !== undefined ? options.useStyles : true;\n\n    // Manage the shared strings\n    model.sharedStrings = new SharedStringsXform();\n\n    // add a style manager to handle cell formats, fonts, etc.\n    model.styles = model.useStyles ? new StylesXform(true) : new StylesXform.Mock();\n\n    // prepare all of the things before the render\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform();\n\n    workbookXform.prepare(model);\n\n    const worksheetOptions = {\n      sharedStrings: model.sharedStrings,\n      styles: model.styles,\n      date1904: model.properties.date1904,\n      drawingsCount: 0,\n      media: model.media,\n    };\n    worksheetOptions.drawings = model.drawings = [];\n    worksheetOptions.commentRefs = model.commentRefs = [];\n    let tableCount = 0;\n    model.tables = [];\n    model.worksheets.forEach(worksheet => {\n      // assign unique filenames to tables\n      worksheet.tables.forEach(table => {\n        tableCount++;\n        table.target = `table${tableCount}.xml`;\n        table.id = tableCount;\n        model.tables.push(table);\n      });\n\n      worksheetXform.prepare(worksheet, worksheetOptions);\n    });\n\n    // TODO: workbook drawing list\n  }\n\n  async write(stream, options) {\n    options = options || {};\n    const {model} = this.workbook;\n    const zip = new ZipStream.ZipWriter(options.zip);\n    zip.pipe(stream);\n\n    this.prepareModel(model, options);\n\n    // render\n    await this.addContentTypes(zip, model);\n    await this.addOfficeRels(zip, model);\n    await this.addWorkbookRels(zip, model);\n    await this.addWorksheets(zip, model);\n    await this.addSharedStrings(zip, model); // always after worksheets\n    await this.addDrawings(zip, model);\n    await this.addTables(zip, model);\n    await Promise.all([this.addThemes(zip, model), this.addStyles(zip, model)]);\n    await this.addMedia(zip, model);\n    await Promise.all([this.addApp(zip, model), this.addCore(zip, model)]);\n    await this.addWorkbook(zip, model);\n    return this._finalize(zip);\n  }\n\n  writeFile(filename, options) {\n    const stream = fs.createWriteStream(filename);\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        resolve();\n      });\n      stream.on('error', error => {\n        reject(error);\n      });\n\n      this.write(stream, options).then(() => {\n        stream.end();\n      }).catch(err=>{\n        reject(err);\n      });\n    });\n  }\n\n  async writeBuffer(options) {\n    const stream = new StreamBuf();\n    await this.write(stream, options);\n    return stream.read();\n  }\n}\n\nXLSX.RelType = require('./rel-type');\n\nmodule.exports = XLSX;\n"],"mappings":"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"}
>>>>>>> 95bdce0e2476f31a1a1d26b5d1f458cd5295e48d
