<<<<<<< HEAD
{"version":3,"sources":["../../../lib/doc/worksheet.js"],"names":["_","require","colCache","Range","Row","Column","Enums","Image","Table","DataValidations","Encryptor","Worksheet","options","id","orderNo","name","state","_rows","_columns","_keys","_merges","rowBreaks","_workbook","workbook","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","firstPageNumber","horizontalCentered","verticalCentered","colBreaks","headerFooter","differentFirst","differentOddEven","oddHeader","oddFooter","evenHeader","evenFooter","firstHeader","firstFooter","dataValidations","views","autoFilter","_media","sheetProtection","tables","conditionalFormattings","removeWorksheetEx","key","value","f","each","c","col","l2n","length","n","push","start","count","rows","nRows","inserts","i","rowArguments","forEach","insert","row","getRow","splice","apply","r","nExpand","nKeep","nEnd","getColumn","defn","definedNames","spliceColumns","slice","style","rowNo","_nextRow","values","_setStyleOption","addRow","pos","spliceRows","findRow","_copyStyle","getRows","src","dest","styleEmpty","rSrc","rDst","freeze","eachCell","includeEmpty","cell","colNumber","getCell","height","rowNum","Array","fill","nInserts","_value","constructor","cellToBeMerged","_row","_number","prevMaster","_master","newMaster","_column","merge","iteratee","hasValues","number","address","getAddress","findCell","getCellEx","cells","dimensions","_mergeCellsInternal","ignoreStyle","intersects","Error","master","j","unmerge","type","ValueType","Merge","_unMergeMaster","range","formula","results","shareType","decoded","decode","width","masterAddress","encodeAddress","isShared","getResult","isArray","first","ref","result","sharedFormula","imageId","model","filter","m","image","find","password","Promise","resolve","sheet","spinCount","Number","isFinite","Math","round","max","algorithmName","saltValue","randomBytes","toString","hashValue","convertPasswordToHash","table","cf","Function","rowModel","mergeCells","mergeCellsWithoutStyle","rowDims","expand","min","_headerRowCount","reduce","pv","cv","headerCount","headers","columns","column","columnCount","maxCount","eachRow","cellCount","counts","_lastRowNumber","some","Boolean","console","trace","tabColor","media","map","medium","cols","toModel","merges","fromModel","_parseRows","_parseMergeCells","t","module","exports"],"mappings":"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","sourcesContent":["const _ = require('../utils/under-dash');\r\n\r\nconst colCache = require('../utils/col-cache');\r\nconst Range = require('./range');\r\nconst Row = require('./row');\r\nconst Column = require('./column');\r\nconst Enums = require('./enums');\r\nconst Image = require('./image');\r\nconst Table = require('./table');\r\nconst DataValidations = require('./data-validations');\r\nconst Encryptor = require('../utils/encryptor');\r\n\r\n// Worksheet requirements\r\n//  Operate as sheet inside workbook or standalone\r\n//  Load and Save from file and stream\r\n//  Access/Add/Delete individual cells\r\n//  Manage column widths and row heights\r\n\r\nclass Worksheet {\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    // in a workbook, each sheet will have a number\r\n    this.id = options.id;\r\n    this.orderNo = options.orderNo;\r\n\r\n    // and a name\r\n    this.name = options.name || `Sheet${this.id}`;\r\n\r\n    // add a state\r\n    this.state = options.state || 'visible';\r\n\r\n    // rows allows access organised by row. Sparse array of arrays indexed by row-1, col\r\n    // Note: _rows is zero based. Must subtract 1 to go from cell.row to index\r\n    this._rows = [];\r\n\r\n    // column definitions\r\n    this._columns = null;\r\n\r\n    // column keys (addRow convenience): key ==> this._collumns index\r\n    this._keys = {};\r\n\r\n    // keep record of all merges\r\n    this._merges = {};\r\n\r\n    // record of all row and column pageBreaks\r\n    this.rowBreaks = [];\r\n\r\n    this._workbook = options.workbook;\r\n\r\n    // for tabColor, default row height, outline levels, etc\r\n    this.properties = Object.assign(\r\n      {},\r\n      {\r\n        defaultRowHeight: 15,\r\n        dyDescent: 55,\r\n        outlineLevelCol: 0,\r\n        outlineLevelRow: 0,\r\n      },\r\n      options.properties\r\n    );\r\n\r\n    // for all things printing\r\n    this.pageSetup = Object.assign(\r\n      {},\r\n      {\r\n        margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3},\r\n        orientation: 'portrait',\r\n        horizontalDpi: 4294967295,\r\n        verticalDpi: 4294967295,\r\n        fitToPage: !!(\r\n          options.pageSetup &&\r\n          (options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) &&\r\n          !options.pageSetup.scale\r\n        ),\r\n        pageOrder: 'downThenOver',\r\n        blackAndWhite: false,\r\n        draft: false,\r\n        cellComments: 'None',\r\n        errors: 'displayed',\r\n        scale: 100,\r\n        fitToWidth: 1,\r\n        fitToHeight: 1,\r\n        paperSize: undefined,\r\n        showRowColHeaders: false,\r\n        showGridLines: false,\r\n        firstPageNumber: undefined,\r\n        horizontalCentered: false,\r\n        verticalCentered: false,\r\n        rowBreaks: null,\r\n        colBreaks: null,\r\n      },\r\n      options.pageSetup\r\n    );\r\n\r\n    this.headerFooter = Object.assign(\r\n      {},\r\n      {\r\n        differentFirst: false,\r\n        differentOddEven: false,\r\n        oddHeader: null,\r\n        oddFooter: null,\r\n        evenHeader: null,\r\n        evenFooter: null,\r\n        firstHeader: null,\r\n        firstFooter: null,\r\n      },\r\n      options.headerFooter\r\n    );\r\n\r\n    this.dataValidations = new DataValidations();\r\n\r\n    // for freezepanes, split, zoom, gridlines, etc\r\n    this.views = options.views || [];\r\n\r\n    this.autoFilter = options.autoFilter || null;\r\n\r\n    // for images, etc\r\n    this._media = [];\r\n\r\n    // worksheet protection\r\n    this.sheetProtection = null;\r\n\r\n    // for tables\r\n    this.tables = {};\r\n\r\n    this.conditionalFormattings = [];\r\n  }\r\n\r\n  get workbook() {\r\n    return this._workbook;\r\n  }\r\n\r\n  // when you're done with this worksheet, call this to remove from workbook\r\n  destroy() {\r\n    this._workbook.removeWorksheetEx(this);\r\n  }\r\n\r\n  // Get the bounding range of the cells in this worksheet\r\n  get dimensions() {\r\n    const dimensions = new Range();\r\n    this._rows.forEach(row => {\r\n      if (row) {\r\n        const rowDims = row.dimensions;\r\n        if (rowDims) {\r\n          dimensions.expand(row.number, rowDims.min, row.number, rowDims.max);\r\n        }\r\n      }\r\n    });\r\n    return dimensions;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Columns\r\n\r\n  // get the current columns array.\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  // set the columns from an array of column definitions.\r\n  // Note: any headers defined will overwrite existing values.\r\n  set columns(value) {\r\n    // calculate max header row count\r\n    this._headerRowCount = value.reduce((pv, cv) => {\r\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\r\n      return Math.max(pv, headerCount);\r\n    }, 0);\r\n\r\n    // construct Column objects\r\n    let count = 1;\r\n    const columns = (this._columns = []);\r\n    value.forEach(defn => {\r\n      const column = new Column(this, count++, false);\r\n      columns.push(column);\r\n      column.defn = defn;\r\n    });\r\n  }\r\n\r\n  getColumnKey(key) {\r\n    return this._keys[key];\r\n  }\r\n\r\n  setColumnKey(key, value) {\r\n    this._keys[key] = value;\r\n  }\r\n\r\n  deleteColumnKey(key) {\r\n    delete this._keys[key];\r\n  }\r\n\r\n  eachColumnKey(f) {\r\n    _.each(this._keys, f);\r\n  }\r\n\r\n  // get a single column by col number. If it doesn't exist, create it and any gaps before it\r\n  getColumn(c) {\r\n    if (typeof c === 'string') {\r\n      // if it matches a key'd column, return that\r\n      const col = this._keys[c];\r\n      if (col) return col;\r\n\r\n      // otherwise, assume letter\r\n      c = colCache.l2n(c);\r\n    }\r\n    if (!this._columns) {\r\n      this._columns = [];\r\n    }\r\n    if (c > this._columns.length) {\r\n      let n = this._columns.length + 1;\r\n      while (n <= c) {\r\n        this._columns.push(new Column(this, n++));\r\n      }\r\n    }\r\n    return this._columns[c - 1];\r\n  }\r\n\r\n  spliceColumns(start, count, ...inserts) {\r\n    const rows = this._rows;\r\n    const nRows = rows.length;\r\n    if (inserts.length > 0) {\r\n      // must iterate over all rows whether they exist yet or not\r\n      for (let i = 0; i < nRows; i++) {\r\n        const rowArguments = [start, count];\r\n        // eslint-disable-next-line no-loop-func\r\n        inserts.forEach(insert => {\r\n          rowArguments.push(insert[i] || null);\r\n        });\r\n        const row = this.getRow(i + 1);\r\n        // eslint-disable-next-line prefer-spread\r\n        row.splice.apply(row, rowArguments);\r\n      }\r\n    } else {\r\n      // nothing to insert, so just splice all rows\r\n      this._rows.forEach(r => {\r\n        if (r) {\r\n          r.splice(start, count);\r\n        }\r\n      });\r\n    }\r\n\r\n    // splice column definitions\r\n    const nExpand = inserts.length - count;\r\n    const nKeep = start + count;\r\n    const nEnd = this._columns.length;\r\n    if (nExpand < 0) {\r\n      for (let i = start + inserts.length; i <= nEnd; i++) {\r\n        this.getColumn(i).defn = this.getColumn(i - nExpand).defn;\r\n      }\r\n    } else if (nExpand > 0) {\r\n      for (let i = nEnd; i >= nKeep; i--) {\r\n        this.getColumn(i + nExpand).defn = this.getColumn(i).defn;\r\n      }\r\n    }\r\n    for (let i = start; i < start + inserts.length; i++) {\r\n      this.getColumn(i).defn = null;\r\n    }\r\n\r\n    // account for defined names\r\n    this.workbook.definedNames.spliceColumns(this.name, start, count, inserts.length);\r\n  }\r\n\r\n  get lastColumn() {\r\n    return this.getColumn(this.columnCount);\r\n  }\r\n\r\n  get columnCount() {\r\n    let maxCount = 0;\r\n    this.eachRow(row => {\r\n      maxCount = Math.max(maxCount, row.cellCount);\r\n    });\r\n    return maxCount;\r\n  }\r\n\r\n  get actualColumnCount() {\r\n    // performance nightmare - for each row, counts all the columns used\r\n    const counts = [];\r\n    let count = 0;\r\n    this.eachRow(row => {\r\n      row.eachCell(({col}) => {\r\n        if (!counts[col]) {\r\n          counts[col] = true;\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n    return count;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Rows\r\n\r\n  _commitRow() {\r\n    // nop - allows streaming reader to fill a document\r\n  }\r\n\r\n  get _lastRowNumber() {\r\n    // need to cope with results of splice\r\n    const rows = this._rows;\r\n    let n = rows.length;\r\n    while (n > 0 && rows[n - 1] === undefined) {\r\n      n--;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  get _nextRow() {\r\n    return this._lastRowNumber + 1;\r\n  }\r\n\r\n  get lastRow() {\r\n    if (this._rows.length) {\r\n      return this._rows[this._rows.length - 1];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  // find a row (if exists) by row number\r\n  findRow(r) {\r\n    return this._rows[r - 1];\r\n  }\r\n\r\n  // find multiple rows (if exists) by row number\r\n  findRows(start, length) {\r\n    return this._rows.slice(start - 1, start - 1 + length);\r\n  }\r\n\r\n  get rowCount() {\r\n    return this._lastRowNumber;\r\n  }\r\n\r\n  get actualRowCount() {\r\n    // counts actual rows that have actual data\r\n    let count = 0;\r\n    this.eachRow(() => {\r\n      count++;\r\n    });\r\n    return count;\r\n  }\r\n\r\n  // get a row by row number.\r\n  getRow(r) {\r\n    let row = this._rows[r - 1];\r\n    if (!row) {\r\n      row = this._rows[r - 1] = new Row(this, r);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  // get multiple rows by row number.\r\n  getRows(start, length) {\r\n    if (length < 1) return undefined;\r\n    const rows = [];\r\n    for (let i = start; i < start + length; i++) {\r\n      rows.push(this.getRow(i));\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  addRow(value, style = 'n') {\r\n    const rowNo = this._nextRow;\r\n    const row = this.getRow(rowNo);\r\n    row.values = value;\r\n    this._setStyleOption(rowNo, style[0] === 'i' ? style : 'n');\r\n    return row;\r\n  }\r\n\r\n  addRows(value, style = 'n') {\r\n    const rows = [];\r\n    value.forEach(row => {\r\n      rows.push(this.addRow(row, style));\r\n    });\r\n    return rows;\r\n  }\r\n\r\n  insertRow(pos, value, style = 'n') {\r\n    this.spliceRows(pos, 0, value);\r\n    this._setStyleOption(pos, style);\r\n    return this.getRow(pos);\r\n  }\r\n\r\n  insertRows(pos, values, style = 'n') {\r\n    this.spliceRows(pos, 0, ...values);\r\n    if (style !== 'n') {\r\n      // copy over the styles\r\n      for (let i = 0; i < values.length; i++) {\r\n        if (style[0] === 'o' && this.findRow(values.length + pos + i) !== undefined) {\r\n          this._copyStyle(values.length + pos + i, pos + i, style[1] === '+');\r\n        } else if (style[0] === 'i' && this.findRow(pos - 1) !== undefined) {\r\n          this._copyStyle(pos - 1, pos + i, style[1] === '+');\r\n        }\r\n      }\r\n    }\r\n    return this.getRows(pos, values.length);\r\n  }\r\n\r\n  // set row at position to same style as of either pervious row (option 'i') or next row (option 'o')\r\n  _setStyleOption(pos, style = 'n') {\r\n    if (style[0] === 'o' && this.findRow(pos + 1) !== undefined) {\r\n      this._copyStyle(pos + 1, pos, style[1] === '+');\r\n    } else if (style[0] === 'i' && this.findRow(pos - 1) !== undefined) {\r\n      this._copyStyle(pos - 1, pos, style[1] === '+');\r\n    }\r\n  }\r\n\r\n  _copyStyle(src, dest, styleEmpty = false) {\r\n    const rSrc = this.getRow(src);\r\n    const rDst = this.getRow(dest);\r\n    rDst.style = Object.freeze({...rSrc.style});\r\n    // eslint-disable-next-line no-loop-func\r\n    rSrc.eachCell({includeEmpty: styleEmpty}, (cell, colNumber) => {\r\n      rDst.getCell(colNumber).style = Object.freeze({...cell.style});\r\n    });\r\n    rDst.height = rSrc.height;\r\n  }\r\n\r\n  duplicateRow(rowNum, count, insert = false) {\r\n    // create count duplicates of rowNum\r\n    // either inserting new or overwriting existing rows\r\n\r\n    const rSrc = this._rows[rowNum - 1];\r\n    const inserts = new Array(count).fill(rSrc.values);\r\n    this.spliceRows(rowNum + 1, insert ? 0 : count, ...inserts);\r\n\r\n    // now copy styles...\r\n    for (let i = 0; i < count; i++) {\r\n      const rDst = this._rows[rowNum + i];\r\n      rDst.style = rSrc.style;\r\n      rDst.height = rSrc.height;\r\n      // eslint-disable-next-line no-loop-func\r\n      rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\r\n        rDst.getCell(colNumber).style = cell.style;\r\n      });\r\n    }\r\n  }\r\n\r\n  spliceRows(start, count, ...inserts) {\r\n    // same problem as row.splice, except worse.\r\n    const nKeep = start + count;\r\n    const nInserts = inserts.length;\r\n    const nExpand = nInserts - count;\r\n    const nEnd = this._rows.length;\r\n    let i;\r\n    let rSrc;\r\n    if (nExpand < 0) {\r\n      // remove rows\r\n      for (i = nKeep; i <= nEnd; i++) {\r\n        rSrc = this._rows[i - 1];\r\n        if (rSrc) {\r\n          const rDst = this.getRow(i + nExpand);\r\n          rDst.values = rSrc.values;\r\n          rDst.style = rSrc.style;\r\n          rDst.height = rSrc.height;\r\n          // eslint-disable-next-line no-loop-func\r\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\r\n            rDst.getCell(colNumber).style = cell.style;\r\n          });\r\n          this._rows[i - 1] = undefined;\r\n        } else {\r\n          this._rows[i + nExpand - 1] = undefined;\r\n        }\r\n      }\r\n    } else if (nExpand > 0) {\r\n      // insert new cells\r\n      for (i = nEnd; i >= nKeep; i--) {\r\n        rSrc = this._rows[i - 1];\r\n        if (rSrc) {\r\n          const rDst = this.getRow(i + nExpand);\r\n          rDst.values = rSrc.values;\r\n          rDst.style = rSrc.style;\r\n          rDst.height = rSrc.height;\r\n          // eslint-disable-next-line no-loop-func\r\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\r\n            rDst.getCell(colNumber).style = cell.style;\r\n\r\n            // remerge cells accounting for insert offset\r\n            if (cell._value.constructor.name === 'MergeValue') {\r\n              const cellToBeMerged = this.getRow(cell._row._number + nInserts).getCell(colNumber);\r\n              const prevMaster = cell._value._master;\r\n              const newMaster = this.getRow(prevMaster._row._number + nInserts).getCell(prevMaster._column._number);\r\n              cellToBeMerged.merge(newMaster);\r\n            }\r\n          });\r\n        } else {\r\n          this._rows[i + nExpand - 1] = undefined;\r\n        }\r\n      }\r\n    }\r\n\r\n    // now copy over the new values\r\n    for (i = 0; i < nInserts; i++) {\r\n      const rDst = this.getRow(start + i);\r\n      rDst.style = {};\r\n      rDst.values = inserts[i];\r\n    }\r\n\r\n    // account for defined names\r\n    this.workbook.definedNames.spliceRows(this.name, start, count, nInserts);\r\n  }\r\n\r\n  // iterate over every row in the worksheet, including maybe empty rows\r\n  eachRow(options, iteratee) {\r\n    if (!iteratee) {\r\n      iteratee = options;\r\n      options = undefined;\r\n    }\r\n    if (options && options.includeEmpty) {\r\n      const n = this._rows.length;\r\n      for (let i = 1; i <= n; i++) {\r\n        iteratee(this.getRow(i), i);\r\n      }\r\n    } else {\r\n      this._rows.forEach(row => {\r\n        if (row && row.hasValues) {\r\n          iteratee(row, row.number);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // return all rows as sparse array\r\n  getSheetValues() {\r\n    const rows = [];\r\n    this._rows.forEach(row => {\r\n      if (row) {\r\n        rows[row.number] = row.values;\r\n      }\r\n    });\r\n    return rows;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Cells\r\n\r\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\r\n  findCell(r, c) {\r\n    const address = colCache.getAddress(r, c);\r\n    const row = this._rows[address.row - 1];\r\n    return row ? row.findCell(address.col) : undefined;\r\n  }\r\n\r\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\r\n  getCell(r, c) {\r\n    const address = colCache.getAddress(r, c);\r\n    const row = this.getRow(address.row);\r\n    return row.getCellEx(address);\r\n  }\r\n\r\n  // =========================================================================\r\n  // Merge\r\n\r\n  // convert the range defined by ['tl:br'], [tl,br] or [t,l,b,r] into a single 'merged' cell\r\n  mergeCells(...cells) {\r\n    const dimensions = new Range(cells);\r\n    this._mergeCellsInternal(dimensions);\r\n  }\r\n\r\n  mergeCellsWithoutStyle(...cells) {\r\n    const dimensions = new Range(cells);\r\n    this._mergeCellsInternal(dimensions, true);\r\n  }\r\n\r\n  _mergeCellsInternal(dimensions, ignoreStyle) {\r\n    // check cells aren't already merged\r\n    _.each(this._merges, merge => {\r\n      if (merge.intersects(dimensions)) {\r\n        throw new Error('Cannot merge already merged cells');\r\n      }\r\n    });\r\n\r\n    // apply merge\r\n    const master = this.getCell(dimensions.top, dimensions.left);\r\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\r\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\r\n        // merge all but the master cell\r\n        if (i > dimensions.top || j > dimensions.left) {\r\n          this.getCell(i, j).merge(master, ignoreStyle);\r\n        }\r\n      }\r\n    }\r\n\r\n    // index merge\r\n    this._merges[master.address] = dimensions;\r\n  }\r\n\r\n  _unMergeMaster(master) {\r\n    // master is always top left of a rectangle\r\n    const merge = this._merges[master.address];\r\n    if (merge) {\r\n      for (let i = merge.top; i <= merge.bottom; i++) {\r\n        for (let j = merge.left; j <= merge.right; j++) {\r\n          this.getCell(i, j).unmerge();\r\n        }\r\n      }\r\n      delete this._merges[master.address];\r\n    }\r\n  }\r\n\r\n  get hasMerges() {\r\n    // return true if this._merges has a merge object\r\n    return _.some(this._merges, Boolean);\r\n  }\r\n\r\n  // scan the range defined by ['tl:br'], [tl,br] or [t,l,b,r] and if any cell is part of a merge,\r\n  // un-merge the group. Note this function can affect multiple merges and merge-blocks are\r\n  // atomic - either they're all merged or all un-merged.\r\n  unMergeCells(...cells) {\r\n    const dimensions = new Range(cells);\r\n\r\n    // find any cells in that range and unmerge them\r\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\r\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\r\n        const cell = this.findCell(i, j);\r\n        if (cell) {\r\n          if (cell.type === Enums.ValueType.Merge) {\r\n            // this cell merges to another master\r\n            this._unMergeMaster(cell.master);\r\n          } else if (this._merges[cell.address]) {\r\n            // this cell is a master\r\n            this._unMergeMaster(cell);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Shared/Array Formula\r\n  fillFormula(range, formula, results, shareType = 'shared') {\r\n    // Define formula for top-left cell and share to rest\r\n    const decoded = colCache.decode(range);\r\n    const {top, left, bottom, right} = decoded;\r\n    const width = right - left + 1;\r\n    const masterAddress = colCache.encodeAddress(top, left);\r\n    const isShared = shareType === 'shared';\r\n\r\n    // work out result accessor\r\n    let getResult;\r\n    if (typeof results === 'function') {\r\n      getResult = results;\r\n    } else if (Array.isArray(results)) {\r\n      if (Array.isArray(results[0])) {\r\n        getResult = (row, col) => results[row - top][col - left];\r\n      } else {\r\n        // eslint-disable-next-line no-mixed-operators\r\n        getResult = (row, col) => results[(row - top) * width + (col - left)];\r\n      }\r\n    } else {\r\n      getResult = () => undefined;\r\n    }\r\n    let first = true;\r\n    for (let r = top; r <= bottom; r++) {\r\n      for (let c = left; c <= right; c++) {\r\n        if (first) {\r\n          this.getCell(r, c).value = {\r\n            shareType,\r\n            formula,\r\n            ref: range,\r\n            result: getResult(r, c),\r\n          };\r\n          first = false;\r\n        } else {\r\n          this.getCell(r, c).value = isShared\r\n            ? {\r\n                sharedFormula: masterAddress,\r\n                result: getResult(r, c),\r\n              }\r\n            : getResult(r, c);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // =========================================================================\r\n  // Images\r\n  addImage(imageId, range) {\r\n    const model = {\r\n      type: 'image',\r\n      imageId,\r\n      range,\r\n    };\r\n    this._media.push(new Image(this, model));\r\n  }\r\n\r\n  getImages() {\r\n    return this._media.filter(m => m.type === 'image');\r\n  }\r\n\r\n  addBackgroundImage(imageId) {\r\n    const model = {\r\n      type: 'background',\r\n      imageId,\r\n    };\r\n    this._media.push(new Image(this, model));\r\n  }\r\n\r\n  getBackgroundImageId() {\r\n    const image = this._media.find(m => m.type === 'background');\r\n    return image && image.imageId;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Worksheet Protection\r\n  protect(password, options) {\r\n    // TODO: make this function truly async\r\n    // perhaps marshal to worker thread or something\r\n    return new Promise(resolve => {\r\n      this.sheetProtection = {\r\n        sheet: true,\r\n      };\r\n      if (options && 'spinCount' in options) {\r\n        // force spinCount to be integer >= 0\r\n        options.spinCount = Number.isFinite(options.spinCount) ? Math.round(Math.max(0, options.spinCount)) : 100000;\r\n      }\r\n      if (password) {\r\n        this.sheetProtection.algorithmName = 'SHA-512';\r\n        this.sheetProtection.saltValue = Encryptor.randomBytes(16).toString('base64');\r\n        this.sheetProtection.spinCount = options && 'spinCount' in options ? options.spinCount : 100000; // allow user specified spinCount\r\n        this.sheetProtection.hashValue = Encryptor.convertPasswordToHash(\r\n          password,\r\n          'SHA512',\r\n          this.sheetProtection.saltValue,\r\n          this.sheetProtection.spinCount\r\n        );\r\n      }\r\n      if (options) {\r\n        this.sheetProtection = Object.assign(this.sheetProtection, options);\r\n        if (!password && 'spinCount' in options) {\r\n          delete this.sheetProtection.spinCount;\r\n        }\r\n      }\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  unprotect() {\r\n    this.sheetProtection = null;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Tables\r\n  addTable(model) {\r\n    const table = new Table(this, model);\r\n    this.tables[model.name] = table;\r\n    return table;\r\n  }\r\n\r\n  getTable(name) {\r\n    return this.tables[name];\r\n  }\r\n\r\n  removeTable(name) {\r\n    delete this.tables[name];\r\n  }\r\n\r\n  getTables() {\r\n    return Object.values(this.tables);\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Conditional Formatting\r\n  addConditionalFormatting(cf) {\r\n    this.conditionalFormattings.push(cf);\r\n  }\r\n\r\n  removeConditionalFormatting(filter) {\r\n    if (typeof filter === 'number') {\r\n      this.conditionalFormattings.splice(filter, 1);\r\n    } else if (filter instanceof Function) {\r\n      this.conditionalFormattings = this.conditionalFormattings.filter(filter);\r\n    } else {\r\n      this.conditionalFormattings = [];\r\n    }\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Deprecated\r\n  get tabColor() {\r\n    // eslint-disable-next-line no-console\r\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\r\n    return this.properties.tabColor;\r\n  }\r\n\r\n  set tabColor(value) {\r\n    // eslint-disable-next-line no-console\r\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\r\n    this.properties.tabColor = value;\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Model\r\n\r\n  get model() {\r\n    const model = {\r\n      id: this.id,\r\n      name: this.name,\r\n      dataValidations: this.dataValidations.model,\r\n      properties: this.properties,\r\n      state: this.state,\r\n      pageSetup: this.pageSetup,\r\n      headerFooter: this.headerFooter,\r\n      rowBreaks: this.rowBreaks,\r\n      views: this.views,\r\n      autoFilter: this.autoFilter,\r\n      media: this._media.map(medium => medium.model),\r\n      sheetProtection: this.sheetProtection,\r\n      tables: Object.values(this.tables).map(table => table.model),\r\n      conditionalFormattings: this.conditionalFormattings,\r\n    };\r\n\r\n    // =================================================\r\n    // columns\r\n    model.cols = Column.toModel(this.columns);\r\n\r\n    // ==========================================================\r\n    // Rows\r\n    const rows = (model.rows = []);\r\n    const dimensions = (model.dimensions = new Range());\r\n    this._rows.forEach(row => {\r\n      const rowModel = row && row.model;\r\n      if (rowModel) {\r\n        dimensions.expand(rowModel.number, rowModel.min, rowModel.number, rowModel.max);\r\n        rows.push(rowModel);\r\n      }\r\n    });\r\n\r\n    // ==========================================================\r\n    // Merges\r\n    model.merges = [];\r\n    _.each(this._merges, merge => {\r\n      model.merges.push(merge.range);\r\n    });\r\n\r\n    return model;\r\n  }\r\n\r\n  _parseRows(model) {\r\n    this._rows = [];\r\n    model.rows.forEach(rowModel => {\r\n      const row = new Row(this, rowModel.number);\r\n      this._rows[row.number - 1] = row;\r\n      row.model = rowModel;\r\n    });\r\n  }\r\n\r\n  _parseMergeCells(model) {\r\n    _.each(model.mergeCells, merge => {\r\n      // Do not merge styles when importing an Excel file\r\n      // since each cell may have different styles intentionally.\r\n      this.mergeCellsWithoutStyle(merge);\r\n    });\r\n  }\r\n\r\n  set model(value) {\r\n    this.name = value.name;\r\n    this._columns = Column.fromModel(this, value.cols);\r\n    this._parseRows(value);\r\n\r\n    this._parseMergeCells(value);\r\n    this.dataValidations = new DataValidations(value.dataValidations);\r\n    this.properties = value.properties;\r\n    this.pageSetup = value.pageSetup;\r\n    this.headerFooter = value.headerFooter;\r\n    this.views = value.views;\r\n    this.autoFilter = value.autoFilter;\r\n    this._media = value.media.map(medium => new Image(this, medium));\r\n    this.sheetProtection = value.sheetProtection;\r\n    this.tables = value.tables.reduce((tables, table) => {\r\n      const t = new Table();\r\n      t.model = table;\r\n      tables[table.name] = t;\r\n      return tables;\r\n    }, {});\r\n    this.conditionalFormattings = value.conditionalFormattings;\r\n  }\r\n}\r\n\r\nmodule.exports = Worksheet;\r\n"],"file":"worksheet.js"}
=======
{"version":3,"file":"worksheet.js","names":["_","require","colCache","Range","Row","Column","Enums","Image","Table","DataValidations","Encryptor","copyStyle","Worksheet","constructor","options","_workbook","workbook","id","orderNo","name","state","_rows","_columns","_keys","_merges","rowBreaks","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","firstPageNumber","horizontalCentered","verticalCentered","colBreaks","headerFooter","differentFirst","differentOddEven","oddHeader","oddFooter","evenHeader","evenFooter","firstHeader","firstFooter","dataValidations","views","autoFilter","_media","sheetProtection","tables","conditionalFormattings","_name","Error","test","length","console","warn","substring","_worksheets","find","ws","toLowerCase","destroy","removeWorksheetEx","dimensions","forEach","row","rowDims","expand","number","min","max","columns","value","_headerRowCount","reduce","pv","cv","headerCount","headers","Math","count","defn","column","push","getColumnKey","key","setColumnKey","deleteColumnKey","eachColumnKey","f","each","getColumn","c","col","l2n","n","spliceColumns","start","rows","nRows","_len","arguments","inserts","Array","_key","i","rowArguments","insert","getRow","splice","apply","r","nExpand","nKeep","nEnd","definedNames","lastColumn","columnCount","maxCount","eachRow","cellCount","actualColumnCount","counts","eachCell","_ref","_commitRow","_lastRowNumber","_nextRow","lastRow","findRow","findRows","slice","rowCount","actualRowCount","getRows","addRow","style","rowNo","values","_setStyleOption","addRows","insertRow","pos","spliceRows","insertRows","_copyStyle","src","dest","styleEmpty","rSrc","rDst","includeEmpty","cell","colNumber","getCell","height","duplicateRow","rowNum","fill","_len2","_key2","nInserts","_value","cellToBeMerged","_row","_number","prevMaster","_master","newMaster","_column","merge","iteratee","hasValues","getSheetValues","findCell","address","getAddress","getCellEx","mergeCells","_len3","cells","_key3","_mergeCellsInternal","mergeCellsWithoutStyle","_len4","_key4","ignoreStyle","intersects","master","j","_unMergeMaster","unmerge","hasMerges","some","Boolean","unMergeCells","_len5","_key5","type","ValueType","Merge","fillFormula","range","formula","results","shareType","decoded","decode","width","masterAddress","encodeAddress","isShared","getResult","isArray","first","ref","result","sharedFormula","addImage","imageId","model","getImages","filter","m","addBackgroundImage","getBackgroundImageId","image","protect","password","Promise","resolve","sheet","spinCount","Number","isFinite","round","algorithmName","saltValue","randomBytes","toString","hashValue","convertPasswordToHash","unprotect","addTable","table","getTable","removeTable","getTables","addConditionalFormatting","cf","removeConditionalFormatting","Function","tabColor","trace","media","map","medium","cols","toModel","rowModel","merges","_parseRows","_parseMergeCells","fromModel","t","module","exports"],"sources":["../../../lib/doc/worksheet.js"],"sourcesContent":["const _ = require('../utils/under-dash');\n\nconst colCache = require('../utils/col-cache');\nconst Range = require('./range');\nconst Row = require('./row');\nconst Column = require('./column');\nconst Enums = require('./enums');\nconst Image = require('./image');\nconst Table = require('./table');\nconst DataValidations = require('./data-validations');\nconst Encryptor = require('../utils/encryptor');\nconst {copyStyle} = require('../utils/copy-style');\n\n// Worksheet requirements\n//  Operate as sheet inside workbook or standalone\n//  Load and Save from file and stream\n//  Access/Add/Delete individual cells\n//  Manage column widths and row heights\n\nclass Worksheet {\n  constructor(options) {\n    options = options || {};\n    this._workbook = options.workbook;\n\n    // in a workbook, each sheet will have a number\n    this.id = options.id;\n    this.orderNo = options.orderNo;\n\n    // and a name\n    this.name = options.name;\n\n    // add a state\n    this.state = options.state || 'visible';\n\n    // rows allows access organised by row. Sparse array of arrays indexed by row-1, col\n    // Note: _rows is zero based. Must subtract 1 to go from cell.row to index\n    this._rows = [];\n\n    // column definitions\n    this._columns = null;\n\n    // column keys (addRow convenience): key ==> this._collumns index\n    this._keys = {};\n\n    // keep record of all merges\n    this._merges = {};\n\n    // record of all row and column pageBreaks\n    this.rowBreaks = [];\n\n    // for tabColor, default row height, outline levels, etc\n    this.properties = Object.assign(\n      {},\n      {\n        defaultRowHeight: 15,\n        dyDescent: 55,\n        outlineLevelCol: 0,\n        outlineLevelRow: 0,\n      },\n      options.properties\n    );\n\n    // for all things printing\n    this.pageSetup = Object.assign(\n      {},\n      {\n        margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3},\n        orientation: 'portrait',\n        horizontalDpi: 4294967295,\n        verticalDpi: 4294967295,\n        fitToPage: !!(\n          options.pageSetup &&\n          (options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) &&\n          !options.pageSetup.scale\n        ),\n        pageOrder: 'downThenOver',\n        blackAndWhite: false,\n        draft: false,\n        cellComments: 'None',\n        errors: 'displayed',\n        scale: 100,\n        fitToWidth: 1,\n        fitToHeight: 1,\n        paperSize: undefined,\n        showRowColHeaders: false,\n        showGridLines: false,\n        firstPageNumber: undefined,\n        horizontalCentered: false,\n        verticalCentered: false,\n        rowBreaks: null,\n        colBreaks: null,\n      },\n      options.pageSetup\n    );\n\n    this.headerFooter = Object.assign(\n      {},\n      {\n        differentFirst: false,\n        differentOddEven: false,\n        oddHeader: null,\n        oddFooter: null,\n        evenHeader: null,\n        evenFooter: null,\n        firstHeader: null,\n        firstFooter: null,\n      },\n      options.headerFooter\n    );\n\n    this.dataValidations = new DataValidations();\n\n    // for freezepanes, split, zoom, gridlines, etc\n    this.views = options.views || [];\n\n    this.autoFilter = options.autoFilter || null;\n\n    // for images, etc\n    this._media = [];\n\n    // worksheet protection\n    this.sheetProtection = null;\n\n    // for tables\n    this.tables = {};\n\n    this.conditionalFormattings = [];\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  set name(name) {\n    if (name === undefined) {\n      name = `sheet${this.id}`;\n    }\n\n    if (this._name === name) return;\n\n    if (typeof name !== 'string') {\n      throw new Error('The name has to be a string.');\n    }\n\n    if (name === '') {\n      throw new Error('The name can\\'t be empty.');\n    }\n\n    if (name === 'History') {\n      throw new Error('The name \"History\" is protected. Please use a different name.');\n    }\n\n    // Illegal character in worksheet name: asterisk (*), question mark (?),\n    // colon (:), forward slash (/ \\), or bracket ([])\n    if (/[*?:/\\\\[\\]]/.test(name)) {\n      throw new Error(`Worksheet name ${name} cannot include any of the following characters: * ? : \\\\ / [ ]`);\n    }\n\n    if (/(^')|('$)/.test(name)) {\n      throw new Error(`The first or last character of worksheet name cannot be a single quotation mark: ${name}`);\n    }\n\n    if (name && name.length > 31) {\n      // eslint-disable-next-line no-console\n      console.warn(`Worksheet name ${name} exceeds 31 chars. This will be truncated`);\n      name = name.substring(0, 31);\n    }\n\n    if (this._workbook._worksheets.find(ws => ws && ws.name.toLowerCase() === name.toLowerCase())) {\n      throw new Error(`Worksheet name already exists: ${name}`);\n    }\n\n    this._name = name;\n  }\n\n  get workbook() {\n    return this._workbook;\n  }\n\n  // when you're done with this worksheet, call this to remove from workbook\n  destroy() {\n    this._workbook.removeWorksheetEx(this);\n  }\n\n  // Get the bounding range of the cells in this worksheet\n  get dimensions() {\n    const dimensions = new Range();\n    this._rows.forEach(row => {\n      if (row) {\n        const rowDims = row.dimensions;\n        if (rowDims) {\n          dimensions.expand(row.number, rowDims.min, row.number, rowDims.max);\n        }\n      }\n    });\n    return dimensions;\n  }\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  }\n\n  // set the columns from an array of column definitions.\n  // Note: any headers defined will overwrite existing values.\n  set columns(value) {\n    // calculate max header row count\n    this._headerRowCount = value.reduce((pv, cv) => {\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\n      return Math.max(pv, headerCount);\n    }, 0);\n\n    // construct Column objects\n    let count = 1;\n    const columns = (this._columns = []);\n    value.forEach(defn => {\n      const column = new Column(this, count++, false);\n      columns.push(column);\n      column.defn = defn;\n    });\n  }\n\n  getColumnKey(key) {\n    return this._keys[key];\n  }\n\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  }\n\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  }\n\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  }\n\n  // get a single column by col number. If it doesn't exist, create it and any gaps before it\n  getColumn(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      const col = this._keys[c];\n      if (col) return col;\n\n      // otherwise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) {\n      this._columns = [];\n    }\n    if (c > this._columns.length) {\n      let n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  }\n\n  spliceColumns(start, count, ...inserts) {\n    const rows = this._rows;\n    const nRows = rows.length;\n    if (inserts.length > 0) {\n      // must iterate over all rows whether they exist yet or not\n      for (let i = 0; i < nRows; i++) {\n        const rowArguments = [start, count];\n        // eslint-disable-next-line no-loop-func\n        inserts.forEach(insert => {\n          rowArguments.push(insert[i] || null);\n        });\n        const row = this.getRow(i + 1);\n        // eslint-disable-next-line prefer-spread\n        row.splice.apply(row, rowArguments);\n      }\n    } else {\n      // nothing to insert, so just splice all rows\n      this._rows.forEach(r => {\n        if (r) {\n          r.splice(start, count);\n        }\n      });\n    }\n\n    // splice column definitions\n    const nExpand = inserts.length - count;\n    const nKeep = start + count;\n    const nEnd = this._columns.length;\n    if (nExpand < 0) {\n      for (let i = start + inserts.length; i <= nEnd; i++) {\n        this.getColumn(i).defn = this.getColumn(i - nExpand).defn;\n      }\n    } else if (nExpand > 0) {\n      for (let i = nEnd; i >= nKeep; i--) {\n        this.getColumn(i + nExpand).defn = this.getColumn(i).defn;\n      }\n    }\n    for (let i = start; i < start + inserts.length; i++) {\n      this.getColumn(i).defn = null;\n    }\n\n    // account for defined names\n    this.workbook.definedNames.spliceColumns(this.name, start, count, inserts.length);\n  }\n\n  get lastColumn() {\n    return this.getColumn(this.columnCount);\n  }\n\n  get columnCount() {\n    let maxCount = 0;\n    this.eachRow(row => {\n      maxCount = Math.max(maxCount, row.cellCount);\n    });\n    return maxCount;\n  }\n\n  get actualColumnCount() {\n    // performance nightmare - for each row, counts all the columns used\n    const counts = [];\n    let count = 0;\n    this.eachRow(row => {\n      row.eachCell(({col}) => {\n        if (!counts[col]) {\n          counts[col] = true;\n          count++;\n        }\n      });\n    });\n    return count;\n  }\n\n  // =========================================================================\n  // Rows\n\n  _commitRow() {\n    // nop - allows streaming reader to fill a document\n  }\n\n  get _lastRowNumber() {\n    // need to cope with results of splice\n    const rows = this._rows;\n    let n = rows.length;\n    while (n > 0 && rows[n - 1] === undefined) {\n      n--;\n    }\n    return n;\n  }\n\n  get _nextRow() {\n    return this._lastRowNumber + 1;\n  }\n\n  get lastRow() {\n    if (this._rows.length) {\n      return this._rows[this._rows.length - 1];\n    }\n    return undefined;\n  }\n\n  // find a row (if exists) by row number\n  findRow(r) {\n    return this._rows[r - 1];\n  }\n\n  // find multiple rows (if exists) by row number\n  findRows(start, length) {\n    return this._rows.slice(start - 1, start - 1 + length);\n  }\n\n  get rowCount() {\n    return this._lastRowNumber;\n  }\n\n  get actualRowCount() {\n    // counts actual rows that have actual data\n    let count = 0;\n    this.eachRow(() => {\n      count++;\n    });\n    return count;\n  }\n\n  // get a row by row number.\n  getRow(r) {\n    let row = this._rows[r - 1];\n    if (!row) {\n      row = this._rows[r - 1] = new Row(this, r);\n    }\n    return row;\n  }\n\n  // get multiple rows by row number.\n  getRows(start, length) {\n    if (length < 1) return undefined;\n    const rows = [];\n    for (let i = start; i < start + length; i++) {\n      rows.push(this.getRow(i));\n    }\n    return rows;\n  }\n\n  addRow(value, style = 'n') {\n    const rowNo = this._nextRow;\n    const row = this.getRow(rowNo);\n    row.values = value;\n    this._setStyleOption(rowNo, style[0] === 'i' ? style : 'n');\n    return row;\n  }\n\n  addRows(value, style = 'n') {\n    const rows = [];\n    value.forEach(row => {\n      rows.push(this.addRow(row, style));\n    });\n    return rows;\n  }\n\n  insertRow(pos, value, style = 'n') {\n    this.spliceRows(pos, 0, value);\n    this._setStyleOption(pos, style);\n    return this.getRow(pos);\n  }\n\n  insertRows(pos, values, style = 'n') {\n    this.spliceRows(pos, 0, ...values);\n    if (style !== 'n') {\n      // copy over the styles\n      for (let i = 0; i < values.length; i++) {\n        if (style[0] === 'o' && this.findRow(values.length + pos + i) !== undefined) {\n          this._copyStyle(values.length + pos + i, pos + i, style[1] === '+');\n        } else if (style[0] === 'i' && this.findRow(pos - 1) !== undefined) {\n          this._copyStyle(pos - 1, pos + i, style[1] === '+');\n        }\n      }\n    }\n    return this.getRows(pos, values.length);\n  }\n\n  // set row at position to same style as of either pervious row (option 'i') or next row (option 'o')\n  _setStyleOption(pos, style = 'n') {\n    if (style[0] === 'o' && this.findRow(pos + 1) !== undefined) {\n      this._copyStyle(pos + 1, pos, style[1] === '+');\n    } else if (style[0] === 'i' && this.findRow(pos - 1) !== undefined) {\n      this._copyStyle(pos - 1, pos, style[1] === '+');\n    }\n  }\n\n  _copyStyle(src, dest, styleEmpty = false) {\n    const rSrc = this.getRow(src);\n    const rDst = this.getRow(dest);\n    rDst.style = copyStyle(rSrc.style);\n    // eslint-disable-next-line no-loop-func\n    rSrc.eachCell({includeEmpty: styleEmpty}, (cell, colNumber) => {\n      rDst.getCell(colNumber).style = copyStyle(cell.style);\n    });\n    rDst.height = rSrc.height;\n  }\n\n  duplicateRow(rowNum, count, insert = false) {\n    // create count duplicates of rowNum\n    // either inserting new or overwriting existing rows\n\n    const rSrc = this._rows[rowNum - 1];\n    const inserts = new Array(count).fill(rSrc.values);\n    this.spliceRows(rowNum + 1, insert ? 0 : count, ...inserts);\n\n    // now copy styles...\n    for (let i = 0; i < count; i++) {\n      const rDst = this._rows[rowNum + i];\n      rDst.style = rSrc.style;\n      rDst.height = rSrc.height;\n      // eslint-disable-next-line no-loop-func\n      rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\n        rDst.getCell(colNumber).style = cell.style;\n      });\n    }\n  }\n\n  spliceRows(start, count, ...inserts) {\n    // same problem as row.splice, except worse.\n    const nKeep = start + count;\n    const nInserts = inserts.length;\n    const nExpand = nInserts - count;\n    const nEnd = this._rows.length;\n    let i;\n    let rSrc;\n    if (nExpand < 0) {\n      // remove rows\n      if (start === nEnd) {\n        this._rows[nEnd - 1] = undefined;\n      }\n      for (i = nKeep; i <= nEnd; i++) {\n        rSrc = this._rows[i - 1];\n        if (rSrc) {\n          const rDst = this.getRow(i + nExpand);\n          rDst.values = rSrc.values;\n          rDst.style = rSrc.style;\n          rDst.height = rSrc.height;\n          // eslint-disable-next-line no-loop-func\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\n            rDst.getCell(colNumber).style = cell.style;\n          });\n          this._rows[i - 1] = undefined;\n        } else {\n          this._rows[i + nExpand - 1] = undefined;\n        }\n      }\n    } else if (nExpand > 0) {\n      // insert new cells\n      for (i = nEnd; i >= nKeep; i--) {\n        rSrc = this._rows[i - 1];\n        if (rSrc) {\n          const rDst = this.getRow(i + nExpand);\n          rDst.values = rSrc.values;\n          rDst.style = rSrc.style;\n          rDst.height = rSrc.height;\n          // eslint-disable-next-line no-loop-func\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\n            rDst.getCell(colNumber).style = cell.style;\n\n            // remerge cells accounting for insert offset\n            if (cell._value.constructor.name === 'MergeValue') {\n              const cellToBeMerged = this.getRow(cell._row._number + nInserts).getCell(colNumber);\n              const prevMaster = cell._value._master;\n              const newMaster = this.getRow(prevMaster._row._number + nInserts).getCell(prevMaster._column._number);\n              cellToBeMerged.merge(newMaster);\n            }\n          });\n        } else {\n          this._rows[i + nExpand - 1] = undefined;\n        }\n      }\n    }\n\n    // now copy over the new values\n    for (i = 0; i < nInserts; i++) {\n      const rDst = this.getRow(start + i);\n      rDst.style = {};\n      rDst.values = inserts[i];\n    }\n\n    // account for defined names\n    this.workbook.definedNames.spliceRows(this.name, start, count, nInserts);\n  }\n\n  // iterate over every row in the worksheet, including maybe empty rows\n  eachRow(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = undefined;\n    }\n    if (options && options.includeEmpty) {\n      const n = this._rows.length;\n      for (let i = 1; i <= n; i++) {\n        iteratee(this.getRow(i), i);\n      }\n    } else {\n      this._rows.forEach(row => {\n        if (row && row.hasValues) {\n          iteratee(row, row.number);\n        }\n      });\n    }\n  }\n\n  // return all rows as sparse array\n  getSheetValues() {\n    const rows = [];\n    this._rows.forEach(row => {\n      if (row) {\n        rows[row.number] = row.values;\n      }\n    });\n    return rows;\n  }\n\n  // =========================================================================\n  // Cells\n\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\n  findCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this._rows[address.row - 1];\n    return row ? row.findCell(address.col) : undefined;\n  }\n\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\n  getCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this.getRow(address.row);\n    return row.getCellEx(address);\n  }\n\n  // =========================================================================\n  // Merge\n\n  // convert the range defined by ['tl:br'], [tl,br] or [t,l,b,r] into a single 'merged' cell\n  mergeCells(...cells) {\n    const dimensions = new Range(cells);\n    this._mergeCellsInternal(dimensions);\n  }\n\n  mergeCellsWithoutStyle(...cells) {\n    const dimensions = new Range(cells);\n    this._mergeCellsInternal(dimensions, true);\n  }\n\n  _mergeCellsInternal(dimensions, ignoreStyle) {\n    // check cells aren't already merged\n    _.each(this._merges, merge => {\n      if (merge.intersects(dimensions)) {\n        throw new Error('Cannot merge already merged cells');\n      }\n    });\n\n    // apply merge\n    const master = this.getCell(dimensions.top, dimensions.left);\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\n        // merge all but the master cell\n        if (i > dimensions.top || j > dimensions.left) {\n          this.getCell(i, j).merge(master, ignoreStyle);\n        }\n      }\n    }\n\n    // index merge\n    this._merges[master.address] = dimensions;\n  }\n\n  _unMergeMaster(master) {\n    // master is always top left of a rectangle\n    const merge = this._merges[master.address];\n    if (merge) {\n      for (let i = merge.top; i <= merge.bottom; i++) {\n        for (let j = merge.left; j <= merge.right; j++) {\n          this.getCell(i, j).unmerge();\n        }\n      }\n      delete this._merges[master.address];\n    }\n  }\n\n  get hasMerges() {\n    // return true if this._merges has a merge object\n    return _.some(this._merges, Boolean);\n  }\n\n  // scan the range defined by ['tl:br'], [tl,br] or [t,l,b,r] and if any cell is part of a merge,\n  // un-merge the group. Note this function can affect multiple merges and merge-blocks are\n  // atomic - either they're all merged or all un-merged.\n  unMergeCells(...cells) {\n    const dimensions = new Range(cells);\n\n    // find any cells in that range and unmerge them\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\n        const cell = this.findCell(i, j);\n        if (cell) {\n          if (cell.type === Enums.ValueType.Merge) {\n            // this cell merges to another master\n            this._unMergeMaster(cell.master);\n          } else if (this._merges[cell.address]) {\n            // this cell is a master\n            this._unMergeMaster(cell);\n          }\n        }\n      }\n    }\n  }\n\n  // ===========================================================================\n  // Shared/Array Formula\n  fillFormula(range, formula, results, shareType = 'shared') {\n    // Define formula for top-left cell and share to rest\n    const decoded = colCache.decode(range);\n    const {top, left, bottom, right} = decoded;\n    const width = right - left + 1;\n    const masterAddress = colCache.encodeAddress(top, left);\n    const isShared = shareType === 'shared';\n\n    // work out result accessor\n    let getResult;\n    if (typeof results === 'function') {\n      getResult = results;\n    } else if (Array.isArray(results)) {\n      if (Array.isArray(results[0])) {\n        getResult = (row, col) => results[row - top][col - left];\n      } else {\n        // eslint-disable-next-line no-mixed-operators\n        getResult = (row, col) => results[(row - top) * width + (col - left)];\n      }\n    } else {\n      getResult = () => undefined;\n    }\n    let first = true;\n    for (let r = top; r <= bottom; r++) {\n      for (let c = left; c <= right; c++) {\n        if (first) {\n          this.getCell(r, c).value = {\n            shareType,\n            formula,\n            ref: range,\n            result: getResult(r, c),\n          };\n          first = false;\n        } else {\n          this.getCell(r, c).value = isShared\n            ? {\n                sharedFormula: masterAddress,\n                result: getResult(r, c),\n              }\n            : getResult(r, c);\n        }\n      }\n    }\n  }\n\n  // =========================================================================\n  // Images\n  addImage(imageId, range) {\n    const model = {\n      type: 'image',\n      imageId,\n      range,\n    };\n    this._media.push(new Image(this, model));\n  }\n\n  getImages() {\n    return this._media.filter(m => m.type === 'image');\n  }\n\n  addBackgroundImage(imageId) {\n    const model = {\n      type: 'background',\n      imageId,\n    };\n    this._media.push(new Image(this, model));\n  }\n\n  getBackgroundImageId() {\n    const image = this._media.find(m => m.type === 'background');\n    return image && image.imageId;\n  }\n\n  // =========================================================================\n  // Worksheet Protection\n  protect(password, options) {\n    // TODO: make this function truly async\n    // perhaps marshal to worker thread or something\n    return new Promise(resolve => {\n      this.sheetProtection = {\n        sheet: true,\n      };\n      if (options && 'spinCount' in options) {\n        // force spinCount to be integer >= 0\n        options.spinCount = Number.isFinite(options.spinCount) ? Math.round(Math.max(0, options.spinCount)) : 100000;\n      }\n      if (password) {\n        this.sheetProtection.algorithmName = 'SHA-512';\n        this.sheetProtection.saltValue = Encryptor.randomBytes(16).toString('base64');\n        this.sheetProtection.spinCount = options && 'spinCount' in options ? options.spinCount : 100000; // allow user specified spinCount\n        this.sheetProtection.hashValue = Encryptor.convertPasswordToHash(\n          password,\n          'SHA512',\n          this.sheetProtection.saltValue,\n          this.sheetProtection.spinCount\n        );\n      }\n      if (options) {\n        this.sheetProtection = Object.assign(this.sheetProtection, options);\n        if (!password && 'spinCount' in options) {\n          delete this.sheetProtection.spinCount;\n        }\n      }\n      resolve();\n    });\n  }\n\n  unprotect() {\n    this.sheetProtection = null;\n  }\n\n  // =========================================================================\n  // Tables\n  addTable(model) {\n    const table = new Table(this, model);\n    this.tables[model.name] = table;\n    return table;\n  }\n\n  getTable(name) {\n    return this.tables[name];\n  }\n\n  removeTable(name) {\n    delete this.tables[name];\n  }\n\n  getTables() {\n    return Object.values(this.tables);\n  }\n\n  // ===========================================================================\n  // Conditional Formatting\n  addConditionalFormatting(cf) {\n    this.conditionalFormattings.push(cf);\n  }\n\n  removeConditionalFormatting(filter) {\n    if (typeof filter === 'number') {\n      this.conditionalFormattings.splice(filter, 1);\n    } else if (filter instanceof Function) {\n      this.conditionalFormattings = this.conditionalFormattings.filter(filter);\n    } else {\n      this.conditionalFormattings = [];\n    }\n  }\n\n  // ===========================================================================\n  // Deprecated\n  get tabColor() {\n    // eslint-disable-next-line no-console\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\n    return this.properties.tabColor;\n  }\n\n  set tabColor(value) {\n    // eslint-disable-next-line no-console\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\n    this.properties.tabColor = value;\n  }\n\n  // ===========================================================================\n  // Model\n\n  get model() {\n    const model = {\n      id: this.id,\n      name: this.name,\n      dataValidations: this.dataValidations.model,\n      properties: this.properties,\n      state: this.state,\n      pageSetup: this.pageSetup,\n      headerFooter: this.headerFooter,\n      rowBreaks: this.rowBreaks,\n      views: this.views,\n      autoFilter: this.autoFilter,\n      media: this._media.map(medium => medium.model),\n      sheetProtection: this.sheetProtection,\n      tables: Object.values(this.tables).map(table => table.model),\n      conditionalFormattings: this.conditionalFormattings,\n    };\n\n    // =================================================\n    // columns\n    model.cols = Column.toModel(this.columns);\n\n    // ==========================================================\n    // Rows\n    const rows = (model.rows = []);\n    const dimensions = (model.dimensions = new Range());\n    this._rows.forEach(row => {\n      const rowModel = row && row.model;\n      if (rowModel) {\n        dimensions.expand(rowModel.number, rowModel.min, rowModel.number, rowModel.max);\n        rows.push(rowModel);\n      }\n    });\n\n    // ==========================================================\n    // Merges\n    model.merges = [];\n    _.each(this._merges, merge => {\n      model.merges.push(merge.range);\n    });\n\n    return model;\n  }\n\n  _parseRows(model) {\n    this._rows = [];\n    model.rows.forEach(rowModel => {\n      const row = new Row(this, rowModel.number);\n      this._rows[row.number - 1] = row;\n      row.model = rowModel;\n    });\n  }\n\n  _parseMergeCells(model) {\n    _.each(model.mergeCells, merge => {\n      // Do not merge styles when importing an Excel file\n      // since each cell may have different styles intentionally.\n      this.mergeCellsWithoutStyle(merge);\n    });\n  }\n\n  set model(value) {\n    this.name = value.name;\n    this._columns = Column.fromModel(this, value.cols);\n    this._parseRows(value);\n\n    this._parseMergeCells(value);\n    this.dataValidations = new DataValidations(value.dataValidations);\n    this.properties = value.properties;\n    this.pageSetup = value.pageSetup;\n    this.headerFooter = value.headerFooter;\n    this.views = value.views;\n    this.autoFilter = value.autoFilter;\n    this._media = value.media.map(medium => new Image(this, medium));\n    this.sheetProtection = value.sheetProtection;\n    this.tables = value.tables.reduce((tables, table) => {\n      const t = new Table();\n      t.model = table;\n      tables[table.name] = t;\n      return tables;\n    }, {});\n    this.conditionalFormattings = value.conditionalFormattings;\n  }\n}\n\nmodule.exports = Worksheet;\n"],"mappings":"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"}
>>>>>>> 95bdce0e2476f31a1a1d26b5d1f458cd5295e48d
